<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JVM系列 之 深入理解Java 类加载器</title>
      <link href="/posts/58090.html"/>
      <url>/posts/58090.html</url>
      
        <content type="html"><![CDATA[<h1>🚀JVM系列 之 深入理解Java 类加载器</h1><p>Hey 大家好，我是 Shio👋。今天我们将深入探讨 Java 的类加载器，这是 Java 虚拟机（JVM）中一个重要的概念。在上一篇中，我们了解到 Java 类加载分为多个步骤，其中只有加载步骤中的读取二进制流与初始化部分是由上层开发者控制的, 剩下的步骤都由 JVM 掌控 。 这是为了符合面向对象中的开闭原则和封装思想。</p><h2 id="📦-类加载器的分类">📦 类加载器的分类</h2><p>首先要声明的是，类加载器的分类属于 JVM 规范，是一种抽象的概念。各个 JVM 的实现方式可能不同。在JVM 规范中，类加载器分为<strong>启动类加载器</strong>和<strong>非启动类加载器</strong>。本节我们只讲最常见和主流 <strong>HotSpot</strong>:</p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401051414202.png" alt="image-20240105141428134"></p><ul><li><p><em><strong>启动类加载器</strong></em></p><ul><li><p><strong>Bootstrap Class Loader</strong>：</p><ul><li><p>采用 C 和 C++ 实现，嵌套在 JVM 内部，无法被程序引用。</p></li><li><p>主要加载 Java 的核心类库，如 Java Home lib 路径下的包或由启动参数指定的核心类库。</p></li><li><p>只加载包名在白名单中的文件，例如以 <code>java</code>、<code>javax</code> 开头的包。</p></li></ul></li></ul></li><li><p><em><strong>非启动类加载器</strong></em></p><ul><li><strong>Extension Class Loader</strong>：<ul><li>由 Launcher 内部类 <code>ExtensionClassLoader</code> 实现。</li><li>用于加载 Java API 的拓展，对 Java 类库提供一些补充能力。</li></ul></li><li><strong>Application Class Loader</strong>：<ul><li>由 Launcher 内部类 <code>AppClassLoader</code> 实现。</li><li>主要加载环境变量 <code>classpath</code> 或系统属性指定路径下的类库。</li><li>用于加载上层程序员编写的代码和第三方类库。</li></ul></li><li><strong>User Class Loader</strong>：<ul><li>用户自定义的类加载器，继承自 <code>java.lang.ClassLoader</code>。</li><li>允许用户获取任何来源的字节码进行加载。L</li></ul></li></ul></li></ul><p>❓ 问题  能不能用Extension ClassLoader 来加载我自己写的代码 或者说是一些第三方类库?</p><p><a href="https://cloud.tencent.com/developer/ask/sof/102226389">StackOverFlow 国内镜像访问CLASSPATH vs java.ext.dirs-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>直接上结论</p><p>你完全<strong>可以这么做</strong> 但是没有必要 这种操作呢 <strong>不符合规范</strong>工程项目中的分层和抽象 就像你完全可以把一个项目 所有的代码都写在一个文件中, 但是是<strong>不推荐</strong>这么做的</p><h2 id="🌐-类加载器的命名空间">🌐 类加载器的命名空间</h2><p>每个类加载器都有属于自己的<strong>命名空间</strong>，即使加载了相同限定名的类，JVM 也认为它们是<strong>不同的类</strong>。这有助于避免不同类加载器间的混乱，提高程序的开发和维护难度。</p><p>判断是否是同一个类的标准<br>在JVM中表示两个class对象是否为同一个类的两个必要条件：</p><ul><li><p>类的<strong>完整类名</strong>必须一致，包括包名。</p></li><li><p>加载这个类的<strong>ClassLoader</strong>（指ClassLoader实例对象）必须相同</p></li></ul><p>换句话说，在JVM中，即使这两个类对象（class对象）来源同一个Class文件，被同一个虚拟机所加载，但只要加载它们的ClassLoader实例对象不同，那么这两个对象也不是相等的。</p><p>示例(来源于&lt;&lt;深入理解Java虚拟机&gt;&gt;):</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.study;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">myLoader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassLoader</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> Class&lt;?&gt; loadClass(String name) <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> name.substring(name.lastIndexOf(<span class="string">&quot;.&quot;</span>) + <span class="number">1</span>) + <span class="string">&quot;.class&quot;</span>;</span><br><span class="line">                    <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> getClass().getResourceAsStream(fileName);</span><br><span class="line">                    <span class="keyword">if</span> (is == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">super</span>.loadClass(name);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">byte</span>[] b = <span class="keyword">new</span> <span class="title class_">byte</span>[is.available()];</span><br><span class="line">                    is.read(b);</span><br><span class="line">                    <span class="keyword">return</span> defineClass(name, b, <span class="number">0</span>, b.length);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ClassNotFoundException</span>(name);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> myLoader.loadClass(<span class="string">&quot;com.study.Test&quot;</span>).newInstance();</span><br><span class="line">        System.out.println(obj.getClass());</span><br><span class="line">        System.out.println(obj <span class="keyword">instanceof</span> com.study.Test);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">class com.study.Test</span><br><span class="line">false</span><br></pre></td></tr></table></figure><p>注意:</p><p>​上述例子中,  只有当这个限定名类(com.study.Test)与这个Main类在<strong>同一个包下时</strong>(com.study)，返回的结果才会为<strong>false</strong>，因为 如果这个限定名类与Main类不在同一个包下时，<strong>InputStream is = getClass().getResourceAsStream(filename)</strong>, 不同包下这个方法<strong>返回null</strong>，然后直接走的<strong>super方法</strong>，你需要去修改下filename才能找到文件位置，返回的结果才能为true, 而同包的话就可以直接找到</p><h2 id="🤝-双亲委派模型">🤝 双亲委派模型</h2><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401051651853.png" alt="image-20240105145552504"></p><p>JVM 引入了<strong>双亲委派模型</strong>，即类加载器在收到加载请求时不会立即加载，而是<strong>传递</strong>给<strong>父加载器</strong>。只有父加载器无法完成加载时，子加载器才会尝试加载。这样确保了每个类只会被<strong>加载一次</strong>，<strong>避免了混乱</strong>。</p><p>双亲委派模型通过 <code>java.lang.ClassLoader</code> 的 <code>loadClass</code> 方法实现。该方法首先检查是否已加载，然后传递给父加载器，如果父加载器无法加载，则调用 <code>findClass</code> 方法加载。</p><p>接下来，我们通过源码来理解双亲委派模型的实现。</p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401051651773.png" alt="image-20240105150139002"></p><p>在java.lang.ClassLoader中的<strong>loadClass方法</strong>中，</p><ul><li><p>首先检查类是否已经加载,</p></li><li><p>如果没有，则启动加载流程。<code>parent</code>变量代表当前ClassLoader的父加载器，这里通过<strong>组合而非继承</strong>实现父子关系。当**<code>parent</code>为null<strong>时，约定为</strong>Bootstrap Class Loader**。</p></li><li><p>如果<code>parent</code>不为null，将加载请求传递给父加载器。只有父加载器无法完成加载时，子加载器才会尝试自己加载，这是双亲委派的关键。</p></li></ul><p><strong>findClass方法</strong>表示如何<strong>寻找指定限定名的class</strong>，需要各个类加载器<strong>自己实现</strong>。</p><blockquote><p>查找具有指定二进制名称的类。该方法应由遵循委托模式加载类的类加载器实现重载，并将在检查父类加载器是否有请求的类后由 loadClass 方法调用。</p></blockquote><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401051506271.png" alt="image-20240105150638331"></p><p>Extension Class Loader和Application Class Loader使用了相同的逻辑，将类的限定名转化为文件路径，通过UCP（Unified Class Path）寻找文件资源</p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401051519801.png" alt="image-20240105151929138"></p><p>找到资源之后, 然后调用<code>defineClass</code>进行类加载的后续流程。<code>defineClass</code>方法被<code>final</code>修饰，表示最终由java.lang.ClassLoader来进行后续操作。</p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401051516945.png" alt="image-20240105151611984"></p><h4 id="❓-双亲委派模型的疑问">❓ 双亲委派模型的疑问</h4><p><strong>问题一</strong>：不同的类加载器，除了读取二进制流的动作和范围不一样，后续的加载逻辑是否也不一样？根据源码，我们了解到所有非Bootstrap Class Loader都继承自java.util.ClassLoader，都是由这个类的<code>defineClass</code>方法来进行后续处理。</p><p><strong>问题二</strong>：遇到限定名一样的类，这么多类加载器会不会产生混乱？根据源码，我们知道不同类加载器有不同的加载范围，越核心的类越由上层加载器加载。一旦某个类被加载，<strong>被动情况下不会</strong>再去加载相同限定名的类，<strong>有效避免混乱</strong>。</p><p>尽管双亲委派模型在大部分情况下是透明且可靠的，但并非具有强约束力的模型，存在设计缺陷, 在大多数情况下, 双亲委派模型是生效而且好用的。</p><p>但在一些情况下，双亲委派模型<strong>可以被主动破坏</strong>。例如，通过重写<code>loadClass</code>方法，我们可以破坏原有的双亲委派逻辑，导致限定名对应两种不同的情况。(就像上文中证明类加载器命名空间的那个例子, 重写了loadClass方法, 破坏了原有双亲委派模型, 出现了一个限定名对应两种不同Class的情况, 除非有特殊业务场景, <strong>一般不要主动破坏</strong>)</p><h2 id="🚨-双亲委派模型的破坏">🚨 双亲委派模型的破坏</h2><h3 id="🩸-First-Blood">🩸 First Blood</h3><p>既然JVM推荐并希望开发者遵循双亲委派模型</p><p>为什么不将 <code>loadClass</code> 方法设定成 <code>final</code> 来限制重写?  这样上层开发者就不久必须强制遵循双亲委派逻辑了么?</p><p>事实上，Java.lang.ClassLoader在Java很早的版本就存在了, 而双亲委派模型是在JDK1.2才引入的</p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401051534628.png" alt="image-20240105153413082"></p><p>也就说 , 在JDK1.2版本引入双亲委派模型的特性之前就<strong>已经存在着大量重写loadClass方法的代码</strong>了，而JVM无法拒绝<strong>支持这些旧代码</strong>，只能采取<strong>补救措施</strong>。因此，JDK1.2版本后引入了 <code>findClass</code> 方法来推荐用户重写，而不是直接重写 <code>loadClass</code> 方法，这样就依然能够符合双亲委派模型的逻辑。</p><p>这算是<strong>第一次对双亲委派模型的破坏</strong></p><h3 id="🩸-🩸-Double-Kill">🩸 🩸 Double Kill</h3><p>有了第一次, 自然会有第二次</p><p>以JDK操作数据库为例, JDK想要有操作数据库的功能, 而数据库有很多种, 而且会随着时间而增多, JDK不可能把所有数据库的代码一一实现, 那么比较合理的就是 JDK提供一组规范接口, 由不同的数据库厂商实现这组接口即可</p><p>那么问题就出现了, <strong>JDK自己定义的接口类</strong>的加载一定是使用到了<strong>上层类加载器</strong>(BootStrap ClassLoader), 但当你调用JDK接口时必然会触发第三方类库的动态加载, 而<strong>第三方厂商的实现类</strong>加载, 使用的是<strong>下层类加载器</strong>(Application ClassLoader) , 这就不符合自下而而上的委派加载顺序了, 而是出现了<strong>上层类加载器放下身段去调用下层类加载器</strong>的情况 这就产生了<strong>对双亲委派模型的破坏</strong></p><p>示例代码:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/数据库名?serverTimezone=UTC&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;数据库账号名&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;数据库账号密码&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">            System.out.println(<span class="string">&quot;DriverManager 的ClassLoader为 : &quot;</span> + DriverManager.class.getClassLoader());</span><br><span class="line">            Enumeration&lt;Driver&gt; drivers = DriverManager.getDrivers();</span><br><span class="line">            <span class="keyword">while</span> (drivers.hasMoreElements()) &#123;</span><br><span class="line">                <span class="type">Driver</span> <span class="variable">driver</span> <span class="operator">=</span> drivers.nextElement();</span><br><span class="line">                System.out.print(driver + <span class="string">&quot; 的ClassLoader为 : &quot;</span>);</span><br><span class="line">                System.out.println(driver.getClass().getClassLoader());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(conn);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果:</p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401051639227.png" alt="image-20240105163920912"></p><p><code>null</code> 即 BootStrap ClassLoader</p><p><code>sun.misc.Launcher$AppClassLoader@18b4aac2</code>  即 Application ClassLoader</p><p>以<code>DriverManager</code>类为例，其类加载器为<code>null</code>，即约定为<code>bootstrap class loader</code>，而<code>DriverManager</code>内部加载的两个<code>Driver</code>的类加载器均为<code>application class loader</code>，这表明<code>bootstrap class loader</code>委托了<code>application class loader</code>加载了来自第三方的类，这就是<strong>SPI</strong>对双亲委派模型的破坏。</p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401051618628.png" alt="image-20240105161803714"></p><p>进一步分析<code>DriverManager</code>的源码可以发现，其主动对第三方Driver类进行加载，扫描所有注册为<code>java.sql.Driver</code>开头的第三方类，然后使用<code>ServiceLoader</code>进行加载，而<code>ServiceLoader</code>内部使用了当前线程context中的类加载器，默认为<code>application class loader</code>，因此这些第三方类也能够被正常加载，也从而破坏了双亲委派模型的约定。</p><p>这便是<strong>第二次对双亲委派模型的破坏</strong></p><h3 id="🩸-🩸-🩸-Triple-Kill">🩸 🩸 🩸 Triple Kill</h3><p>随着对模块化和热替换的追求，希望在着程序运行期间, 动态地对部分组件代码进行替换，可想而知这里又会涉及到很多的自由的类加载操作, 所以又将对双亲委派模型的践踏。</p><p>综上, 尽管双亲委派模型在大部分情况下有效，但在某些场景下可被主动破坏。主要有三次破坏：</p><ol><li><strong>自定义类加载器</strong>：用户可以通过自定义类加载器重写 <code>loadClass</code> 方法，破坏默认的委派逻辑。</li><li><strong>Java SPI 机制</strong>：在服务提供者接口（SPI）中，JDK 会主动加载第三方实现，违反了双亲委派的加载顺序。</li><li><strong>模块化和热替换</strong>：随着对模块化和热替换的追求，程序可能会动态地对部分组件代码进行替换，导致对双亲委派模型的践踏。</li></ol><h2 id="📚-总结">📚 总结</h2><p>尽管双亲委派模型被破坏了三次，它在大部分场景下仍然是一个有效、透明的设计。在发现缺陷时，JVM 设计者采取了一些补救措施。总体而言，双亲委派模型是一个不错的设计，如果有更好的设计思路，欢迎分享讨论。</p><p>希望通过本文的介绍，大家对 Java 类加载器有了更深入的理解。下一篇我们将继续探讨 Java 中的其他关键概念，敬请期待！如果有任何问题或建议，欢迎留言交流。感谢阅读！ 🚀</p><p><em><strong>参考文献</strong>:</em></p><p><em>图文主要来源</em></p><ul><li><p><em>[[寒食君JVM系列](<a href="https://space.bilibili.com/1578320">寒食君的个人空间-寒食君个人主页-哔哩哔哩视频 (bilibili.com)</a>)]</em></p></li><li><p><em>[<a href="https://link.zhihu.com/?target=http%3A//www.ibm.com/developerworks/cn/java/j-lo-classloader/">深入探讨 Java 类加载器-成富</a>]</em></p></li><li><p><em>[深入理解Java虚拟机：JVM高级特性与最佳实践].周志明</em></p></li><li><p><a href="https://docs.oracle.com/javase/specs/jvms/se8/html/index.html">The Java® Virtual Machine Specification (oracle.com)</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> JVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 类加载器 </tag>
            
            <tag> JVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM系列 之 自底向上理解Java内存模型</title>
      <link href="/posts/24862.html"/>
      <url>/posts/24862.html</url>
      
        <content type="html"><![CDATA[<h1>🌱JVM系列 之 自底向上理解Java内存模型</h1><p>Hey 大家好，我是 Shio👋。今天我们将深入探讨Java 内存模型</p><p>⚠️ 注意!!!</p><p>🚧🚧🚧 本文还未完成🚧🚧🚧</p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401052153173.png" alt="image-20240105215354498"></p><h2 id="💾内存模型发展">💾内存模型发展</h2><h3 id="🚀-单处理器时代的纵向优化">🚀 单处理器时代的纵向优化</h3><p>在单处理器计算机时代，程序员只需编写单线程程序，除了算法降低复杂度外,  只能依赖硬件和编译器进行<strong>纵向优化</strong>。</p><p>随着硬件发展速度趋于平缓，工程师们开始追求<strong>横向拓展</strong>，即在单台计算机中使用更多的处理器。</p><h3 id="👾-缓存的引入与多处理器时代的问题">👾 缓存的引入与多处理器时代的问题</h3><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401052157605.png" alt="image-20240105215702513" style="zoom: 80%;" /><p>为弥补CPU处理速度与内存读写速度的差距，引入了缓存以提高效率。然而，在多处理器环境下，缓存带来了数据不一致的问题。</p><h3 id="🚧-缓存一致性协议的设计">🚧 缓存一致性协议的设计</h3><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401052200730.png" alt="image-20240105215925754" style="zoom: 80%;" /><p>为此科学家们设计了<strong>缓存一致性协议</strong>，解决多个CPU缓存之间的同步问题这些协议, 保证了数据的一致性。</p><p>大致分为<strong>窥探型</strong>和基于<strong>目录型</strong>。</p><p>可想而知, 为了保证多个CPU缓存一致性和同步, 协议中一定涉及到<strong>等待</strong>和<strong>唤醒</strong>等同步步骤</p><p>对于CPU这种运算速率极快的组件来说, 任何等待都是对其性能极大的浪费 (CPU A 在读取 D时还需要等待 CPU B 将D写回到内存)</p><h3 id="🛠-优化与异步化">🛠 优化与异步化</h3><img src="Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.assets/image-20240105220954445.png" alt="image-20240105220954445" style="zoom:80%;" /><p>为减少性能问题，将CPU<strong>同步改为异步</strong>。(CPU A 在读取 D时, 注册一个读取D的消息, 然后CPUA就能去做自己的事情, 等CPUB写回数据D后 响应这个注册消息, CPU发现消息被响应后再去读D, 这样就能提高效率)</p><p>通过注册消息和响应的方式，提升了数据访问的效率。</p><p>然而，这可能带来<strong>指令重排序</strong>的问题，CPU仍需确保程序执行结果的正确性</p><p>具体实现可以参考MESI缓存一致性协议这篇博客, 会对Store Buffer,   Store Forwarding, Invaild Queue, 读屏障, 写屏障等相关概念进行讲解</p><h2 id="🚀-Java线程模型">🚀 Java线程模型</h2><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401052222794.png" alt="image-20240105222249634" style="zoom:80%;" /><p>随着高级语言的流行，工程师们开始设计<strong>编程语言级别</strong>的内存模型，以实现一致性的内存视图。</p><h3 id="🌐-Java线程模型">🌐 Java线程模型</h3><p>在<strong>硬件内存模型</strong>之上，还存在着为编程语言设计的内存模型，比如<strong>Java内存模型</strong>,  它定义了多个线程之间的交互方式和行为。</p><p>Java内存模型<strong>屏蔽</strong>了各种硬件和操作系统的内存访问差异，提供了一个<strong>统一的内存视图</strong>给开发者使用, 实现了Java程序能够在各种硬件平台下都能按照预期方式运行 。</p><p>Java内存模型的抽象如下图所示：</p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401052226009.png" alt="image-20240105222620913" style="zoom: 80%;" /><p>如上图, 每个工作线程都拥有独占的本地内存, 本地内存中存储的是私有变量以及共享变量的副本, 并且使用一定机制来控制本地内存和贮存之间的读写数据时的同步问题</p><h3 id="🗄-本地内存的构成">🗄 本地内存的构成</h3><p>工作线程的本地内存可以抽象为<strong>线程栈（Thread Stack）<strong>和</strong>堆（Heap）</strong>。</p><p>在线程栈中，有两种类型的变量：原始类型的变量（如int、char）总是存储在线程栈上。而对象类型的变量，它的<strong>引用</strong>或者说指针是存储在线程栈上的，而具体的对象则存储在堆上。</p><p>而在堆中，保存了对象本身和由该对象引用的其他对象。</p><p>可以理解为，线程栈和堆都是对物理内存的一种<strong>抽象</strong>。这样的设计使开发者只需要关注自己编写的程序中涉及线程栈和堆的部分，而<strong>无需关心</strong>底层寄存器、CPU缓存, 内存的实现。</p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401052228330.png" alt="image-20240105222849465" style="zoom: 80%;" /><h3 id="🔗-JVM内存模型与硬件内存映射关系">🔗 JVM内存模型与硬件内存映射关系</h3><p>可以猜测, <strong>线程栈(Thread Stack)<strong>大部分情况在读写内存, 对内存读写</strong>性能</strong>要求高, 所以是在<strong>寄存器和缓存</strong>来实现</p><p>而 <strong>堆(Heap)</strong> 需要<strong>存储</strong>大量的内存, 需要更大的容量, 那么他可能大部分都是使用<strong>主存</strong>来实现的</p><p>这种映射关系使得Java程序在不同的硬件平台上都能够按照<strong>一致的方式</strong>进行运行，从而提供了强大的<strong>可移植性</strong>和<strong>跨平台特性</strong>。</p><h3 id="📡-Java线程通信和指令">📡 Java线程通信和指令</h3><p>Java内存模型通过一些机制来实现主存与工作内存之间的数据传输与同步。</p><p>这种数据传递是线程之间的通信方式，主存与工作内存之间通过八个指令来实现数据的读写与同步。这些指令可以根据其作用分为两类：储存相关指令和工作内存相关指令。</p><table><thead><tr><th>作用于内存</th><th>作用于工作内存</th></tr></thead><tbody><tr><td>lock : 锁定</td><td>load : 载入</td></tr><tr><td>unlock : 解锁</td><td>use : 使用</td></tr><tr><td>read : 读取</td><td>assign : 赋值</td></tr><tr><td>write : 写入</td><td>store : 存储</td></tr></tbody></table><p>主存相关指令用于主存和工作内存的数据传输，包括<code>lock</code>、<code>unlock</code>、<code>read</code>和<code>write</code>指令。工作内存相关指令用于工作内存上的数据读写和同步操作，包括``load <code>、</code>use<code>、</code>assign<code>和</code>store`指令。</p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401052327643.png" alt="image-20240105224852649" style="zoom: 80%;" /><p>了解这些指令的存在和作用，而无需详细记住每个指令的内容，有助于理解Java内存模型的设计原理。</p><h3 id="🔒-可见性和原子性问题">🔒 可见性和原子性问题</h3><p>在多线程编程中，可能会遇到<strong>可见性</strong>和<strong>原子性</strong>问题。</p><p>可见性问题指的是，当一个线程将变量刷新到主内存后，其他线程如何获取变量的最新值。</p><p>原子性问题指的是，多个线程同时对变量进行操作，结果是否符合预期。</p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401052327022.png" alt="image-20240105225526017" style="zoom: 80%;" /><p>假设本地内存A和本地内存B都保存了变量X的副本，且值都为1。线程A将X修改为2并刷新到主存中，此时线程B想要读取变量X，默认情况下将从本地内存B中读取，而此时本地内存B中的X仍旧是1，所以线程B无法获取到最新的值, 这就是一个可见性问题。</p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401052327833.png" alt="image-20240105225724949" style="zoom:80%;" /><p>假如线程A和B都从主存中读取了变量X, 此时X是等于1的分别在各自的本地内存中自增了, 以X变为了2 然后再刷新回主存, 这里就有一个问题 实际上总共自增了2次 , X应该是变为3的 , 但是主存中的X却为2, 这就是一个原子性问题。</p><h2 id="🔍-可见性与原子性问题">🔍 可见性与原子性问题</h2><h3 id="📚-线程通信中的同步问题">📚 线程通信中的同步问题</h3><p>当多个线程在并发操作共享数据时呢 可能会引发各种各样的问题 这些问题呢被总结为三个要素</p><ul><li>可见性</li><li>原则性</li><li>有序性</li></ul><p>而原子性问题是指多个线程对共享变量进行并发操作时，操作的结果是否与期望一致。</p><h3 id="👁-可见性问题的解释">👁 可见性问题的解释</h3><p>可见性问题指的是当一个线程修改了共享变量的值时，其他线程需要立即知道该变化。</p><p>对于可见性问题，有两种常见的解释。</p><ul><li>当一个线程在自己的工作内存中修改了某个变量，应该把该变量立即刷新到主内存，并使其他线程感知到这个修改。</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>( () -&gt; &#123;</span><br><span class="line">           <span class="keyword">while</span> (a != <span class="number">2</span>) &#123;</span><br><span class="line">                    <span class="comment">// do nothing</span></span><br><span class="line">          &#125; </span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>( () -&gt; &#123;</span><br><span class="line">                a = <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        t1.start();</span><br><span class="line">        Thread.sleep(<span class="number">1000</span>); <span class="comment">// 在启动 t2 之前等待 1 秒</span></span><br><span class="line">        t2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序将会死循环, 因为对于<code>t1</code>来说, <code>t2</code> 对变量a修改不可见</p><h3 id="💡-解决可见性问题">💡 解决可见性问题</h3><p>为了解决可见性问题，可以使用一些同步机制，如锁和volatile关键字。对于上述的例子，可以使用volatile关键字修饰变量X，以保证线程间的可见性。当一个线程修改了volatile变量的值时，其他线程立即能够知晓这个修改。</p><p>-------------------------------------------------------------------------⛔️未完待续-----------------------------------------------------------------------</p><p>使用volatile关键字的代码示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class Main &#123;</span><br><span class="line">     voliate static int a = 1;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws InterruptedException &#123;</span><br><span class="line">        Thread t1 = new Thread( () -&gt; &#123;</span><br><span class="line">           while (a != 2) &#123;</span><br><span class="line">                    // do nothing</span><br><span class="line">          &#125; </span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Thread t2 = new Thread( () -&gt; &#123;</span><br><span class="line">                a = 2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        t1.start();</span><br><span class="line">        Thread.sleep(1000); // 在启动 t2 之前等待 1 秒</span><br><span class="line">        t2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">     voliate <span class="keyword">static</span> <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">           <span class="keyword">while</span> (a != <span class="number">2</span>) &#123;</span><br><span class="line">              sychronized (<span class="built_in">this</span>) &#123;</span><br><span class="line">               <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> a + <span class="number">1</span></span><br><span class="line">             &#125;</span><br><span class="line">          &#125; </span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">                a = <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        t1.start();</span><br><span class="line">        Thread.sleep(<span class="number">1000</span>); <span class="comment">// 在启动 t2 之前等待 1 秒</span></span><br><span class="line">        t2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            a = <span class="number">1</span>;<span class="comment">// 步骤1</span></span><br><span class="line">            flag = <span class="literal">true</span>;<span class="comment">// 步骤2</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;<span class="comment">// 步骤3</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> a;<span class="comment">// 步骤4</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t1.join();</span><br><span class="line">        t2.join();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="⚛-原子性问题的解释">⚛ 原子性问题的解释</h3><p>原子性问题指的是当多个线程对共享变量进行并发操作时，并发操作的结果是否与期望一致。例如，多个线程同时对变量X进行自增操作，预期X的值应该递增两次，但实际上只递增了一次。</p><h3 id="💡-解决原子性问题">💡 解决原子性问题</h3><p>为了解决原子性问题，可以使用同步锁（Synchronization）或原子类（Atomic）来保证操作的原子性。同步锁可以确保同一时间只有一个线程可以对共享变量进行操作，而原子类提供了一些原子性的操作方法，如AtomicInteger的<code>incrementAndGet()</code>。</p><p>下面是使用synchronized关键字和AtomicInteger来解决原子性问题的示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class AtomicExample &#123;</span><br><span class="line">    private int x = 0;</span><br><span class="line">    private final Object lock = new Object();</span><br><span class="line">    private AtomicInteger atomicX = new AtomicInteger();</span><br><span class="line"></span><br><span class="line">    public void incrementX() &#123;</span><br><span class="line">        synchronized (lock) &#123;</span><br><span class="line">            x++; // 使用同步锁保证操作的原子性</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getX() &#123;</span><br><span class="line">        return atomicX.incrementAndGet(); // 使用原子类提供的原子操作方法</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过使用同步锁或原子类，可以保证并发操作的原子性，避免出现预期之外的结果。</p><h2 id="🔒-volatile与synchronized关键字">🔒 volatile与synchronized关键字</h2><p>在多线程编程中，我们经常遇到可见性问题和原子性问题。为了解决这些问题，Java提供了两个用于线程同步的关键字：<code>volatile</code>和<code>synchronized</code>。本文将深入探讨这两个关键字的概念、使用场景以及解决可见性问题的示例。</p><h3 id="📚-可见性问题回顾">📚 可见性问题回顾</h3><p>可见性问题指的是一个线程对共享变量的修改不被其他线程立即感知。这可能导致其他线程读取到过期的值，而不是最新的修改。在多线程环境下，由于线程间的工作内存和主内存的不一致，可见性问题会经常发生。</p><h3 id="🔌-volatile关键字">🔌 volatile关键字</h3><p><code>volatile</code>关键字提供了一种解决可见性问题的机制。当一个变量被<code>volatile</code>修饰时，对该变量的修改会立即写入主内存，并且读取操作总是从主内存中获取最新的值。使用<code>volatile</code>关键字可以保证多个线程对共享变量进行的修改能够被及时感知。</p><p>下面是使用<code>volatile</code>关键字解决可见性问题的示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class VolatileExample &#123;</span><br><span class="line">    private volatile int x = 1;</span><br><span class="line"></span><br><span class="line">    public void modifyX() &#123;</span><br><span class="line">        x = 2; // 修改volatile变量x</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getX() &#123;</span><br><span class="line">        return x; // 读取volatile变量x</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上述示例中，通过将变量<code>x</code>用<code>volatile</code>修饰，确保了线程对<code>x</code>的修改能够对其他线程立即可见。这样一来，可见性问题就得到了解决。</p><h3 id="🗝-synchronized关键字">🗝 synchronized关键字</h3><p><code>synchronized</code>关键字是另一种解决可见性问题的机制。使用<code>synchronized</code>关键字可以保证同一时间只有一个线程可以进入某个代码块或方法，并且对共享变量的读写操作是原子性的。</p><p>通过使用<code>synchronized</code>关键字，我们可以将一些关键代码块或方法变为原子操作，从而避免可见性问题。示例如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class SynchronizedExample &#123;</span><br><span class="line">    private int x = 0;</span><br><span class="line"></span><br><span class="line">    public synchronized void incrementX() &#123;</span><br><span class="line">        x++; // 使用synchronized保证操作的原子性</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public synchronized int getX() &#123;</span><br><span class="line">        return x; // 使用synchronized保证操作的原子性</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>…</p><p>在上述示例中，通过使用<code>synchronized</code>关键字修饰方法，可以确保每次修改<code>x</code>时的操作是原子的，从而避免了可见性问题。</p><h3 id="🔒-volatile与synchronized的比较">🔒 volatile与synchronized的比较</h3><ul><li><code>volatile</code>关键字强调的是变量的可见性，对于单个变量的读写操作来说是有效的。而<code>synchronized</code>关键字则提供了更强大的功能，不仅保证了变量的可见性，还提供了原子性和线程间的协调和互斥机制。</li><li><code>volatile</code>关键字适用于对单个变量的读写操作，而<code>synchronized</code>关键字适用于一段需要原子性操作的代码块或方法。</li><li><code>volatile</code>关键字效率比<code>synchronized</code>高，因为它不涉及线程的上下文切换和获取/释放锁的开销。但是，<code>volatile</code>关键字无法确保复合操作的原子性。</li></ul><h3 id="🧩-结论">🧩 结论</h3><p>在多线程编程中，解决可见性问题是很重要的。Java提供了<code>volatile</code>和<code>synchronized</code>两个关键字来处理可见性问题。</p><ul><li>使用<code>volatile</code>关键字可以保证对变量的读写操作对其他线程可见，但无法实现复合操作的原子性。</li><li>使用<code>synchronized</code>关键字可以保证对关键代码块或方法的原子性操作，同时具备可见性和互斥性</li></ul><h2 id="⚙️-volatile规则、原则性与有序性">⚙️ volatile规则、原则性与有序性</h2><p>在并发编程中，我们面临着可见性、原则性和有序性等问题。本文将围绕这三个特性，深入探讨volatile规则、原则性和有序性的概念以及其在并发编程中的应用。</p><h3 id="📚-可见性回顾">📚 可见性回顾</h3><p>可见性问题指的是一个线程对共享变量的修改不被其他线程立即感知。为了解决可见性问题，Java提供了volatile关键字。当一个变量被volatile修饰时，其修改将立即写入主内存，并且读取操作也总是从主内存中获取最新值。</p><h3 id="🔄-volatile规则">🔄 volatile规则</h3><p>对于一个volatile变量的写操作（修改）总是happens-before于随后对该变量的读操作。这意味着，当一个线程修改了一个volatile变量的值后，其他线程将立即感知到这个修改。这一特性是通过刷新存储和禁止重排序来实现的。</p><h3 id="🤝-锁定规则">🤝 锁定规则</h3><p>锁定规则是原则性的一种体现。它指出，对于一个锁的解锁操作总是happens-before于随后对该锁的加锁操作。这意味着，在一个线程中，对于同一个锁的解锁操作将确保之后加锁的操作能够读取到最新的值。</p><h3 id="📃-程序顺序原则">📃 程序顺序原则</h3><p>程序顺序原则是原则性的又一种体现。它指出，在一个线程内部，按照程序代码的书写顺序执行的操作满足happens-before关系。尽管指令可能被硬件或编译器重排，但Java内存模型会确保程序执行结果的正确性。这一原则是由于单个线程的执行是按照程序语义需要进行顺序执行的。</p><h3 id="🔗-原则性与有序性">🔗 原则性与有序性</h3><p>原则性指的是一个操作的不可中断性，要么全部执行成功，要么全部执行失败。原则性操作可以分为两类：</p><ol><li>单指令原则操作：执行单个指令的操作，要么成功，要么失败。例如，对内存进行读写的每个指令都是原子操作。</li><li>利用锁的组合指令原则操作：通过加锁机制来保证一组指令的原则性。当一组操作被锁定时，要么全部成功执行，要么全部失败。例如，使用synchronized关键字可以保证一组操作的原子性。</li></ol><p>有序性指的是指令的执行顺序符合程序编写的顺序。在单线程中，即使指令被重排，最终的执行结果仍然与顺序执行一致。然而，在多线程环境中，指令重排可能引发可见性问题。可见性问题可以通过volatile关键字和锁机制的happens-before原则来解决。</p>]]></content>
      
      
      <categories>
          
          <category> JVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java 内存模型 </tag>
            
            <tag> synchronized </tag>
            
            <tag> voliate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM系列 之 深入探索类加载机制</title>
      <link href="/posts/28357.html"/>
      <url>/posts/28357.html</url>
      
        <content type="html"><![CDATA[<h1>🌟 JVM系列 之 深入探索类加载机制</h1><h2 id="👥-背景故事">👥 背景故事</h2><p>在一次友人间的聚餐讨论中，我们提及了不同编程语言的优势与学习深度。对于一位以PHP为背景的朋友，有人建议其转向Java生态，因为Java具有成熟的生态系统和广泛的应用场景。朋友表示自己也会Java, 掌握Java的语法 …</p><h2 id="💡-学习层次剖析">💡 学习层次剖析</h2><p>学习编程语言可分为三个递进层次：</p><ol><li>📚 基础语法核心类库的熟悉使用</li><li>🌐 优势劣势分析与生态系统了解</li><li>🔧 底层运行机制探究与应用优化</li></ol><h2 id="💻-Java核心-JVM">💻 Java核心 -JVM</h2><p>Java的核心魅力在于Java虚拟机（<code>JVM</code>），它是跨平台执行Java字节码的关键。诸如<code>Kotlin</code>, <code> Groovy</code>、<code>Scala</code>等其他基于<code>JVM</code>的语言，通过深入理解<code>JVM</code>可以更高效地掌握。</p><h2 id="📖-类加载机制详解">📖 类加载机制详解</h2><ul><li><strong>编译与执行</strong>：Java源代码经过<code>javap</code>编译转换成.class字节码文件，由<code>JVM</code>加载并解析执行，同时即时编译器（<code>JIT</code>）会将热点代码转化为高效的二进制代码, 通过解释器和即时编译器想结合预热后的代码可以达到很快的执行效率</li></ul><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401042313773.png" alt="image-20240104231254562"></p><ul><li><p><strong>类加载流程</strong></p><ul><li><p><strong>加载阶段</strong>：加载阶段的任务是读取字节码资源以静态结构的形式存储在方法区，同时在堆中生成<code>java.lang.Class</code>对象。</p></li><li><p><strong>验证阶段</strong>：验证阶段用于验证字节码的合法性, 确保程序安全性和完整性(分布在多个步骤中)</p></li><li><p><strong>准备阶段</strong>：准备阶段为类的静态变量分配内存并设置默认初始值。这为静态变量的初始化提供了基础。</p></li><li><p><strong>解析阶段</strong>：解析阶段将符号引用解析为直接引用(可以发生在初始化阶段的前后)</p></li><li><p><strong>初始化阶段</strong>：在初始化阶段，会执行类中定义的静态代码块和静态变量的赋值操作。这是程序准备运行的重要阶段。</p></li></ul></li></ul><h3 id="📥-加载">📥 <strong>加载</strong></h3><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401042339913.png" alt="image-20240104233940085"></p><p>加载阶段是类加载的第一个阶段,这个阶段的任务是</p><p><strong>读取<code>Class</code>资源</strong>, 以<strong>静态数据结构</strong>的形式存储在<strong>方法区</strong>，同时在<strong>堆</strong>中生成**<code>java.lang.Class</code>对象**供程序调用.</p><p>此处**<code>Class文件</code>**不只是本地文件, 泛指各种二进制流, 不限于 网络, 数据库,以及即时生成的Class文件(例如动态代理)</p><h3 id="🔗-连接">🔗 连接</h3><h4 id="🔍-验证">🔍 <strong>验证</strong></h4><p>验证阶段是连接阶段的一部分。</p><p>验证阶段其实分布在各个阶段中</p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401042313773.png" alt="image-20240104231254562"></p><p>其中, 在加载期间就会进行 <strong>Class文件格式验证</strong></p><p>此时 虽然方法区已经存在类的静态结构, 堆中存在类的Class对象但是并不代表<code>JVM</code>完全认可这个类</p><p>程序如果想要使用这个类, 就必须进行连接, 而<strong>连接的第一步</strong>就是对类进行验证, 包括</p><ul><li>元数据验证</li><li>字节码验证</li></ul><p>简单概括来说就是对<strong>class静态结构</strong>进行<strong>语法和语义</strong>上的分析保证其不会产生危害虚拟机的</p><p>如果两个验证结束, 那么虚拟机会<strong>姑且</strong>认为该类是安全的, 但是这并不意味着验证的结束, 在解析阶段, 还会进行<strong>符号引用的验证</strong></p><p>所以说验证其实可以分很多个步骤, 分别在不同的阶段执行, 验证阶段是不断迭代的, <strong>随着<code>JDK</code>的迭代</strong>, <strong>以后</strong>虚拟机开发人员还会再虚拟机中引入<strong>更多更完善的验证策略</strong></p><h4 id="⚙️-准备">⚙️ <strong>准备</strong></h4><p>准备阶段是连接阶段的另一部分。</p><p>在准备阶段，<code>JVM</code>为类中的<strong>静态变量</strong>分配内存并设置默认初始值</p><p>这里<strong>只包括静态变量</strong>，不包括成员变量。</p><h4 id="👉-解析">👉 <strong>解析</strong></h4><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202401050012740.png" alt="image-20240104235310370"></p><p>解析阶段是连接阶段的最后也是最重要的一步。</p><p>首先要明确在Java中 <strong>符号引用</strong>和<strong>直接引用</strong>这两个相关的概念。</p><p>符号引用是在<strong>编译期间</strong>使用的一种符号表示方式，它用来表示<strong>需要引用的类、方法、字段等实体</strong>。符号引用并<strong>不包含具体的内存地址</strong>，而是使用一个字符串或其他<strong>标识</strong>来表示。</p><p>直接引用是在<strong>运行期间</strong>使用的一种引用方式，它包含<strong>实际的内存地址或偏移量</strong>，可以<strong>直接访问</strong>对应的类、方法、字段等实体。</p><p>在<strong>编译阶段</strong>，如果一个类A引用了另一个类B，由于B可能还未被编译或加载，所以A无法知道B的实际地址。因此，在A的class文件中会使用一个字符串S来代表B的地址，S就被称为符号引用。</p><p>在运行时，如果A被加载并进行解析阶段，发现B还未被加载，则会触发B的加载过程，将B加载到虚拟机中。此时，A中B的符号引用将被替换成B的实际地址，即直接引用。这样，A就能够真正地调用B了。</p><p>值得注意的是，对于多态的情况，Java通过后期绑定来实现。如果A调用的B是一个具体的实现类，这被称为<strong>静态解析</strong>，因为解析的目标类很明确。</p><p>但如果B是一个<strong>抽象类或接口</strong>，它可能有<strong>多个具体的实现类</strong>。此时，B的具体实现并不明确，无法确定使用哪个具体类的直接引用进行替换。在<strong>运行过程</strong>中，当发生了调用时，虚拟机调用栈中将会得到具体的类型信息，此时可以进行解析，使用明确的直接引用来替换符号引用, 这就是<strong>动态解析</strong>。</p><p>因此，解析阶段有时会发生在初始化阶段之后，这是为了支持动态解析的需要</p><h3 id="🚀-初始化">🚀 <strong>初始化</strong></h3><p>初始化阶段是类加载的最后一个阶段。在这个阶段中，会执行类中定义的<strong>静态代码块和成员变量的赋值操作</strong>，即执行<strong>主动资源初始化动作</strong>。</p><p>需要注意的是，调用<strong>构造方法不在这个阶段</strong>, 这是<strong>类阶段</strong>的初始化, 只有显式调用new指令才会调用构造函数进行对象实例化，这是对象层面的初始化。</p><h2 id="✨-结论">✨ 结论</h2><p>深入理解Java类加载机制是提升Java技术栈的重要一环。从编写代码到在不同操作系统上运行起来，<code>JVM</code>在其中扮演了至关重要的角色。</p><p>每个阶段都有其独特目的和功能，而掌握这一过程不仅能应对面试考点，更能帮助我们在实际开发中解决复杂问题，充分利用Java的<strong>动态扩展性</strong>和<strong>性能优化特性</strong>。</p><p><em><strong>参考文献</strong>:</em></p><p><em>图文主要来源</em></p><ul><li><p><em>[[寒食君JVM系列](<a href="https://space.bilibili.com/1578320">寒食君的个人空间-寒食君个人主页-哔哩哔哩视频 (bilibili.com)</a>)]</em></p></li><li><p><a href="https://javaguide.cn/java/jvm/classloader.html#%E5%9B%9E%E9%A1%BE%E4%B8%80%E4%B8%8B%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B">类加载器详解（重点） | JavaGuide(Java面试 + 学习指南)</a></p></li><li><p><em>[深入理解Java虚拟机：JVM高级特性与最佳实践].周志明</em></p></li><li><p><a href="https://docs.oracle.com/javase/specs/jvms/se8/html/index.html">The Java® Virtual Machine Specification (oracle.com)</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> JVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JVM </tag>
            
            <tag> 类加载机制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式之美----职责链模式</title>
      <link href="/posts/22915.html"/>
      <url>/posts/22915.html</url>
      
        <content type="html"><![CDATA[<h1>设计模式之美----职责链模式</h1><p>本文将对责任链模式(职责链模式)分为四个部分进行讲解</p><ul><li>原理</li><li>实现</li><li>应用</li><li>练习</li></ul><p>让大家系统全面的学会使用责任链模式, 并应用到开发中去</p><h2 id="原理篇">原理篇</h2><blockquote><p>大部分设计模式的核心是应对工程中的复杂性, 使得代码满足开闭原则,  提高代码扩展性</p></blockquote><p>职责链的英文名为<code>Chain Of Responsibility Design Pattern</code>, 在GoF的设计模式中的定义如下</p><blockquote><p>Avoid coupling the sender of a request to its receiver by giving more than one object a chance to handle the request. Chain the receiving objects and pass the request along the chain until an object handles it.</p></blockquote><p>​“将请求的发送和接收解耦，让多个接收对象都有机会处理这个请求。将这些接收对象串成一条链，并沿着这条链传递这个请求，直到链上的某个接收对象能够处理它为止。”</p><p>​实际上就是将<code>请求</code>通过类似链表的结构, 通过结点处理并线性的传递下去,直到请求完成或者没有下一个结点</p><p>​这里的结点是指单个处理请求的对象, 接受上一个结点处理后的结果并在处理后, 传递给下一个结点或者请求完成结束处理, 因为每个结点都承担着细粒度的职责, 所以称为<code>责任链模式</code></p><h2 id="实现篇">实现篇</h2><p>​</p><p>​设计模式的实现往往多种多样, 可能因为语言特性(枚举单例)也可能因为算法(迭代或者递归),使得代码结构各异, 但核心思想是不会变得, 之后的设计模式, 我都会以Java为例做出实现, 因为Java算是比较典型且纯粹的面向对象编程, 其他语言的同学可以借助chatgpt转语言来理解, 本质是一样的</p><p>​职责链模式的实现分为三个结构, 分别是抽象处理器类(Handler), 处理器类(XXXHandler), 以及处理链(HandlerChain)</p><p><strong>抽象处理器类(Handler)</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 处理器的抽象类, 定义处理器结构, 方便后序扩展</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Handler</span> &#123;</span><br><span class="line">    <span class="comment">//指向下一个处理器</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">Handler</span> <span class="variable">successor</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">()</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//抽象处理方法, 具体处理器实现此方法,处理请求</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSuccessor</span><span class="params">(Handler successor)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.successor = successor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>处理器类(XXXHandler)</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HandlerA</span> <span class="keyword">extends</span> <span class="title class_">Handler</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">handle</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//判断当前请求是否在该处理器处理完成</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">handled</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//.....处理逻辑</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment">//如果请求在当前处理器处理完成或者当前处理器是责任链上最后一个处理器, 停止传递</span></span><br><span class="line">    <span class="keyword">if</span> (!handled &amp;&amp; successor != <span class="literal">null</span>) &#123;</span><br><span class="line">      successor.handle();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HandlerB</span> <span class="keyword">extends</span> <span class="title class_">Handler</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">handle</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//判断当前请求是否在该处理器处理完成</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">handled</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//.....处理逻辑</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment">//如果请求在当前处理器处理完成或者当前处理器是责任链上最后一个处理器, 停止传递</span></span><br><span class="line">    <span class="keyword">if</span> (!handled &amp;&amp; successor != <span class="literal">null</span>) &#123;</span><br><span class="line">      successor.handle();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>处理链(HandlerChain)</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HandlerChain</span> &#123;</span><br><span class="line">    <span class="comment">//通过头尾两个应用记录处理链位置信息</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">Handler</span> <span class="variable">head</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Handler</span> <span class="variable">tail</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//在处理链尾部增加处理器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addHandler</span><span class="params">(Handler handler)</span> &#123;</span><br><span class="line">        handler.setSuccessor(<span class="literal">null</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == head) &#123;</span><br><span class="line">            head = handler;</span><br><span class="line">            tail = handler;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//保证尾部永远指向最后一个处理器</span></span><br><span class="line">        tail.setSuccessor(handler);</span><br><span class="line">        tail = handler;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">HyuanandlerChain</span> <span class="variable">chain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HandlerChain</span>();</span><br><span class="line">        chain.addHandler(<span class="keyword">new</span> <span class="title class_">HandlerA</span>());</span><br><span class="line">        chain.addHandler(<span class="keyword">new</span> <span class="title class_">HandlerB</span>());</span><br><span class="line">        chain.handle();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经典GoF的实现不够优雅, 处理器类中的handle()函数不仅包含业务逻辑, 还有对下一个处理器的调用, 对于不熟悉代码结构的程序员,在添加处理器调用时可能忘记调用下一个处理器, 可能会导致bug, 所以我们利用模板方法模式进行重构(让我想起Spring源码中AbstractBeanFactory中的doGetBean()方法), 将下一个处理器调用的逻辑抽象到模板中</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Handler</span> &#123;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">protected</span> <span class="type">Handler</span> <span class="variable">successor</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSuccessor</span><span class="params">(Handler successor)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.successor = successor;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//模板方法,将处理器调用逻辑抽象成一个final方法</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">handled</span> <span class="operator">=</span> doHandle();</span><br><span class="line">    <span class="keyword">if</span> (successor != <span class="literal">null</span> &amp;&amp; !handled) &#123;</span><br><span class="line">      successor.handle();</span><br><span class="line">    &#125;   </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//模板方法的扩展点,让子类具体处理器实现处理请求的逻辑</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="type">boolean</span> <span class="title function_">doHandle</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HandlerA</span> <span class="keyword">extends</span> <span class="title class_">Handler</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">doHandle</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">handled</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="keyword">return</span> handled;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HandlerB</span> <span class="keyword">extends</span> <span class="title class_">Handler</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">doHandle</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">handled</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="keyword">return</span> handled;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// HandlerChain和Application代码不变</span></span><br></pre></td></tr></table></figure><p>我们发现责任链模式本质就是将请求 <code>线性传递</code>到每个处理逻辑上进行处理直到某个结点处理成功或者职责链到头</p><p>既然是线性结构,我们同样可以使用数组来实现责任链模式, 这种方式更加简单</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数组实现的话,将传递的逻辑放到了HandlerChain中, 只需要实现handle逻辑即可</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IHandler</span> &#123;</span><br><span class="line">  <span class="type">boolean</span> <span class="title function_">handle</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HandlerA</span> <span class="keyword">implements</span> <span class="title class_">IHandler</span> &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">handle</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">handled</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//...处理器处理逻辑</span></span><br><span class="line">    <span class="comment">//返回是否处理完成</span></span><br><span class="line">    <span class="keyword">return</span> handled;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HandlerB</span> <span class="keyword">implements</span> <span class="title class_">IHandler</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">handle</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">handled</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//...处理器处理逻辑</span></span><br><span class="line">    <span class="comment">//返回是否处理完成</span></span><br><span class="line">    <span class="keyword">return</span> handled;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HandlerChain</span> &#123;</span><br><span class="line">  <span class="comment">//通过动态数组存储每个处理器</span></span><br><span class="line">  <span class="keyword">private</span> List&lt;IHandler&gt; handlers = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">  <span class="comment">//在数组中添加处理器</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addHandler</span><span class="params">(IHandler handler)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.handlers.add(handler);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//迭代调用处理器的处理方法</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (IHandler handler : handlers) &#123;</span><br><span class="line">      <span class="type">boolean</span> <span class="variable">handled</span> <span class="operator">=</span> handler.handle();</span><br><span class="line">      <span class="comment">//如果在中间某个处理器中处理完成, 提前结束迭代, 不调用下一个处理器</span></span><br><span class="line">      <span class="keyword">if</span> (handled) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">HandlerChain</span> <span class="variable">chain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HandlerChain</span>();</span><br><span class="line">    chain.addHandler(<span class="keyword">new</span> <span class="title class_">HandlerA</span>());</span><br><span class="line">    chain.addHandler(<span class="keyword">new</span> <span class="title class_">HandlerB</span>());</span><br><span class="line">    chain.handle();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 GoF 给出的定义中，如果处理器链上的某个处理器能够处理这个请求，那就不会继续往下传递请求。实际上，职责链模式还有一种变体，那就是请求会被所有的处理器都处理一遍，不存在中途终止的情况。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实现中省略boolean handled = false;即可</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Handler</span> &#123;</span><br><span class="line">  <span class="keyword">protected</span> <span class="type">Handler</span> <span class="variable">successor</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSuccessor</span><span class="params">(Handler successor)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.successor = successor;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//不需要返回boolean了</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">()</span> &#123;</span><br><span class="line">    doHandle();</span><br><span class="line">    <span class="keyword">if</span> (successor != <span class="literal">null</span>) &#123;</span><br><span class="line">      successor.handle();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">doHandle</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">()</span> &#123;</span><br><span class="line">    doHandle();</span><br><span class="line">    <span class="keyword">if</span> (successor != <span class="literal">null</span>) &#123;</span><br><span class="line">      successor.handle();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>我们参照&lt;&lt;设计模式之美&gt;&gt;中, 灵活扩展算法的敏感词过滤框架来讲</p><blockquote><p>对于支持 UGC（User Generated Content，用户生成内容）的应用（比如论坛）来说，用户生成的内容（比如，在论坛中发表的帖子）可能会包含一些敏感词（比如涉黄、广告、反动等词汇）。针对这个应用场景，我们就可以利用职责链模式来过滤这些敏感词。</p><p>对于包含敏感词的内容，我们有两种处理方式，一种是直接禁止发布，另一种是给敏感词打马赛克（比如，用 *** 替换敏感词）之后再发布。第一种处理方式符合 GoF 给出的职责链模式的定义，第二种处理方式是职责链模式的变体。</p></blockquote><p>第一种</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SensitiveWordFilter</span> &#123;</span><br><span class="line">  </span><br><span class="line">   <span class="type">boolean</span> <span class="title function_">doFilter</span><span class="params">(Content content)</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//涉黄词过滤,  PoliticalWordFilter、AdsWordFilter类代码结构与SexyWordFilter类似,省略了</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SexyWordFilter</span> <span class="keyword">implements</span> <span class="title class_">SensitiveWordFilter</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">doFilter</span><span class="params">(Content content)</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">legal</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="keyword">return</span> legal;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//敏感词过滤链</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SensitiveWordFilterChain</span> &#123;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">private</span> List&lt;SensitiveWordFilter&gt; filters = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addFilter</span><span class="params">(SensitiveWordFilter filter)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.filters.add(filter);</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  <span class="comment">// 如果不包含敏感词则返回ture</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">filter</span><span class="params">(Content content)</span> &#123;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">for</span> (SensitiveWordFilter filter : filters) &#123;</span><br><span class="line">        </span><br><span class="line">      <span class="keyword">if</span> (!filter.doFilter(content)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApplicationDemo</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">SensitiveWordFilterChain</span> <span class="variable">filterChain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SensitiveWordFilterChain</span>();</span><br><span class="line">    filterChain.addFilter(<span class="keyword">new</span> <span class="title class_">AdsWordFilter</span>());</span><br><span class="line">    filterChain.addFilter(<span class="keyword">new</span> <span class="title class_">SexyWordFilter</span>());</span><br><span class="line">    filterChain.addFilter(<span class="keyword">new</span> <span class="title class_">PoliticalWordFilter</span>());</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">legal</span> <span class="operator">=</span> filterChain.filter(<span class="keyword">new</span> <span class="title class_">Content</span>());</span><br><span class="line">    <span class="keyword">if</span> (!legal) &#123;</span><br><span class="line">      <span class="comment">// 不发表</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 发表</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SensitiveWordFilter</span> &#123;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(Content content)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//涉黄词过滤,  PoliticalWordFilter、AdsWordFilter类代码结构与SexyWordFilter类似,省略了</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SexyWordFilter</span> <span class="keyword">implements</span> <span class="title class_">SensitiveWordFilter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(Content content)</span> &#123;</span><br><span class="line">      </span><br><span class="line">        <span class="comment">//..... 检查是否存在涉黄敏感词,存在则用***替换敏感词</span></span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SensitiveWordFilterChain</span> &#123;</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">private</span> List&lt;SensitiveWordFilter&gt; filters = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addFilter</span><span class="params">(SensitiveWordFilter filter)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.filters.add(filter);</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">filter</span><span class="params">(Content content)</span> &#123;</span><br><span class="line">      </span><br><span class="line">    <span class="keyword">for</span> (SensitiveWordFilter filter : filters) &#123;</span><br><span class="line">      <span class="comment">//如果返回为true,说明中间处理器发现敏感词返回true,这种情况直接结束后序循环</span></span><br><span class="line">     filter.doFilter(content)</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>你可能会说，我像下面这样也可以实现敏感词过滤功能，而且代码更加简单，为什么非要使用职责链模式呢？这是不是过度设计呢？</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SensitiveWordFilter</span> &#123;</span><br><span class="line">  <span class="comment">// return true if content doesn&#x27;t contain sensitive words.</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">filter</span><span class="params">(Content content)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!filterSexyWord(content)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!filterAdsWord(content)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!filterPoliticalWord(content)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">filterSexyWord</span><span class="params">(Content content)</span> &#123;</span><br><span class="line">    <span class="comment">//....</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">filterAdsWord</span><span class="params">(Content content)</span> &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">filterPoliticalWord</span><span class="params">(Content content)</span> &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​应用设计模式主要是为了应对代码的复杂性，让其满足开闭原则，提高代码的扩展性。这里应用职责链模式也不例外</p><p><strong>首先, 我们来看, 职责链模式如何应对代码的复杂性</strong></p><p>将大的代码逻辑拆分成函数, 将大类拆分成小类, 是应对代码复杂性的常用方法, 职责链模式中,我们把各个敏感词过滤函数继续拆分成独立的类, 进一步简化了SensitiveWordFilter类, 让SenesitiveWordFilter类的代码不会过多, 过复杂.</p><p><strong>其次, 我们来看, 职责链模式如何让代码满足开闭原则, 提高代码的扩展性</strong></p><p>当我们考虑扩展新的过滤算法的时候, 比如, 我们还需要过滤特殊符号, 按照非职责链模式的代码实现,我们需要修改SensitiveWordFilter的代码, 违反开闭原则, 不过, 这样的修改比较集中,还可以接受的, 而职责链模式的实现方法更加优雅, 只需要新添加一个Filter类, 并且通过addFilter()函数将他添加到FilterChain中即可, 其他代码完全不需要修改</p><p>你可能会说，即便使用职责链模式来实现，当添加新的过滤算法的时候，还是要修改客户端代码（ApplicationDemo），这样做也没有完全符合开闭原则。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//实现一个新的处理器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NewWordFilter</span> <span class="keyword">implements</span> <span class="title class_">SensitiveWordFilter</span> &#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">doFilter</span><span class="params">(Content content)</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">legal</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">   <span class="keyword">return</span> legal;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApplicationDemo</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">SensitiveWordFilterChain</span> <span class="variable">filterChain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SensitiveWordFilterChain</span>();</span><br><span class="line">    filterChain.addFilter(<span class="keyword">new</span> <span class="title class_">AdsWordFilter</span>());</span><br><span class="line">    filterChain.addFilter(<span class="keyword">new</span> <span class="title class_">SexyWordFilter</span>());</span><br><span class="line">    filterChain.addFilter(<span class="keyword">new</span> <span class="title class_">PoliticalWordFilter</span>());</span><br><span class="line">     <span class="comment">//需要改动客户端代码,在职责链中添加新的处理器</span></span><br><span class="line">    filterChain.addFilter(<span class="keyword">new</span> <span class="title class_">NewWordFilter</span>());</span><br><span class="line">      </span><br><span class="line">    <span class="type">boolean</span> <span class="variable">legal</span> <span class="operator">=</span> filterChain.filter(<span class="keyword">new</span> <span class="title class_">Content</span>());</span><br><span class="line">    <span class="keyword">if</span> (!legal) &#123;</span><br><span class="line">      <span class="comment">// 不发表</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 发表</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>细化一下的话，我们可以把上面的代码分成两类：框架代码和客户端代码。其中，ApplicationDemo 属于客户端代码，也就是使用框架的代码。除 ApplicationDemo 之外的代码属于敏感词过滤框架代码。</p><p><em>假设敏感词过滤框架并不是我们开发维护的，而是我们引入的一个第三方框架，我们要扩展一个新的过滤算法，不可能直接去修改框架的源码。这个时候，利用职责链模式就能达到开篇所说的，在不修改框架源码的情况下，基于职责链模式提供的扩展点，来扩展新的功能。换句话说，我们在框架这个代码范围内实现了开闭原则。</em></p><p>除此之外, 利用职责链模式相对于不用职责链模式的实现方法, 还有一个好处, 就是配置过滤算法更加灵活了, 只需要使用某几个过滤算法</p><h2 id="应用篇">应用篇</h2><p>​职责链模式常用在框架的开发中，为框架提供扩展点，让框架的使用者在不修改框架源码的情况下，基于扩展点添加新的功能。实际上，更具体点来说，职责链模式最常用来开发框架的<strong>过滤器</strong>和<strong>拦截器</strong></p><p>​</p><h3 id="Servlet-Filter">Servlet Filter</h3><p>​<code>Servlet Filter</code> 是 Java <code>Servlet 规范</code>中定义的组件，翻译成中文就是过滤器，它可以实现对 HTTP 请求的过滤功能，比如鉴权、限流、记录日志、验证参数等等。</p><p>​在实际项目中，我们该如何使用<code> Servlet Filter</code> 呢？我写了一个简单的示例代码，如下所示。添加一个过滤器，我们只需要定义一个实现 <code>javax.servlet.Filter </code>接口的过滤器类，并且将它配置在 <code>web.xml</code> 配置文件中。Web 容器启动的时候，会读取 <code>web.xml </code>中的配置，创建过滤器对象。当有请求到来的时候，会先经过过滤器，然后才由<code> Servlet</code> 来处理。</p><p>​</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">    <span class="comment">// 在创建Filter时自动调用，</span></span><br><span class="line">    <span class="comment">// 其中filterConfig包含这个Filter的配置参数，比如name之类的（从配置文件中读取的）</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;拦截客户端发送来的请求.&quot;</span>);</span><br><span class="line">    chain.doFilter(request, response);</span><br><span class="line">    System.out.println(<span class="string">&quot;拦截发送给客户端的响应.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 在销毁Filter时自动调用</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 在web.xml配置文件中如下配置：</span></span><br><span class="line">&lt;filter&gt;</span><br><span class="line">  &lt;filter-name&gt;logFilter&lt;/filter-name&gt;</span><br><span class="line">  &lt;filter-class&gt;com.xzg.cd.LogFilter&lt;/filter-class&gt;</span><br><span class="line">&lt;/filter&gt;</span><br><span class="line">&lt;filter-mapping&gt;</span><br><span class="line">    &lt;filter-name&gt;logFilter&lt;/filter-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;<span class="comment">/*&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">&lt;/filter-mapping&gt;</span></span><br></pre></td></tr></table></figure><p>​我们发现，添加过滤器非常方便，不需要修改任何代码，定义一个实现 javax.servlet.Filter 的类，再改改配置就搞定了，完全符合开闭原则。</p><p>​<code>Servlet Filter</code>利用的正是职责链模式来保证如此好的扩展性</p><p>​<code>Servlet </code>只是一个规范，并不包含具体的实现，所以，<code>Servlet </code>中的 <code>FilterChain </code>只是一个接口定义。具体的实现类由遵从<code> Servlet</code> 规范的 Web 容器来提供，比如，<code>ApplicationFilterChain </code>类就是 Tomcat 提供的 <code>FilterChain </code>的实现类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">ApplicationFilterChain</span> <span class="keyword">implements</span> <span class="title class_">FilterChain</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> <span class="variable">pos</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//当前执行到了哪个filter</span></span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> n; <span class="comment">//filter的个数</span></span><br><span class="line">  <span class="keyword">private</span> ApplicationFilterConfig[] filters;</span><br><span class="line">  <span class="keyword">private</span> Servlet servlet;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (pos &lt; n) &#123;</span><br><span class="line">      <span class="type">ApplicationFilterConfig</span> <span class="variable">filterConfig</span> <span class="operator">=</span> filters[pos++];</span><br><span class="line">      <span class="type">Filter</span> <span class="variable">filter</span> <span class="operator">=</span> filterConfig.getFilter();</span><br><span class="line">      filter.doFilter(request, response, <span class="built_in">this</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// filter都处理完毕后，执行servlet</span></span><br><span class="line">      servlet.service(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addFilter</span><span class="params">(ApplicationFilterConfig filterConfig)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (ApplicationFilterConfig filter:filters)</span><br><span class="line">      <span class="keyword">if</span> (filter==filterConfig)</span><br><span class="line">         <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (n == filters.length) &#123;<span class="comment">//扩容</span></span><br><span class="line">      ApplicationFilterConfig[] newFilters = <span class="keyword">new</span> <span class="title class_">ApplicationFilterConfig</span>[n + INCREMENT];</span><br><span class="line">      System.arraycopy(filters, <span class="number">0</span>, newFilters, <span class="number">0</span>, n);</span><br><span class="line">      filters = newFilters;</span><br><span class="line">    &#125;</span><br><span class="line">    filters[n++] = filterConfig;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>ApplicationFilterChain </code>中的 <code>doFilter()</code> 函数的代码实现比较有技巧，实际上是一个递归调用。</p><p>​这样实现主要是为了在一个 <code>doFilter() </code>方法中，支持双向拦截，既能拦截客户端发送来的请求，也能拦截发送给客户端的响应，你可以结合着 <code>LogFilter</code> 那个例子，以及对比待会要讲到的 <code>Spring Interceptor</code>.</p><h3 id="Spring-Interceptor">Spring Interceptor</h3><p>​<code>Servlet Filter</code>，有一个功能上跟它非常类似的东西，<code>Spring Interceptor</code>，，都用来实现对 HTTP 请求进行拦截处理。</p><p>​它们不同之处在于，<code>Servlet Filter</code> 是 <code>Servlet</code> 规范的一部分，实现依赖于 Web 容器。<code>Spring Interceptor</code> 是<code>Spring MVC</code>框架的一部分，由 <code>Spring MVC</code> 框架来提供实现。客户端发送的请求，会先经过 <code>Servlet Filter</code>，然后再经过 <code>Spring Interceptor</code>，最后到达具体的业务代码中。( <code>Filter</code>在 <code>Request</code> 抵达<code>Servlet</code> 之前进行过滤 以及<code>Servlet.service()</code>执行完返回<code>reponse</code>之后过滤; 而<code>Interceptor</code> 是在抵达 <code>DispatcherServlet</code> 之后根据请求路径找到对应的映射器候选者后<code>前置处理</code>候选者, 在候选者处理请求并视图解析器处理完成后<code>后置处理</code>)</p><p>​在项目中，我们该如何使用 <code>Spring Interceptor</code> 呢？</p><ul><li>声明拦截器类, 实现<code>HandlerInterceptor</code>接口, 实现<code>preHandler()</code>, <code>postHandler()</code>, ,<code>afterCompletion()</code>方法</li><li>通过配置文件中添加<code>&lt;mvc:interceptor&gt;</code>, 配置<code>&lt;mvc:mapping path=&quot;拦截路径&quot;/&gt;</code> , <code>&lt;bean class=&quot;拦截器实现类全限定名&quot; /&gt;</code>(也可以使用注解配置类)</li></ul><p>​</p><p>​<code>LogInterceptor</code> 实现的功能跟刚才的 <code>LogFilter</code> 完全相同，只是实现方式上稍有区别。<code>LogFilter</code> 对请求和响应的拦截是在 <code>doFilter() </code>一个函数中实现的，而 <code>LogInterceptor</code> 对请求的拦截在 <code>preHandle()</code> 中实现，对响应的拦截在 <code>postHandle()</code> 中实现。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">// 在处理请求之前被调用</span></span><br><span class="line">    <span class="comment">// 在此处可以执行一些预处理操作，如记录日志</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;拦截客户端发送来的请求.&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// 继续后续的处理</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">// 在处理请求后，视图渲染之前被调用</span></span><br><span class="line">    <span class="comment">// 在此处可以执行一些后处理操作，如修改响应内容或添加额外的响应头</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;拦截发送给客户端的响应.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">// 在请求处理完成后被调用，即视图渲染完成后被调用</span></span><br><span class="line">    <span class="comment">// 在此处可以执行一些清理工作，如释放资源或记录请求处理结果</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;这里总是被执行.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在Spring MVC配置文件中配置interceptors</span></span><br><span class="line">&lt;mvc:interceptors&gt;</span><br><span class="line">   &lt;mvc:interceptor&gt;</span><br><span class="line">       &lt;mvc:mapping path=<span class="string">&quot;/*&quot;</span>/&gt;</span><br><span class="line">       &lt;bean class=<span class="string">&quot;com.xzg.cd.LogInterceptor&quot;</span> /&gt;</span><br><span class="line">   &lt;/mvc:interceptor&gt;</span><br><span class="line">&lt;/mvc:interceptors&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<code>Spring interceptor</code></p><p>​也是基于职责链模式实现的。其中，<code>HandlerExecutionChain</code> 类是职责链模式中的处理器链。它的实现相较于 Tomcat 中的 <code>ApplicationFilterChain</code> 来说，逻辑更加清晰，不需要使用递归来实现，主要是因为它将请求和响应的拦截工作，拆分到了两个函数中实现。</p><p><code>HandlerExecutionChain</code> 的源码如下所示，同样对代码也进行了一些简化，只保留了关键代码。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HandlerExecutionChain 类定义了一个拦截器的执行链，为处理器提供拦截功能。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HandlerExecutionChain</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Object handler; <span class="comment">// 处理器对象</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> HandlerInterceptor[] interceptors; <span class="comment">// 拦截器数组</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加一个拦截器到拦截器数组中</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> interceptor 要添加的拦截器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptor</span><span class="params">(HandlerInterceptor interceptor)</span> &#123;</span><br><span class="line">        initInterceptorList().add(interceptor);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在处理器执行前调用拦截器的预处理方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request  HTTP 请求对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response HTTP 响应对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否继续执行处理器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">applyPreHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        HandlerInterceptor[] interceptors = getInterceptors();</span><br><span class="line">        <span class="keyword">if</span> (!ObjectUtils.isEmpty(interceptors)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; interceptors.length; i++) &#123;</span><br><span class="line">                <span class="type">HandlerInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> interceptors[i];</span><br><span class="line">                <span class="keyword">if</span> (!interceptor.preHandle(request, response, <span class="built_in">this</span>.handler)) &#123;</span><br><span class="line">                    triggerAfterCompletion(request, response, <span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在处理器执行后调用拦截器的后处理方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request  HTTP 请求对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response HTTP 响应对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mv       处理器返回的 ModelAndView 对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">applyPostHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, ModelAndView mv)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        HandlerInterceptor[] interceptors = getInterceptors();</span><br><span class="line">        <span class="keyword">if</span> (!ObjectUtils.isEmpty(interceptors)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> interceptors.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">                <span class="type">HandlerInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> interceptors[i];</span><br><span class="line">                interceptor.postHandle(request, response, <span class="built_in">this</span>.handler, mv);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在请求完成时调用拦截器的完成处理方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request  HTTP 请求对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response HTTP 响应对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ex       请求处理过程中出现的异常（如果有）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">triggerAfterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Exception ex)</span></span><br><span class="line">            <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        HandlerInterceptor[] interceptors = getInterceptors();</span><br><span class="line">        <span class="keyword">if</span> (!ObjectUtils.isEmpty(interceptors)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="built_in">this</span>.interceptorIndex; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">                <span class="type">HandlerInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> interceptors[i];</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    interceptor.afterCompletion(request, response, <span class="built_in">this</span>.handler, ex);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Throwable ex2) &#123;</span><br><span class="line">                    logger.error(<span class="string">&quot;HandlerInterceptor.afterCompletion threw exception&quot;</span>, ex2);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​在 Spring 框架中，<code>DispatcherServlet</code> 的 <code>doDispatch()</code> 方法来分发请求，它在真正的业务逻辑执行前后，执行 <code>HandlerExecutionChain</code> 中的 <code>applyPreHandle()</code> 和 <code>applyPostHandle()</code> 函数，用来实现拦截的功能。</p><h2 id="练习篇">练习篇</h2><p>尝试优化一下代码(案例来源)</p><p><strong>在本案例中我们模拟在618大促期间的业务系统上线审批流程场景</strong></p><p>像是这些一线电商类的互联网公司，阿里、京东、拼多多等，在618期间都会做一些运营活动场景以及提供的扩容备战，就像过年期间百度的红包一样。但是所有开发的这些系统都需要陆续的上线，因为临近618有时候也有一些紧急的调整的需要上线，但为了保障线上系统的稳定性是尽可能的减少上线的，也会相应的增强审批力度。就像一级响应、二级响应一样。</p><p>而这审批的过程在随着特定时间点会增加不同级别的负责人加入，每个人就像责任链模式中的每一个核心点。对于研发小伙伴并不需要关心具体的审批流程处理细节，只需要知道这个上线更严格，级别也更高，但对于研发人员来说同样是点击相同的提审按钮，等待审核。</p><p>接下来我们就模拟这样一个业务诉求场景，使用责任链的设计模式来实现此功能。</p><h3 id="场景简述">场景简述</h3><h4 id="模拟审核服务">模拟审核服务</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, Date&gt; authMap = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;String, Date&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title function_">queryAuthInfo</span><span class="params">(String uId, String orderId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> authMap.get(uId.concat(orderId));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">auth</span><span class="params">(String uId, String orderId)</span> &#123;</span><br><span class="line">        authMap.put(uId.concat(orderId), <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><ul><li>这里面提供了两个接口一个是查询审核结果(<code>queryAuthInfo</code>)、另外一个是处理审核(<code>auth</code>)。</li><li>这部分是把由谁审核的和审核的单子ID作为唯一key值记录到内存Map结构中。</li></ul><h3 id="待优化代码">待优化代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">SimpleDateFormat</span> <span class="variable">f</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);<span class="comment">// 时间格式化</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> AuthInfo <span class="title function_">doAuth</span><span class="params">(String uId, String orderId, Date authDate)</span> <span class="keyword">throws</span> ParseException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 三级审批</span></span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> AuthService.queryAuthInfo(<span class="string">&quot;1000013&quot;</span>, orderId);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == date) <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">AuthInfo</span>(<span class="string">&quot;0001&quot;</span>, <span class="string">&quot;单号：&quot;</span>, orderId, <span class="string">&quot; 状态：待三级审批负责人 &quot;</span>, <span class="string">&quot;王工&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 二级审批</span></span><br><span class="line">        <span class="keyword">if</span> (authDate.after(f.parse(<span class="string">&quot;2020-06-01 00:00:00&quot;</span>)) &amp;&amp; authDate.before(f.parse(<span class="string">&quot;2020-06-25 23:59:59&quot;</span>))) &#123;</span><br><span class="line">            date = AuthService.queryAuthInfo(<span class="string">&quot;1000012&quot;</span>, orderId);</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == date) <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">AuthInfo</span>(<span class="string">&quot;0001&quot;</span>, <span class="string">&quot;单号：&quot;</span>, orderId, <span class="string">&quot; 状态：待二级审批负责人 &quot;</span>, <span class="string">&quot;张经理&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 一级审批</span></span><br><span class="line">        <span class="keyword">if</span> (authDate.after(f.parse(<span class="string">&quot;2020-06-11 00:00:00&quot;</span>)) &amp;&amp; authDate.before(f.parse(<span class="string">&quot;2020-06-20 23:59:59&quot;</span>))) &#123;</span><br><span class="line">            date = AuthService.queryAuthInfo(<span class="string">&quot;1000011&quot;</span>, orderId);</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == date) <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">AuthInfo</span>(<span class="string">&quot;0001&quot;</span>, <span class="string">&quot;单号：&quot;</span>, orderId, <span class="string">&quot; 状态：待一级审批负责人 &quot;</span>, <span class="string">&quot;段总&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">AuthInfo</span>(<span class="string">&quot;0001&quot;</span>, <span class="string">&quot;单号：&quot;</span>, orderId, <span class="string">&quot; 状态：审批完成&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><ul><li>这里从上到下分别判断了在指定时间范围内由不同的人员进行审批，就像618上线的时候需要三个负责人都审批才能让系统进行上线。</li><li>像是这样的功能看起来很简单的，但是实际的业务中会有很多部门，但如果这样实现就很难进行扩展，并且在改动扩展调整也非常麻烦。</li></ul><hr><p>参考:</p><p><a href="https://time.geekbang.org/column/intro/100039001">设计模式之美 (geekbang.org)</a></p><p>[重学 Java 设计模式：实战责任链模式「模拟618电商大促期间，项目上线流程多级负责人审批场景」 | 小傅哥 bugstack 虫洞栈](<a href="https://bugstack.cn/md/develop/design-pattern/2020-06-18-%E9%87%8D%E5%AD%A6">https://bugstack.cn/md/develop/design-pattern/2020-06-18-重学</a> Java 设计模式《实战责任链模式》.html)</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式之美 </tag>
            
            <tag> 计算机基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArraysList源码分析</title>
      <link href="/posts/16070.html"/>
      <url>/posts/16070.html</url>
      
        <content type="html"><![CDATA[<h1>ArrayList源码分析</h1>]]></content>
      
      
      <categories>
          
          <category> Java源码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ArrayLists </tag>
            
            <tag> Java源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA NIO</title>
      <link href="/posts/49656.html"/>
      <url>/posts/49656.html</url>
      
        <content type="html"><![CDATA[<h1>Java NIO</h1><p>⚠️⚠️⚠️ 注意!!!  本文还未完成,⚠️⚠️⚠️</p><h2 id="Java-NIO概述">Java NIO概述</h2><h3 id="阻塞IO">阻塞IO</h3><p>在进行读取,写入时,在有可供读写数据到达之前会阻塞线程</p><p>通常, 服务器每个请求都会创建一个线程</p><p>即使使用线程池,但线程池也有着上限</p><h3 id="非阻塞IO">非阻塞IO</h3><p>基于Reactor工作方式,Selector中获取SelectionKey,找到具体的SelectableChannel,以获取客户端发来的数据,面向缓冲区,</p><h3 id="NIO概述">NIO概述</h3><p>三个核心组件</p><ul><li>Channel</li><li>Buffer</li><li>Selectors</li></ul><h2 id="Java-NIO-Channel">Java NIO (Channel)</h2><p>通道,全双工,多种数据源,用于在字节缓冲区与位于通道另一侧地的实体进行传输</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java源码 </tag>
            
            <tag> NIO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MESI缓存一致性协议</title>
      <link href="/posts/43255.html"/>
      <url>/posts/43255.html</url>
      
        <content type="html"><![CDATA[<p>⚠️⚠️⚠️ 注意!!!  本文还未完成,⚠️⚠️⚠️</p><p><a href="https://www.bilibili.com/video/BV1fK4y1E7NC/?spm_id_from=333.337.search-card.all.click&amp;vd_source=a2cdc337163157715ec6605c77937a77">缓存一致性协议MESI_哔哩哔哩_bilibili</a></p><p>目前大多数PC的CUP都是多核</p><p>我们知道根据摩尔定律, CPU性能每隔18个月就会翻一倍(即使在10年后逐渐失效)</p><p>在经典的冯诺依曼体系中, 存储器和计算器的IO导致的性能低下已经越发的突出</p><p>由此,大多CPU都会存在缓存这一中间设备, 利用局部性原理, 将热点数据存储在缓存中</p><p>目前大多设备为三级缓存</p><p>其中L1, L2缓存为单个CPU私有(可能由于CPU架构而不同), L3缓存为共享, 但这并不是本节讨论的重点,接下来, 我们直接将缓存抽象为每个CPU核心所私有的</p><p>缓存的引入,极大的降低了IO效率, 提升了CPU整体的效率,但是多核架构下, 引入缓存会出现一致性问题</p><p>什么时一致性问题呢?</p><p>我们举个最简单的例子</p><p>CPU公有两个核心</p><p>P1  P2</p><p>现在内存中有一个全局变量 n  = 1, 被两个核心共享</p><p>目前两个核心缓存都不存在这个全局变量(缓存引入后, CPU只直接操作缓存, 操作内存需要先读入缓存再写入缓存, 但是写入的时间并不确定)</p><p>假设 P1 P2的目的都是让全局变量加1, 那么我们预期的结果是  最后 n = 3</p><p>但是下面的执行流程会得出不一样的结果</p><p>P1 读入缓存 n = 1. 再缓存中+1 n = 2</p><p>之后P1还未把缓存写入内存, P2开始了操作</p><p>P2 读入缓存 n = 1. 再缓存中+1 n = 2</p><p>P1 写入内存 n = 2 覆盖了原本内存中的n = 1</p><p>P2 写入内存 n = 2 覆盖了原本内存中的n = 2</p><p>最后内存中的值是n = 2</p><p>这就是我们所说的一致性问题, 因为副本的更新不能即时的刷入内存中导致的(操作的原子性)</p><p>那么我们直接让每个操作都原子性不就好了?</p><p>于是引入了第一种解决方案</p><p>锁总线, 每次操作只能有一个核心执行, 这显然是极其低效的, 直接PASS</p><p>总线嗅探机制(其实还有基于目录的缓存一致性协议)</p><p>写失效(Write Through)</p><p>写更新(Write Back)</p><p><a href="https://www.alibabacloud.com/blog/memory-model-and-synchronization-primitive---part-1-memory-barrier_597460">https://www.alibabacloud.com/blog/memory-model-and-synchronization-primitive---part-1-memory-barrier_597460</a></p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用代码模板</title>
      <link href="/posts/45076.html"/>
      <url>/posts/45076.html</url>
      
        <content type="html"><![CDATA[<h1>【Java版本】常用代码模板——基础算法 + 模板题参考实现</h1><h3 id="一、快速排序算法模板-——-模板题-AcWing-785-快速排序">一、快速排序算法模板 —— <a href="https://www.acwing.com/problem/content/description/787/">模板题 AcWing 785. 快速排序</a></h3><p>快速排序本质上就是分治！</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[] quickSort(<span class="type">int</span>[] arr, <span class="type">int</span> left, <span class="type">int</span> right) &#123;</span><br><span class="line">    <span class="comment">// 递归终止条件，如果左边界大于等于右边界则认为递归结束</span></span><br><span class="line">    <span class="keyword">if</span> (left &gt;= right) &#123;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设定一个分界值，这里是（left + right）/ 2</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">p</span> <span class="operator">=</span> arr[left + right &gt;&gt; <span class="number">1</span>];</span><br><span class="line">    <span class="comment">// 左右提前预留一个位置</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> left - <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> right + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="comment">// 等效于do while</span></span><br><span class="line">        <span class="comment">// 当数值小于分界值时持续遍历，直到找到第一个大于等于分界值的索引</span></span><br><span class="line">        <span class="comment">// 如果是逆序则调整两个while循环</span></span><br><span class="line">        <span class="keyword">while</span> (arr[++i] &lt; p)</span><br><span class="line">            ;</span><br><span class="line">        <span class="keyword">while</span> (arr[--j] &gt; p)</span><br><span class="line">            ;</span><br><span class="line">        <span class="comment">// 交换左右两侧不符合预期的数值</span></span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">            arr[i] = arr[j];</span><br><span class="line">            arr[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 由于分界值取的是left + right &gt;&gt; 1，因此递归取的是left，j j + 1，right</span></span><br><span class="line">    quickSort(arr, left, j);</span><br><span class="line">    quickSort(arr, j + <span class="number">1</span>, right);</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/description/787/">模板题 AcWing 785. 快速排序</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.IntStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        <span class="comment">// Java8</span></span><br><span class="line">        <span class="comment">// IntStream.range等效于for循环</span></span><br><span class="line">        <span class="comment">// toArray生成数组</span></span><br><span class="line">        <span class="type">int</span>[] arr = IntStream.range(<span class="number">0</span>, n).map(i -&gt; in.nextInt()).toArray();</span><br><span class="line">        <span class="type">int</span>[] sortedArr = quickSort(arr, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">        IntStream.range(<span class="number">0</span>, n).mapToObj(i -&gt; sortedArr[i] + <span class="string">&quot; &quot;</span>).forEach(System.out::print);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        for (int i = 0; i &lt; n; i++) &#123;</span></span><br><span class="line"><span class="comment">            int a = in.nextInt();</span></span><br><span class="line"><span class="comment">            arr[i] = a;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        int[] sortedArr = quickSort(arr, 0, n - 1);</span></span><br><span class="line"><span class="comment">        for (int i = 0; i &lt; n; i++) &#123;</span></span><br><span class="line"><span class="comment">            System.out.print(sortedArr[i] + &quot; &quot;);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[] quickSort(<span class="type">int</span>[] arr, <span class="type">int</span> left, <span class="type">int</span> right) &#123;</span><br><span class="line">        。。。。。。可参考上述实现</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、归并排序算法模板-——-模板题-AcWing-787-归并排序">二、归并排序算法模板 —— <a href="https://www.acwing.com/problem/content/789/">模板题 AcWing 787. 归并排序</a></h3><p>归并排序本质上就是分治！</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[] mergeSort(<span class="type">int</span>[] arr, <span class="type">int</span> left, <span class="type">int</span> right) &#123;</span><br><span class="line">    <span class="comment">// 递归终止条件，如果左边界大于等于右边界则认为递归结束</span></span><br><span class="line">    <span class="keyword">if</span> (left &gt;= right) &#123;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设定一个分界值，这里是（left + right）/ 2</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + right &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 切割</span></span><br><span class="line">    arr = mergeSort(arr, left, mid);</span><br><span class="line">    arr = mergeSort(arr, mid + <span class="number">1</span>, right);/</span><br><span class="line">    <span class="comment">// 归并，长度刚好是 left 到 right</span></span><br><span class="line">    <span class="type">int</span>[] temp = <span class="keyword">new</span> <span class="title class_">int</span>[right - left + <span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> left;</span><br><span class="line">    <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> mid + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 用来归并的索引</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= right) &#123;</span><br><span class="line">        <span class="comment">// 如果是逆序则调整if条件</span></span><br><span class="line">        <span class="keyword">if</span> (arr[i] &lt;= arr[j]) &#123;</span><br><span class="line">            temp[k++] = arr[i++];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            temp[k++] = arr[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) &#123;</span><br><span class="line">        temp[k++] = arr[i++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= right) &#123;</span><br><span class="line">        temp[k++] = arr[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 根据归并后的数组重新赋值排序后的数组</span></span><br><span class="line">    <span class="keyword">for</span> (i = left, j = <span class="number">0</span>; i &lt;= right; i++, j++) &#123;</span><br><span class="line">        arr[i] = temp[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/789/">模板题 AcWing 787. 归并排序</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.IntStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        <span class="comment">// Java8，可参考上面普通写法</span></span><br><span class="line">        <span class="type">int</span>[] arr = IntStream.range(<span class="number">0</span>, n).map(i -&gt; in.nextInt()).toArray();</span><br><span class="line">        <span class="type">int</span>[] sortedArr = mergeSort(arr, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">        IntStream.range(<span class="number">0</span>, n).mapToObj(i -&gt; sortedArr[i] + <span class="string">&quot; &quot;</span>).forEach(System.out::print);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[] mergeSort(<span class="type">int</span>[] arr, <span class="type">int</span> left, <span class="type">int</span> right) &#123;</span><br><span class="line">        。。。。。。</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、整数二分算法模板-——-模板题-AcWing-789-数的范围">三、整数二分算法模板 —— <a href="https://www.acwing.com/problem/content/791/">模板题 AcWing 789. 数的范围</a></h3><p>两种模板，分别是 LBS，和 RBS</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 检查x是否满足某种性质  </span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> x)</span> &#123;  </span><br><span class="line">   <span class="comment">/* ... */</span>  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间[left, right]被划分成[left, mid]和[mid + 1, right]时使用： </span></span><br><span class="line"><span class="comment">// 或者称之为左二分查询，查找左侧第一个满足条件的数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">leftBinarySearch</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> left, <span class="type">int</span> right)</span> &#123;  </span><br><span class="line">   <span class="keyword">while</span> (left &lt; right) &#123;  </span><br><span class="line">      <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> arr[left + right &gt;&gt; <span class="number">1</span>];  </span><br><span class="line">      <span class="keyword">if</span> (check(mid)) &#123;  </span><br><span class="line">         right = mid;    <span class="comment">// check()判断mid是否满足性质  </span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">         left = mid + <span class="number">1</span>;  </span><br><span class="line">      &#125;  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">return</span> left;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间[left, right]被划分成[left, mid - 1]和[mid, right]时使用：  </span></span><br><span class="line"><span class="comment">// 或者称之为右二分查询，查找右侧最后一个满足条件的数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">rightBinarySearch</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> left, <span class="type">int</span> right)</span> &#123;  </span><br><span class="line">   <span class="keyword">while</span> (left &lt; right) &#123;  </span><br><span class="line">      <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> arr[left + right + <span class="number">1</span> &gt;&gt; <span class="number">1</span>];  </span><br><span class="line">      <span class="keyword">if</span> (check(mid)) &#123;  </span><br><span class="line">         left = mid;    <span class="comment">// check()判断mid是否满足性质  </span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">         right = mid - <span class="number">1</span>;  <span class="comment">// 有加必有减</span></span><br><span class="line">      &#125;  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">return</span> left;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/791/">模板题 AcWing 789. 数的范围</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.IntStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">q</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        <span class="type">int</span>[] arr = IntStream.range(<span class="number">0</span>, n).map(item -&gt; in.nextInt()).toArray();</span><br><span class="line">        <span class="keyword">while</span> (q-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            <span class="type">int</span>[] ans = binarySearch(arr, k);</span><br><span class="line">            IntStream.range(<span class="number">0</span>, <span class="number">2</span>).mapToObj(item -&gt; ans[item] + <span class="string">&quot; &quot;</span>).forEach(System.out::print);</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[] binarySearch(<span class="type">int</span>[] arr, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="comment">// 将返回值放到一个长度为2的数组中</span></span><br><span class="line">        <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> arr.length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> n - <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 先LBS，找到左边界</span></span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + right &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (arr[mid] &gt;= target) &#123;</span><br><span class="line">                right = mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果没有找到，则默认-1 -1</span></span><br><span class="line">        <span class="keyword">if</span> (arr[left] != target) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;-<span class="number">1</span>, -<span class="number">1</span>&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        res[<span class="number">0</span>] = left;</span><br><span class="line">        left = <span class="number">0</span>;</span><br><span class="line">        right = n - <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 再RBS，找到右边界</span></span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + right + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (arr[mid] &lt;= target) &#123;</span><br><span class="line">                left = mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                right = mid - <span class="number">1</span>; <span class="comment">// 有加必有减</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        res[<span class="number">1</span>] = left;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、浮点数二分算法模板-——-模板题-AcWing-790-数的三次方根">四、浮点数二分算法模板 —— <a href="https://www.acwing.com/problem/content/792/">模板题 AcWing 790. 数的三次方根</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 检查x是否满足某种性质  </span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(<span class="type">double</span> x)</span> &#123;  </span><br><span class="line">   <span class="comment">/* ... */</span>  a</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">// eps 表示精度，取决于题目对精度的要求，默认负六次方</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">double</span> <span class="variable">EPS</span> <span class="operator">=</span> <span class="number">1e-6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">floatBinarySearch</span><span class="params">(<span class="type">double</span> left, <span class="type">double</span> right)</span> &#123;  </span><br><span class="line">   <span class="keyword">while</span> (right - left &gt; EPS) &#123;  </span><br><span class="line">      <span class="type">double</span> <span class="variable">mid</span> <span class="operator">=</span> (left + right) / <span class="number">2</span>;  </span><br><span class="line">      <span class="keyword">if</span> (check(mid)) &#123;  </span><br><span class="line">         right = mid;  </span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">         left = mid;  </span><br><span class="line">      &#125;  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">return</span> left;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/792/">模板题 AcWing 790. 数的三次方根</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.util.Scanner;  </span><br><span class="line"></span><br><span class="line">public class Main &#123;  </span><br><span class="line"></span><br><span class="line">   public static void main(String[] args) &#123;  </span><br><span class="line">      Scanner in = new Scanner(System.in);  </span><br><span class="line">      double x = in.nextDouble();  </span><br><span class="line">      Double left = -Double.MAX_VALUE;  </span><br><span class="line">      Double right = Double.MAX_VALUE;  </span><br><span class="line">      // 由于负六次方精度不够</span><br><span class="line">      while (right - left &gt; 1e-8) &#123;  </span><br><span class="line">         Double mid = (left + right) / 2;  </span><br><span class="line">         if (mid * mid * mid &gt;= x) &#123;  </span><br><span class="line">            right = mid;  </span><br><span class="line">         &#125; else &#123;  </span><br><span class="line">            left = mid;  </span><br><span class="line">         &#125;  </span><br><span class="line">      &#125; </span><br><span class="line">      // 注意格式化输出字符串</span><br><span class="line">      System.out.printf(&quot;%.6f&quot;, left);  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、高精度加法-——-模板题-AcWing-791-高精度加法">五、高精度加法 —— <a href="https://www.acwing.com/problem/content/793/">模板题 AcWing 791. 高精度加法</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> * 大数据加法  </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">add</span><span class="params">(List&lt;Integer&gt; A, List&lt;Integer&gt; B)</span> &#123;  </span><br><span class="line">    <span class="comment">// 默认A &gt; B，如果不满足则对调</span></span><br><span class="line">   <span class="keyword">if</span> (A.size() &lt; B.size()) &#123;  </span><br><span class="line">      <span class="keyword">return</span> add(B, A);  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">   List&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; A.size(); i++) &#123;  </span><br><span class="line">      t += A.get(i);  </span><br><span class="line">      <span class="comment">// 如果在B的范围内，则加B</span></span><br><span class="line">      <span class="keyword">if</span> (i &lt; B.size()) &#123;  </span><br><span class="line">         t += B.get(i);  </span><br><span class="line">      &#125; </span><br><span class="line">      <span class="comment">// C记录余数</span></span><br><span class="line">      C.add(t % <span class="number">10</span>);  </span><br><span class="line">      t /= <span class="number">10</span>;  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="comment">// 进位</span></span><br><span class="line">   <span class="keyword">if</span> (t != <span class="number">0</span>) &#123;  </span><br><span class="line">      C.add(t);  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="comment">// 去掉开头的零</span></span><br><span class="line">   <span class="keyword">while</span> (C.size() &gt; <span class="number">1</span> &amp;&amp; C.get(C.size() - <span class="number">1</span>) == <span class="number">0</span>) &#123;  </span><br><span class="line">      C.remove(C.size() - <span class="number">1</span>);  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">return</span> C;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/793/">模板题 AcWing 791. 高精度加法</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;  </span><br><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;  </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;  </span><br><span class="line"><span class="keyword">import</span> java.util.List;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;  </span><br><span class="line">       <span class="comment">// 由于数据量较大，使用BufferedReader读取数据</span></span><br><span class="line">       <span class="type">BufferedReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));  </span><br><span class="line">       <span class="type">String</span> <span class="variable">A</span> <span class="operator">=</span> in.readLine();  </span><br><span class="line">       List&lt;Integer&gt; aList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> A.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">          aList.add(A.charAt(i) - <span class="string">&#x27;0&#x27;</span>);  </span><br><span class="line">       &#125;  </span><br><span class="line">       <span class="type">String</span> <span class="variable">B</span> <span class="operator">=</span> in.readLine();  </span><br><span class="line">       List&lt;Integer&gt; bList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> B.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">          bList.add(B.charAt(i) - <span class="string">&#x27;0&#x27;</span>);  </span><br><span class="line">       &#125;  </span><br><span class="line">       List&lt;Integer&gt; cList = add(aList, bList);  </span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> cList.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">          System.out.print(cList.get(i));  </span><br><span class="line">       &#125;  </span><br><span class="line">       <span class="comment">// 关闭资源</span></span><br><span class="line">       in.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**  </span></span><br><span class="line"><span class="comment">    * 大数据加法  </span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">add</span><span class="params">(List&lt;Integer&gt; A, List&lt;Integer&gt; B)</span> &#123;  </span><br><span class="line">      。。。。。。可参考上述实现</span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="六、高精度减法-——-模板题-AcWing-792-高精度减法">六、高精度减法 —— <a href="https://www.acwing.com/problem/content/794/">模板题 AcWing 792. 高精度减法</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">compare</span><span class="params">(List&lt;Integer&gt; A, List&lt;Integer&gt; B)</span> &#123;  </span><br><span class="line">    <span class="comment">// 优先比较数组长度，长度更大，数值更大</span></span><br><span class="line">   <span class="keyword">if</span> (A.size() != B.size()) &#123;  </span><br><span class="line">      <span class="keyword">return</span> A.size() &gt; B.size();  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> A.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">      <span class="keyword">if</span> (A.get(i) == B.get(i)) &#123;  </span><br><span class="line">         <span class="keyword">continue</span>;  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">return</span> A.get(i) &gt; B.get(i);  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> * 大数据减法  </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">subtract</span><span class="params">(List&lt;Integer&gt; A, List&lt;Integer&gt; B)</span> &#123;  </span><br><span class="line">   <span class="keyword">if</span> (!compare(A, B)) &#123;  </span><br><span class="line">      System.out.print(<span class="string">&quot;-&quot;</span>);  </span><br><span class="line">      <span class="keyword">return</span> subtract(B, A);  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">   List&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; A.size(); i++) &#123;  </span><br><span class="line">      t = A.get(i) - t;  </span><br><span class="line">      <span class="keyword">if</span> (i &lt; B.size()) &#123;  </span><br><span class="line">         t -= B.get(i);  </span><br><span class="line">      &#125;  </span><br><span class="line">      C.add((t + <span class="number">10</span>) % <span class="number">10</span>);  </span><br><span class="line">      <span class="keyword">if</span> (t &lt; <span class="number">0</span>) &#123;  </span><br><span class="line">         t = <span class="number">1</span>;  </span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">         t = <span class="number">0</span>;  </span><br><span class="line">      &#125;  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">while</span> (C.size() &gt; <span class="number">1</span> &amp;&amp; C.get(C.size() - <span class="number">1</span>) == <span class="number">0</span>) &#123;  </span><br><span class="line">      C.remove(C.size() - <span class="number">1</span>);  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">return</span> C;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/794/">模板题 AcWing 792. 高精度减法</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;  </span><br><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;  </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;  </span><br><span class="line"><span class="keyword">import</span> java.util.List;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;  </span><br><span class="line">      <span class="type">BufferedReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));  </span><br><span class="line">      <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> in.readLine();  </span><br><span class="line">      List&lt;Integer&gt; A = getIntegerList(s);  </span><br><span class="line">      s = in.readLine();  </span><br><span class="line">      List&lt;Integer&gt; B = getIntegerList(s);  </span><br><span class="line">      List&lt;Integer&gt; C = subtract(A, B);  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> C.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">         System.out.print(C.get(i));  </span><br><span class="line">      &#125;  </span><br><span class="line">      in.close();  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="comment">/**  </span></span><br><span class="line"><span class="comment">    * 由于是大数据，因此用BufferedReader读取 根据读取的字符串转换成集合  </span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">getIntegerList</span><span class="params">(String s)</span> &#123;  </span><br><span class="line">      List&lt;Integer&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(s.length());  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> s.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">         res.add(Character.getNumericValue(s.charAt(i)));  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">return</span> res;  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">compare</span><span class="params">(List&lt;Integer&gt; A, List&lt;Integer&gt; B)</span> &#123;  </span><br><span class="line">      <span class="keyword">if</span> (A.size() != B.size()) &#123;  </span><br><span class="line">         <span class="keyword">return</span> A.size() &gt; B.size();  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> A.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">         <span class="keyword">if</span> (A.get(i) == B.get(i)) &#123;  </span><br><span class="line">            <span class="keyword">continue</span>;  </span><br><span class="line">         &#125;  </span><br><span class="line">         <span class="keyword">return</span> A.get(i) &gt; B.get(i);  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="comment">/**  </span></span><br><span class="line"><span class="comment">    * 大数据减法  </span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">subtract</span><span class="params">(List&lt;Integer&gt; A, List&lt;Integer&gt; B)</span> &#123;  </span><br><span class="line">      <span class="keyword">if</span> (!compare(A, B)) &#123;  </span><br><span class="line">         System.out.print(<span class="string">&quot;-&quot;</span>);  </span><br><span class="line">         <span class="keyword">return</span> subtract(B, A);  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">      List&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; A.size(); i++) &#123;  </span><br><span class="line">         t = A.get(i) - t;  </span><br><span class="line">         <span class="keyword">if</span> (i &lt; B.size()) &#123;  </span><br><span class="line">            t -= B.get(i);  </span><br><span class="line">         &#125;  </span><br><span class="line">         C.add((t + <span class="number">10</span>) % <span class="number">10</span>);  </span><br><span class="line">         <span class="keyword">if</span> (t &lt; <span class="number">0</span>) &#123;  </span><br><span class="line">            t = <span class="number">1</span>;  </span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">            t = <span class="number">0</span>;  </span><br><span class="line">         &#125;  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">while</span> (C.size() &gt; <span class="number">1</span> &amp;&amp; C.get(C.size() - <span class="number">1</span>) == <span class="number">0</span>) &#123;  </span><br><span class="line">         C.remove(C.size() - <span class="number">1</span>);  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">return</span> C;  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="七、高精度乘低精度-——-模板题-AcWing-793-高精度乘法">七、高精度乘低精度 —— <a href="https://www.acwing.com/problem/content/795/">模板题 AcWing 793. 高精度乘法</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> * 大数据乘法  </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">subtract</span><span class="params">(List&lt;Integer&gt; A, Integer b)</span> &#123;  </span><br><span class="line">   List&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">   <span class="keyword">if</span> (b == <span class="number">0</span>) &#123;  </span><br><span class="line">      C.add(<span class="number">0</span>);  </span><br><span class="line">      <span class="keyword">return</span> C;  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; A.size(); i++) &#123;  </span><br><span class="line">      t += A.get(i) * b;  </span><br><span class="line">      C.add(t % <span class="number">10</span>);  </span><br><span class="line">      t /= <span class="number">10</span>;  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">if</span> (t != <span class="number">0</span>) &#123;  </span><br><span class="line">      C.add(t);  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">while</span> (C.size() &gt; <span class="number">1</span> &amp;&amp; C.get(C.size() - <span class="number">1</span>) == <span class="number">0</span>) &#123;  </span><br><span class="line">      C.remove(C.size() - <span class="number">1</span>);  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">return</span> C;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/795/">模板题 AcWing 793. 高精度乘法</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;  </span><br><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;  </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;  </span><br><span class="line"><span class="keyword">import</span> java.util.List;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;  </span><br><span class="line">      <span class="type">BufferedReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));  </span><br><span class="line">      <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> in.readLine();  </span><br><span class="line">      List&lt;Integer&gt; A = getIntegerList(s);  </span><br><span class="line">      <span class="type">Integer</span> <span class="variable">b</span> <span class="operator">=</span> Integer.parseInt(in.readLine());  </span><br><span class="line">      List&lt;Integer&gt; C = subtract(A, b);  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> C.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">         System.out.print(C.get(i));  </span><br><span class="line">      &#125;  </span><br><span class="line">      in.close();  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="comment">/**  </span></span><br><span class="line"><span class="comment">    * 由于是大数据，因此用BufferedReader读取 根据读取的字符串转换成集合  </span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">getIntegerList</span><span class="params">(String s)</span> &#123;  </span><br><span class="line">      List&lt;Integer&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(s.length());  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> s.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">         res.add(Character.getNumericValue(s.charAt(i)));  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">return</span> res;  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="comment">/**  </span></span><br><span class="line"><span class="comment">    * 大数据乘法  </span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">subtract</span><span class="params">(List&lt;Integer&gt; A, Integer b)</span> &#123;  </span><br><span class="line">      List&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">      <span class="keyword">if</span> (b == <span class="number">0</span>) &#123;  </span><br><span class="line">         C.add(<span class="number">0</span>);  </span><br><span class="line">         <span class="keyword">return</span> C;  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; A.size(); i++) &#123;  </span><br><span class="line">         t += A.get(i) * b;  </span><br><span class="line">         C.add(t % <span class="number">10</span>);  </span><br><span class="line">         t /= <span class="number">10</span>;  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">if</span> (t != <span class="number">0</span>) &#123;  </span><br><span class="line">         C.add(t);  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">while</span> (C.size() &gt; <span class="number">1</span> &amp;&amp; C.get(C.size() - <span class="number">1</span>) == <span class="number">0</span>) &#123;  </span><br><span class="line">         C.remove(C.size() - <span class="number">1</span>);  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">return</span> C;  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="八、高精度除以低精度-——-模板题-AcWing-794-高精度除法">八、高精度除以低精度 —— <a href="https://www.acwing.com/problem/content/796/">模板题 AcWing 794. 高精度除法</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> * 大数据除法  </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">divide</span><span class="params">(List&lt;Integer&gt; A, Integer b)</span> &#123;  </span><br><span class="line">   <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">   List&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> A.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">      t = t * <span class="number">10</span> + A.get(i);  </span><br><span class="line">      C.add(t / b);  </span><br><span class="line">      t %= b;  </span><br><span class="line">   &#125;  </span><br><span class="line">   Collections.reverse(C);  </span><br><span class="line">   <span class="keyword">while</span> (C.size() &gt; <span class="number">1</span> &amp;&amp; C.get(C.size() - <span class="number">1</span>) == <span class="number">0</span>) &#123;  </span><br><span class="line">      C.remove(C.size() - <span class="number">1</span>);  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="comment">// 为了方便传递，放在了数组的最后一位，因此输出时需要从倒数第二位开始  </span></span><br><span class="line">   C.add(t);  </span><br><span class="line">   <span class="keyword">return</span> C;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/796/">模板题 AcWing 794. 高精度除法</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;  </span><br><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;  </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;  </span><br><span class="line"><span class="keyword">import</span> java.util.Collections;  </span><br><span class="line"><span class="keyword">import</span> java.util.List;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;  </span><br><span class="line">      <span class="type">BufferedReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));  </span><br><span class="line">      <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> in.readLine();  </span><br><span class="line">      List&lt;Integer&gt; A = getIntegerList(s);  </span><br><span class="line">      <span class="type">Integer</span> <span class="variable">b</span> <span class="operator">=</span> Integer.parseInt(in.readLine());  </span><br><span class="line">      List&lt;Integer&gt; C = divide(A, b);  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> C.size() - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">         System.out.print(C.get(i));  </span><br><span class="line">      &#125;  </span><br><span class="line">      System.out.println();  </span><br><span class="line">      System.out.print(C.get(C.size() - <span class="number">1</span>));  </span><br><span class="line">      in.close();  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="comment">/**  </span></span><br><span class="line"><span class="comment">    * 由于是大数据，因此用BufferedReader读取 根据读取的字符串转换成集合  </span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">getIntegerList</span><span class="params">(String s)</span> &#123;  </span><br><span class="line">      List&lt;Integer&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(s.length());  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> s.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">         res.add(Character.getNumericValue(s.charAt(i)));  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">return</span> res;  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="comment">/**  </span></span><br><span class="line"><span class="comment">    * 大数据除法  </span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">divide</span><span class="params">(List&lt;Integer&gt; A, Integer b)</span> &#123;  </span><br><span class="line">      <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">      List&lt;Integer&gt; C = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> A.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;  </span><br><span class="line">         t = t * <span class="number">10</span> + A.get(i);  </span><br><span class="line">         C.add(t / b);  </span><br><span class="line">         t %= b;  </span><br><span class="line">      &#125;  </span><br><span class="line">      Collections.reverse(C);  </span><br><span class="line">      <span class="keyword">while</span> (C.size() &gt; <span class="number">1</span> &amp;&amp; C.get(C.size() - <span class="number">1</span>) == <span class="number">0</span>) &#123;  </span><br><span class="line">         C.remove(C.size() - <span class="number">1</span>);  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="comment">// 为了方便传递，放在了数组的最后一位，因此输出时需要从倒数第二位开始  </span></span><br><span class="line">      C.add(t);  </span><br><span class="line">      <span class="keyword">return</span> C;  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="九、一维前缀和-——-303-区域和检索-数组不可变">九、一维前缀和 ——  <a href="https://leetcode-cn.com/problems/range-sum-query-immutable/">303. 区域和检索 - 数组不可变</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NumArray</span> &#123;</span><br><span class="line">    <span class="comment">// 前缀和数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] preSum;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 输入一个数组，构造前缀和 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">NumArray</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="comment">// preSum[0] = 0，便于计算累加和</span></span><br><span class="line">        preSum = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length + <span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 计算 nums 的累加和</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; preSum.length; i++) &#123;</span><br><span class="line">            preSum[i] = preSum[i - <span class="number">1</span>] + nums[i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 查询闭区间 [left, right] 的累加和 */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">sumRange</span><span class="params">(<span class="type">int</span> left, <span class="type">int</span> right)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> preSum[right + <span class="number">1</span>] - preSum[left];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="十、二维前缀和-——-304-二维区域和检索-矩阵不可变。">十、二维前缀和 ——  <a href="https://leetcode-cn.com/problems/range-sum-query-2d-immutable/">304. 二维区域和检索 - 矩阵不可变</a>。</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NumMatrix</span> &#123;</span><br><span class="line">    <span class="comment">// 定义：preSum[i][j] 记录 matrix 中子矩阵 [0, 0, i-1, j-1] 的元素和</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[][] preSum;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">NumMatrix</span><span class="params">(<span class="type">int</span>[][] matrix)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> matrix.length, n = matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">if</span> (m == <span class="number">0</span> || n == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">// 构造前缀和矩阵</span></span><br><span class="line">        preSum = <span class="keyword">new</span> <span class="title class_">int</span>[m + <span class="number">1</span>][n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">                <span class="comment">// 计算每个矩阵 [0, 0, i, j] 的元素和</span></span><br><span class="line">                preSum[i][j] = preSum[i-<span class="number">1</span>][j] + preSum[i][j-<span class="number">1</span>] + matrix[i - <span class="number">1</span>][j - <span class="number">1</span>] - preSum[i-<span class="number">1</span>][j-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算子矩阵 [x1, y1, x2, y2] 的元素和</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">sumRegion</span><span class="params">(<span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> x2, <span class="type">int</span> y2)</span> &#123;</span><br><span class="line">        <span class="comment">// 目标矩阵之和由四个相邻矩阵运算获得</span></span><br><span class="line">        <span class="keyword">return</span> preSum[x2+<span class="number">1</span>][y2+<span class="number">1</span>] - preSum[x1][y2+<span class="number">1</span>] - preSum[x2+<span class="number">1</span>][y1] + preSum[x1][y1];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="十一、一维差分-——-1109-航班预订统计">十一、一维差分 —— <a href="https://leetcode.cn/problems/corporate-flight-bookings/">1109. 航班预订统计</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Difference</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] diff;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">Difference</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        diff = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            diff[i] = nums[i] - nums[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">increment</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        diff[i] += val;</span><br><span class="line">        <span class="keyword">if</span> (j + <span class="number">1</span> &lt; diff.length) &#123;</span><br><span class="line">            diff[j + <span class="number">1</span>] -= val;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] result() &#123;</span><br><span class="line">        <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[diff.length];</span><br><span class="line">        res[<span class="number">0</span>] = diff[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; res.length; i++) &#123;</span><br><span class="line">            res[i] = res[i - <span class="number">1</span>] + diff[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="十二、二维差分-——-模板题-AcWing-798-差分矩阵">十二、二维差分 —— <a href="https://www.acwing.com/problem/content/800/">模板题 AcWing 798. 差分矩阵</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">给以(x1, y1)为左上角，(x2, y2)为右下角的子矩阵中的所有元素加上 c：</span><br><span class="line">S[x1, y1] += c, S[x2 + <span class="number">1</span>, y1] -= c, S[x1, y2 + <span class="number">1</span>] -= c, S[x2 + <span class="number">1</span>, y2 + <span class="number">1</span>] += c</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">1010</span>;  </span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[][] a = <span class="keyword">new</span> <span class="title class_">int</span>[N + <span class="number">5</span>][N + <span class="number">5</span>];  </span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[][] s = <span class="keyword">new</span> <span class="title class_">int</span>[N + <span class="number">5</span>][N + <span class="number">5</span>];  </span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[][] b = <span class="keyword">new</span> <span class="title class_">int</span>[N + <span class="number">5</span>][N + <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">difference</span><span class="params">(<span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> x2, <span class="type">int</span> y2, <span class="type">int</span> c)</span> &#123;  </span><br><span class="line">   b[x1][y1] += c;  </span><br><span class="line">   b[x2 + <span class="number">1</span>][y1] -= c;  </span><br><span class="line">   b[x1][y2 + <span class="number">1</span>] -= c;  </span><br><span class="line">   b[x2 + <span class="number">1</span>][y2 + <span class="number">1</span>] += c;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sumPrefix</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m)</span> &#123;  </span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= m; j++) &#123;  </span><br><span class="line">         s[i][j] = s[i - <span class="number">1</span>][j] + s[i][j - <span class="number">1</span>] - s[i - <span class="number">1</span>][j - <span class="number">1</span>] + b[i][j];  </span><br><span class="line">      &#125;  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/800/">模板题 AcWing 798. 差分矩阵</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">1010</span>;  </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[][] a = <span class="keyword">new</span> <span class="title class_">int</span>[N + <span class="number">5</span>][N + <span class="number">5</span>];  </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[][] s = <span class="keyword">new</span> <span class="title class_">int</span>[N + <span class="number">5</span>][N + <span class="number">5</span>];  </span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[][] b = <span class="keyword">new</span> <span class="title class_">int</span>[N + <span class="number">5</span>][N + <span class="number">5</span>];  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;  </span><br><span class="line">      <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);  </span><br><span class="line">      <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">      <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">      <span class="type">int</span> <span class="variable">q</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;  </span><br><span class="line">         <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= m; j++) &#123;  </span><br><span class="line">            a[i][j] = in.nextInt();  </span><br><span class="line">            difference(i, j, i, j, a[i][j]);  </span><br><span class="line">         &#125;  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">while</span> (q-- &gt; <span class="number">0</span>) &#123;  </span><br><span class="line">         <span class="type">int</span> <span class="variable">x1</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">         <span class="type">int</span> <span class="variable">y1</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">         <span class="type">int</span> <span class="variable">x2</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">         <span class="type">int</span> <span class="variable">y2</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">         <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">         difference(x1, y1, x2, y2, c);  </span><br><span class="line">      &#125;  </span><br><span class="line">      sumPrefix(n, m);  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;  </span><br><span class="line">         <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= m; j++) &#123;  </span><br><span class="line">            System.out.print(s[i][j] + <span class="string">&quot; &quot;</span>);  </span><br><span class="line">         &#125;  </span><br><span class="line">         System.out.println();  </span><br><span class="line">      &#125;  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">difference</span><span class="params">(<span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> x2, <span class="type">int</span> y2, <span class="type">int</span> c)</span> &#123;  </span><br><span class="line">      b[x1][y1] += c;  </span><br><span class="line">      b[x2 + <span class="number">1</span>][y1] -= c;  </span><br><span class="line">      b[x1][y2 + <span class="number">1</span>] -= c;  </span><br><span class="line">      b[x2 + <span class="number">1</span>][y2 + <span class="number">1</span>] += c;  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sumPrefix</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m)</span> &#123;  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;  </span><br><span class="line">         <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= m; j++) &#123;  </span><br><span class="line">            s[i][j] = s[i - <span class="number">1</span>][j] + s[i][j - <span class="number">1</span>] - s[i - <span class="number">1</span>][j - <span class="number">1</span>] + b[i][j];  </span><br><span class="line">         &#125;  </span><br><span class="line">      &#125;  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="十三、位运算-——-模板题-AcWing-801-二进制中-1-的个数">十三、位运算 —— <a href="https://www.acwing.com/problem/content/803/">模板题 AcWing 801. 二进制中 1 的个数</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private static int countDigitOne(int x) &#123;  </span><br><span class="line">   int count = 0;  </span><br><span class="line">   for (int i = x; i != 0; i -= (i &amp; -i)) &#123;  </span><br><span class="line">      count++;  </span><br><span class="line">   &#125;  </span><br><span class="line">   return count;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/803/">模板题 AcWing 801. 二进制中 1 的个数</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;  </span><br><span class="line"><span class="keyword">import</span> java.util.stream.IntStream;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;  </span><br><span class="line">      <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);  </span><br><span class="line">      <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">      <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[n + <span class="number">5</span>];  </span><br><span class="line">      IntStream.range(<span class="number">0</span>, n).forEach(i -&gt; a[i] = in.nextInt());  </span><br><span class="line">      IntStream.range(<span class="number">0</span>, n).mapToObj(i -&gt; countDigitOne(a[i]) + <span class="string">&quot; &quot;</span>).forEach(System.out::print);  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">countDigitOne</span><span class="params">(<span class="type">int</span> x)</span> &#123;  </span><br><span class="line">      <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> x; i != <span class="number">0</span>; i -= (i &amp; -i)) &#123;  </span><br><span class="line">         count++;  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">return</span> count;  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="十四、双指针算法-——-模板题-AcWIng-799-最长连续不重复子序列-，-AcWing-800-数组元素的目标和">十四、双指针算法 —— 模板题 <a href="https://www.acwing.com/problem/content/801/">AcWIng 799. 最长连续不重复子序列</a> ， <a href="https://www.acwing.com/problem/content/802/">AcWing 800. 数组元素的目标和</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class="line">    <span class="keyword">while</span> (j &lt; i &amp;&amp; check(i, j)) &#123;</span><br><span class="line">        j ++ ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 具体问题的逻辑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模板题 <a href="https://www.acwing.com/problem/content/801/">AcWIng 799. 最长连续不重复子序列</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;  </span><br><span class="line"><span class="keyword">import</span> java.util.Map;  </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;  </span><br><span class="line"><span class="keyword">import</span> java.util.stream.IntStream;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;  </span><br><span class="line">      <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);  </span><br><span class="line">      <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">      <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[n + <span class="number">5</span>];  </span><br><span class="line">      IntStream.range(<span class="number">0</span>, n).forEach(i -&gt; a[i] = in.nextInt());  </span><br><span class="line">      <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> twoPoints(a, n);  </span><br><span class="line">      System.out.println(res);  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">twoPoints</span><span class="params">(<span class="type">int</span>[] a, <span class="type">int</span> n)</span> &#123;  </span><br><span class="line">      <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">      Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();  </span><br><span class="line">      <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;  </span><br><span class="line">         map.put(a[i], map.getOrDefault(a[i], <span class="number">0</span>) + <span class="number">1</span>);  </span><br><span class="line">         <span class="keyword">while</span> (j &lt; i &amp;&amp; map.get(a[i]) &gt; <span class="number">1</span>) &#123;  </span><br><span class="line">            map.put(a[j], map.getOrDefault(a[j], <span class="number">0</span>) - <span class="number">1</span>);  </span><br><span class="line">            j++;  </span><br><span class="line">         &#125;  </span><br><span class="line">         res = Math.max(res, i - j + <span class="number">1</span>);  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">return</span> res;  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模板题 <a href="https://www.acwing.com/problem/content/802/">AcWing 800. 数组元素的目标和</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;  </span><br><span class="line"><span class="keyword">import</span> java.util.List;  </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;  </span><br><span class="line"><span class="keyword">import</span> java.util.stream.IntStream;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;  </span><br><span class="line">      <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);  </span><br><span class="line">      <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">      <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">      <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">      <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[n + <span class="number">5</span>];  </span><br><span class="line">      IntStream.range(<span class="number">0</span>, n).forEach(i -&gt; a[i] = in.nextInt());  </span><br><span class="line">      <span class="type">int</span>[] b = <span class="keyword">new</span> <span class="title class_">int</span>[m + <span class="number">5</span>];  </span><br><span class="line">      IntStream.range(<span class="number">0</span>, m).forEach(i -&gt; b[i] = in.nextInt());  </span><br><span class="line">      List&lt;<span class="type">int</span>[]&gt; res = twoPoints(a, n, b, m, x);  </span><br><span class="line">      res.forEach(item -&gt; System.out.println(item[<span class="number">0</span>] + <span class="string">&quot; &quot;</span> + item[<span class="number">1</span>]));  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> List&lt;<span class="type">int</span>[]&gt; twoPoints(<span class="type">int</span>[] a, <span class="type">int</span> n, <span class="type">int</span>[] b, <span class="type">int</span> m, <span class="type">int</span> x) &#123;  </span><br><span class="line">      List&lt;<span class="type">int</span>[]&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = m - <span class="number">1</span>; i &lt; n; i++) &#123;  </span><br><span class="line">         <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; a[i] + b[j] &gt; x) &#123;  </span><br><span class="line">            j--;  </span><br><span class="line">         &#125;  </span><br><span class="line">         <span class="keyword">if</span> (j &gt;= <span class="number">0</span> &amp;&amp; a[i] + b[j] == x) &#123;  </span><br><span class="line">            res.add(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;i, j&#125;);  </span><br><span class="line">         &#125;  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">return</span> res;  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="十五、离散化-——-模板题-AcWing-802-区间和">十五、离散化 —— <a href="https://www.acwing.com/problem/content/804/">模板题 AcWing 802. 区间和</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 去重 + 排序  </span></span><br><span class="line">List&lt;Integer&gt; distinctSorterAlls = alls.stream().distinct().sorted()  </span><br><span class="line">      .collect(Collectors.toList());  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 离散化映射，把离散化的下标映射到连续的数组下标 + 1for (int[] item : add) &#123;  </span></span><br><span class="line">   <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> Collections.binarySearch(distinctSorterAlls, item[<span class="number">0</span>]) + <span class="number">1</span>;  </span><br><span class="line">   a[index] += item[<span class="number">1</span>];  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 前缀和  </span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= distinctSorterAlls.size(); i++) &#123;  </span><br><span class="line">   s[i] = s[i - <span class="number">1</span>] + a[i];  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 离散化映射，把离散化的下标映射到连续的数组下标 + 1for (int[] item : query) &#123;  </span></span><br><span class="line">   <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> Collections.binarySearch(distinctSorterAlls, item[<span class="number">0</span>]) + <span class="number">1</span>;  </span><br><span class="line">   <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> Collections.binarySearch(distinctSorterAlls, item[<span class="number">1</span>]) + <span class="number">1</span>;  </span><br><span class="line">   System.out.println(s[r] - s[l - <span class="number">1</span>]);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/804/">模板题 AcWing 802. 区间和</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;  </span><br><span class="line"><span class="keyword">import</span> java.util.Collections;  </span><br><span class="line"><span class="keyword">import</span> java.util.List;  </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;  </span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">300000</span>;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">      <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);  </span><br><span class="line">      <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">      <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">      List&lt;Integer&gt; alls = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">      <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[N];  </span><br><span class="line">      <span class="type">int</span>[] s = <span class="keyword">new</span> <span class="title class_">int</span>[N];  </span><br><span class="line">      List&lt;<span class="type">int</span>[]&gt; add = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">      List&lt;<span class="type">int</span>[]&gt; query = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;  </span><br><span class="line">         <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">         <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">         add.add(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;x, c&#125;);  </span><br><span class="line">         alls.add(x);  </span><br><span class="line">      &#125;  </span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;  </span><br><span class="line">         <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">         <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">         query.add(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;l, r&#125;);  </span><br><span class="line">         alls.add(l);  </span><br><span class="line">         alls.add(r);  </span><br><span class="line">      &#125;  </span><br><span class="line"></span><br><span class="line">      <span class="comment">// 去重 + 排序  </span></span><br><span class="line">      List&lt;Integer&gt; distinctSorterAlls = alls.stream().distinct().sorted()  </span><br><span class="line">            .collect(Collectors.toList());  </span><br><span class="line"></span><br><span class="line">      <span class="comment">// 离散化映射，把离散化的下标映射到连续的数组下标 + 1      for (int[] item : add) &#123;  </span></span><br><span class="line">         <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> Collections.binarySearch(distinctSorterAlls, item[<span class="number">0</span>]) + <span class="number">1</span>;  </span><br><span class="line">         a[index] += item[<span class="number">1</span>];  </span><br><span class="line">      &#125;  </span><br><span class="line"></span><br><span class="line">      <span class="comment">// 前缀和  </span></span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= distinctSorterAlls.size(); i++) &#123;  </span><br><span class="line">         s[i] = s[i - <span class="number">1</span>] + a[i];  </span><br><span class="line">      &#125;  </span><br><span class="line"></span><br><span class="line">      <span class="comment">// 离散化映射，把离散化的下标映射到连续的数组下标 + 1      for (int[] item : query) &#123;  </span></span><br><span class="line">         <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> Collections.binarySearch(distinctSorterAlls, item[<span class="number">0</span>]) + <span class="number">1</span>;  </span><br><span class="line">         <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> Collections.binarySearch(distinctSorterAlls, item[<span class="number">1</span>]) + <span class="number">1</span>;  </span><br><span class="line">         System.out.println(s[r] - s[l - <span class="number">1</span>]);  </span><br><span class="line">      &#125;  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="十六、区间合并-——-模板题-AcWing-803-区间合并">十六、区间合并 —— <a href="https://www.acwing.com/problem/content/805/">模板题 AcWing 803. 区间合并</a></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[][] merge(<span class="type">int</span>[][] a) &#123;  </span><br><span class="line">   <span class="keyword">if</span> (a == <span class="literal">null</span> || a.length == <span class="number">0</span> || a[<span class="number">0</span>].length == <span class="number">0</span>) &#123;  </span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">0</span>][<span class="number">2</span>];  </span><br><span class="line">   &#125;  </span><br><span class="line">   Arrays.sort(a, Comparator.comparingInt(item -&gt; item[<span class="number">0</span>]));  </span><br><span class="line">   List&lt;<span class="type">int</span>[]&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span>[] arr : a) &#123;  </span><br><span class="line">      <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> arr[<span class="number">0</span>];  </span><br><span class="line">      <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> arr[<span class="number">1</span>];  </span><br><span class="line">      <span class="keyword">if</span> (res.size() == <span class="number">0</span> || res.get(res.size() - <span class="number">1</span>)[<span class="number">1</span>] &lt; left) &#123;  </span><br><span class="line">         res.add(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;left, right&#125;);  </span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">         <span class="type">int</span> <span class="variable">newRight</span> <span class="operator">=</span> Math.max(res.get(res.size() - <span class="number">1</span>)[<span class="number">1</span>], left);  </span><br><span class="line">         res.set(res.size() - <span class="number">1</span>, <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;res.get(res.size() - <span class="number">1</span>)[<span class="number">0</span>], newRight&#125;);  </span><br><span class="line">      &#125;  </span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">return</span> res.toArray(<span class="keyword">new</span> <span class="title class_">int</span>[res.size()][<span class="number">2</span>]);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/805/">模板题 AcWing 803. 区间合并</a></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;  </span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;  </span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;  </span><br><span class="line"><span class="keyword">import</span> java.util.List;  </span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;  </span><br><span class="line"><span class="keyword">import</span> java.util.stream.IntStream;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">      <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);  </span><br><span class="line">      <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">      <span class="type">int</span>[][] a = <span class="keyword">new</span> <span class="title class_">int</span>[n][<span class="number">2</span>];  </span><br><span class="line">      IntStream.range(<span class="number">0</span>, n).forEach(i -&gt; &#123;  </span><br><span class="line">         <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">         a[i][<span class="number">0</span>] = l;  </span><br><span class="line">         <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> in.nextInt();  </span><br><span class="line">         a[i][<span class="number">1</span>] = r;  </span><br><span class="line">      &#125;);  </span><br><span class="line">      <span class="type">int</span>[][] res = merge(a);  </span><br><span class="line">      System.out.println(res.length);  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[][] merge(<span class="type">int</span>[][] a) &#123;  </span><br><span class="line">      <span class="keyword">if</span> (a == <span class="literal">null</span> || a.length == <span class="number">0</span> || a[<span class="number">0</span>].length == <span class="number">0</span>) &#123;  </span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">0</span>][<span class="number">2</span>];  </span><br><span class="line">      &#125;  </span><br><span class="line">      Arrays.sort(a, Comparator.comparingInt(item -&gt; item[<span class="number">0</span>]));  </span><br><span class="line">      List&lt;<span class="type">int</span>[]&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span>[] arr : a) &#123;  </span><br><span class="line">         <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> arr[<span class="number">0</span>];  </span><br><span class="line">         <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> arr[<span class="number">1</span>];  </span><br><span class="line">         <span class="keyword">if</span> (res.size() == <span class="number">0</span> || res.get(res.size() - <span class="number">1</span>)[<span class="number">1</span>] &lt; left) &#123;  </span><br><span class="line">            res.add(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;left, right&#125;);  </span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">            <span class="type">int</span> <span class="variable">newRight</span> <span class="operator">=</span> Math.max(res.get(res.size() - <span class="number">1</span>)[<span class="number">1</span>], right);  </span><br><span class="line">            res.set(res.size() - <span class="number">1</span>, <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;res.get(res.size() - <span class="number">1</span>)[<span class="number">0</span>], newRight&#125;);  </span><br><span class="line">         &#125;  </span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">return</span> res.toArray(<span class="keyword">new</span> <span class="title class_">int</span>[res.size()][<span class="number">2</span>]);  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 代码模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回溯暴搜-排列组合问题全解</title>
      <link href="/posts/53015.html"/>
      <url>/posts/53015.html</url>
      
        <content type="html"><![CDATA[<h2 id="回溯算法模板">回溯算法模板</h2><p>回溯算法和DFS很像, 本质都是是一种暴力枚举算法, 不过回溯算法是遍历树枝, DFS是在遍历结点</p><p>回溯问题需要思考三个问题</p><ul><li>路径: 做出的选择</li><li>选择列表: 当前可以做的选择</li><li>结束条件: 到达决策底层无需或者无法进一步选择</li></ul><p>伪代码模板(python)</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = []</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">backtrack</span>(<span class="params">路径, 选择列表</span>):</span><br><span class="line">    <span class="keyword">if</span> 满足结束条件:</span><br><span class="line">        result.add(路径)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> 选择 <span class="keyword">in</span> 选择列表:</span><br><span class="line">        做选择</span><br><span class="line">        backtrack(路径, 选择列表)</span><br><span class="line">        撤销选择</span><br></pre></td></tr></table></figure><p>本质上就是对一棵递归树进行选择和撤回,在合适的位置(前序和后续)进行选择和记录</p><p>以下是全排列代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; <span class="title function_">permute</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="comment">// 记录「路径」</span></span><br><span class="line">        LinkedList&lt;Integer&gt; track = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 「路径」中的元素会被标记为 true，避免重复使用</span></span><br><span class="line">        <span class="type">boolean</span>[] used = <span class="keyword">new</span> <span class="title class_">boolean</span>[nums.length];</span><br><span class="line">        </span><br><span class="line">        backtrack(nums, track, used);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 路径：记录在 track 中</span></span><br><span class="line">    <span class="comment">// 选择列表：nums 中不存在于 track 的那些元素（used[i] 为 false）</span></span><br><span class="line">    <span class="comment">// 结束条件：nums 中的元素全都在 track 中出现</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">backtrack</span><span class="params">(<span class="type">int</span>[] nums, LinkedList&lt;Integer&gt; track, <span class="type">boolean</span>[] used)</span> &#123;</span><br><span class="line">        <span class="comment">// 触发结束条件</span></span><br><span class="line">        <span class="keyword">if</span> (track.size() == nums.length) &#123;</span><br><span class="line">            res.add(<span class="keyword">new</span> <span class="title class_">LinkedList</span>(track));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 排除不合法的选择</span></span><br><span class="line">            <span class="keyword">if</span> (used[i]) &#123;</span><br><span class="line">                <span class="comment">// nums[i] 已经在 track 中，跳过</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 做选择</span></span><br><span class="line">            track.add(nums[i]);</span><br><span class="line">            used[i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">// 进入下一层决策树</span></span><br><span class="line">            backtrack(nums, track, used);</span><br><span class="line">            <span class="comment">// 取消选择</span></span><br><span class="line">            track.removeLast();</span><br><span class="line">            used[i] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="排列组合的基本情况">排列组合的基本情况</h2><p>关键是如何在合适位置怎样的进行剪枝和记录</p><p>类似我们可以将问题分类成三类</p><ul><li><p>子集</p></li><li><p>组合</p></li><li><p>排列</p></li></ul><p>按照给出数组是否可选元素是否可以复选又可以分为三类</p><ul><li>元素无重不可复选</li><li>元素可重不可复选</li><li>元素无重可复选</li></ul><p>元素可重复可选其实就是无重可复选</p><p>比如输入 <code>nums = [1,2,3]</code>，算法应该返回如下子集：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ [],[1],[2],[3],[1,2],[1,3],[2,3],[1,2,3] ]</span><br></pre></td></tr></table></figure><p>子集问题是对每次选择进行记录所以在遍历决策树的前序位置将路径添加到结果集中</p><p><strong>我们通过保证元素之间的相对顺序不变来防止出现重复的子集</strong>。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">// 记录回溯算法的递归路径</span></span><br><span class="line">    LinkedList&lt;Integer&gt; track = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 主函数</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">subsets</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        backtrack(nums, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 回溯算法核心函数，遍历子集问题的回溯树</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">backtrack</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> start)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 前序位置，每个节点的值都是一个子集</span></span><br><span class="line">        res.add(<span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;(track));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 回溯算法标准框架</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 做选择</span></span><br><span class="line">            track.addLast(nums[i]);</span><br><span class="line">            <span class="comment">// 通过 start 参数控制树枝的遍历，避免产生重复的子集</span></span><br><span class="line">            backtrack(nums, i + <span class="number">1</span>);</span><br><span class="line">            <span class="comment">// 撤销选择</span></span><br><span class="line">            track.removeLast();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>组合问题</p><p><strong>组合就是对应长度的子集</strong></p><p>实际上就是在子集问题的基础上加一层判断,只有当子集中元素的个数等于组合数的长度时才记录</p><p>比如我们要组合 <code>nums = [1,2,3]</code>中的两个数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ [1,2],[1,3],[2,3] ]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">// 记录回溯算法的递归路径</span></span><br><span class="line">    LinkedList&lt;Integer&gt; track = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 主函数</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">combine</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        backtrack(<span class="number">1</span>, n, k);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">backtrack</span><span class="params">(<span class="type">int</span> start, <span class="type">int</span> n, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="comment">// base case</span></span><br><span class="line">        <span class="keyword">if</span> (k == track.size()) &#123;</span><br><span class="line">            <span class="comment">// 遍历到了第 k 层，收集当前节点的值</span></span><br><span class="line">            res.add(<span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;(track));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 回溯算法标准框架</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="comment">// 选择</span></span><br><span class="line">            track.addLast(i);</span><br><span class="line">            <span class="comment">// 通过 start 参数控制树枝的遍历，避免产生重复的子集</span></span><br><span class="line">            backtrack(i + <span class="number">1</span>, n, k);</span><br><span class="line">            <span class="comment">// 撤销选择</span></span><br><span class="line">            track.removeLast();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从最简单的子集问题推广到需要加判断条件和start的组合问题以及加判断条件和used数组的排列问题</p><h2 id="排列组合复杂情况">排列组合复杂情况</h2><p>对于回溯的排列组合问题上述元素均为无重复且不可复选的情况</p><p>实际可以分为三类</p><ul><li>无重复不可复选</li><li>有重复不可复选</li><li>无重复可复选</li></ul><p>有重复可复选的情况本质和无重复可复选一样(既然可复选,元素重不重复都一样,等价于无重复可复选)</p><p>无重复不可复选就是最基本的情况,上面已经讲过了</p><p>下面谈谈有重复不可复选的情况</p><p>子集问题</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">    LinkedList&lt;Integer&gt; track = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">subsetsWithDup</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="comment">// 先排序，让相同的元素靠在一起</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        backtrack(nums, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">backtrack</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> start)</span> &#123;</span><br><span class="line">        <span class="comment">// 前序位置，每个节点的值都是一个子集</span></span><br><span class="line">        res.add(<span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;(track));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 剪枝逻辑，值相同的相邻树枝，只遍历第一条</span></span><br><span class="line">            <span class="keyword">if</span> (i &gt; start &amp;&amp; nums[i] == nums[i - <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            track.addLast(nums[i]);</span><br><span class="line">            backtrack(nums, i + <span class="number">1</span>);</span><br><span class="line">            track.removeLast();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>组合</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">    LinkedList&lt;Integer&gt; track = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">subsetsWithDup</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="comment">// 先排序，让相同的元素靠在一起</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        backtrack(nums, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">backtrack</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> start)</span> &#123;</span><br><span class="line">         <span class="comment">// base case</span></span><br><span class="line">        <span class="keyword">if</span> (nums.length == track.size()) &#123;</span><br><span class="line">            <span class="comment">// 遍历到了第 k 层，收集当前节点的值</span></span><br><span class="line">            res.add(<span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;(track));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 剪枝逻辑，值相同的相邻树枝，只遍历第一条</span></span><br><span class="line">            <span class="keyword">if</span> (i &gt; start &amp;&amp; nums[i] == nums[i - <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            track.addLast(nums[i]);</span><br><span class="line">            backtrack(nums, i + <span class="number">1</span>);</span><br><span class="line">            track.removeLast();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>排列</p><p>假设输入为 <code>nums = [1,2,2']</code>，标准的全排列算法会得出如下答案：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    [1,2,2&#x27;],[1,2&#x27;,2],</span><br><span class="line">    [2,1,2&#x27;],[2,2&#x27;,1],</span><br><span class="line">    [2&#x27;,1,2],[2&#x27;,2,1]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>显然，这个结果存在重复，比如 <code>[1,2,2']</code> 和 <code>[1,2',2]</code> 应该只被算作同一个排列，但被算作了两个不同的排列。</p><p>所以现在的关键在于，如何设计剪枝逻辑，把这种重复去除掉？</p><p><strong>答案是，保证相同元素在排列中的相对位置保持不变</strong>。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">    LinkedList&lt;Integer&gt; track = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">    <span class="type">boolean</span>[] used;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">permuteUnique</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="comment">// 先排序，让相同的元素靠在一起</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        used = <span class="keyword">new</span> <span class="title class_">boolean</span>[nums.length];</span><br><span class="line">        backtrack(nums);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">backtrack</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (track.size() == nums.length) &#123;</span><br><span class="line">            res.add(<span class="keyword">new</span> <span class="title class_">LinkedList</span>(track));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (used[i]) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 新添加的剪枝逻辑，固定相同的元素在排列中的相对位置,保证同一层不出现相同的值</span></span><br><span class="line">           <span class="comment">//当出现重复元素时，比如输入 nums = [1,2,2&#x27;,2&#x27;&#x27;]，2&#x27; 只有在 2 已经被使用的情况下才会被选择，同理，`2&#x27;&#x27;` 只有在 2&#x27; 已经被使用的情况下才会被选择，这就保证了相同元素在排列中的相对位置保证固定</span></span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; nums[i] == nums[i - <span class="number">1</span>] &amp;&amp; !used[i - <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="comment">// 如果前面的相邻相等元素没有用过，则跳过</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            track.add(nums[i]);</span><br><span class="line">            used[i] = <span class="literal">true</span>;</span><br><span class="line">            backtrack(nums);</span><br><span class="line">            track.removeLast();</span><br><span class="line">            used[i] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>当出现重复元素时，比如输入 <code>nums = [1,2,2',2'']</code>，<code>2'</code> 只有在 <code>2</code> 已经被使用的情况下才会被选择，同理，<code>2''</code> 只有在 <code>2'</code> 已经被使用的情况下才会被选择，这就保证了相同元素在排列中的相对位置保证固定</strong>。</p><p>这样的写法也可以,保证同一层不出现相同的值</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">backtrack</span><span class="params">(<span class="type">int</span>[] nums, LinkedList&lt;Integer&gt; track)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (track.size() == nums.length) &#123;</span><br><span class="line">        res.add(<span class="keyword">new</span> <span class="title class_">LinkedList</span>(track));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录之前树枝上元素的值</span></span><br><span class="line">    <span class="comment">// 题目说 -10 &lt;= nums[i] &lt;= 10，所以初始化为特殊值</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">prevNum</span> <span class="operator">=</span> -<span class="number">666</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="comment">// 排除不合法的选择</span></span><br><span class="line">        <span class="keyword">if</span> (used[i]) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (nums[i] == prevNum) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        track.add(nums[i]);</span><br><span class="line">        used[i] = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// 记录这条树枝上的值</span></span><br><span class="line">        prevNum = nums[i];</span><br><span class="line"></span><br><span class="line">        backtrack(nums, track);</span><br><span class="line"></span><br><span class="line">        track.removeLast();</span><br><span class="line">        used[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双指针问题</title>
      <link href="/posts/33830.html"/>
      <url>/posts/33830.html</url>
      
        <content type="html"><![CDATA[<h1>双指针</h1><h4 id="27-移除元素"><a href="https://leetcode.cn/problems/remove-element/">27. 移除元素</a></h4><p>给你一个数组 <code>nums</code> 和一个值 <code>val</code>，你需要 <strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95">原地</a></strong> 移除所有数值等于 <code>val</code> 的元素，并返回移除后数组的新长度。</p><p>不要使用额外的数组空间，你必须仅使用 <code>O(1)</code> 额外空间并 <strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95">原地 </a>修改输入数组</strong>。</p><p>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p><p><strong>说明:</strong></p><p>为什么返回数值是整数，但输出的答案是数组呢?</p><p>请注意，输入数组是以**「引用」**方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。</p><p>你可以想象内部操作如下:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝</span><br><span class="line">int len = removeElement(nums, val);</span><br><span class="line"></span><br><span class="line">// 在函数里修改输入数组对于调用者是可见的。</span><br><span class="line">// 根据你的函数返回的长度, 它会打印出数组中 该长度范围内 的所有元素。</span><br><span class="line">for (int i = 0; i &lt; len; i++) &#123;</span><br><span class="line">    print(nums[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [3,2,2,3], val = 3</span><br><span class="line">输出：2, nums = [2,2]</span><br><span class="line">解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [0,1,2,2,3,0,4,2], val = 2</span><br><span class="line">输出：5, nums = [0,1,4,0,3]</span><br><span class="line">解释：函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。注意这五个元素可为任意顺序。你不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>0 &lt;= nums.length &lt;= 100</code></li><li><code>0 &lt;= nums[i] &lt;= 50</code></li><li><code>0 &lt;= val &lt;= 100</code></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="comment">//快指针寻找新数组中的元素，慢指针g</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">fast</span> <span class="operator">=</span> <span class="number">0</span>, slow = <span class="number">0</span>;</span><br><span class="line">       <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">       <span class="keyword">while</span> (fast != nums.length) &#123;</span><br><span class="line">           <span class="keyword">if</span> (nums[fast] != val) &#123;</span><br><span class="line">               nums[slow++] = nums[fast]; </span><br><span class="line">           &#125;</span><br><span class="line">           fast++;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> slow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="977-有序数组的平方"><a href="https://leetcode.cn/problems/squares-of-a-sorted-array/">977. 有序数组的平方</a></h4><p><a href="https://leetcode.cn/problems/squares-of-a-sorted-array/#">思路</a></p><p>难度简单733</p><p>给你一个按 <strong>非递减顺序</strong> 排序的整数数组 <code>nums</code>，返回 <strong>每个数字的平方</strong> 组成的新数组，要求也按 <strong>非递减顺序</strong> 排序。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [-4,-1,0,3,10]</span><br><span class="line">输出：[0,1,9,16,100]</span><br><span class="line">解释：平方后，数组变为 [16,1,0,9,100]</span><br><span class="line">排序后，数组变为 [0,1,9,16,100]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [-7,-3,2,3,11]</span><br><span class="line">输出：[4,9,9,49,121]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 104</code></li><li><code>-104 &lt;= nums[i] &lt;= 104</code></li><li><code>nums</code> 已按 <strong>非递减顺序</strong> 排序</li></ul><p><strong>进阶：</strong></p><ul><li>请你设计时间复杂度为 <code>O(n)</code> 的算法解决本问题</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sortedSquares(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> , j = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> result[] = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line">        <span class="type">int</span> <span class="variable">cur</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= j &amp;&amp; cur &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] * nums[i] &gt;= nums[j] * nums[j]) &#123;</span><br><span class="line">                result[cur--] = nums[i] * nums[i];</span><br><span class="line">                i++;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                result[cur--] = nums[j] * nums[j];</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[][] generateMatrix(<span class="type">int</span> n) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">line</span> <span class="operator">=</span> <span class="number">0</span>, column = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">boundary</span> <span class="operator">=</span> n;</span><br><span class="line">        <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">stopValue</span> <span class="operator">=</span> n * n;</span><br><span class="line">        <span class="type">int</span>[][] matrix = <span class="keyword">new</span> <span class="title class_">int</span>[n][n];  </span><br><span class="line">        <span class="keyword">while</span> (value &lt; stopValue) &#123;</span><br><span class="line">            <span class="keyword">for</span> (; column &lt; boundary - <span class="number">1</span>; column++) &#123;</span><br><span class="line">                matrix[line][column] = value;</span><br><span class="line">                value++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (; line &lt; boundary - <span class="number">1</span>; line++) &#123;</span><br><span class="line">                matrix[line][column] = value;</span><br><span class="line">                value++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (; column &gt; n - boundary; column--) &#123;</span><br><span class="line">                matrix[line][column] = value;</span><br><span class="line">                value++; </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (; line &gt; n - boundary; line--) &#123;</span><br><span class="line">                matrix[line][column] = value;</span><br><span class="line">                value++;</span><br><span class="line">            &#125;</span><br><span class="line">            column++;</span><br><span class="line">            line++;</span><br><span class="line">            boundary--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> != <span class="number">0</span>) matrix[line][column] = value;</span><br><span class="line">        <span class="keyword">return</span> matrix;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="203-移除链表元素"><a href="https://leetcode.cn/problems/remove-linked-list-elements/">203. 移除链表元素</a></h4><p>难度简单1174</p><p>给你一个链表的头节点 <code>head</code> 和一个整数 <code>val</code> ，请你删除链表中所有满足 <code>Node.val == val</code> 的节点，并返回 <strong>新的头节点</strong> 。</p><p><strong>示例 1：</strong></p><p><img src="https://assets.leetcode.com/uploads/2021/03/06/removelinked-list.jpg" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：head = [1,2,6,3,4,5,6], val = 6</span><br><span class="line">输出：[1,2,3,4,5]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：head = [], val = 1</span><br><span class="line">输出：[]</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：head = [7,7,7,7], val = 7</span><br><span class="line">输出：[]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li>列表中的节点数目在范围 <code>[0, 104]</code> 内</li><li><code>1 &lt;= Node.val &lt;= 50</code></li><li><code>0 &lt;= val &lt;= 50</code></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">removeElements</span><span class="params">(ListNode head, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == head) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">dummy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(-<span class="number">1</span>,head);</span><br><span class="line">        <span class="type">ListNode</span>  <span class="variable">cur</span> <span class="operator">=</span> dummy;</span><br><span class="line">        <span class="keyword">while</span> (cur.next != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cur.next.val == val) &#123;</span><br><span class="line"></span><br><span class="line">                cur.next = cur.next.next;</span><br><span class="line">            &#125;<span class="keyword">else</span> cur = cur.next;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> dummy.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="24-两两交换链表中的节点"><a href="https://leetcode.cn/problems/swap-nodes-in-pairs/">24. 两两交换链表中的节点</a></h4><p><a href="https://leetcode.cn/problems/swap-nodes-in-pairs/#">思路</a></p><p>难度中等1733</p><p>给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。</p><p><strong>示例 1：</strong></p><p><img src="https://assets.leetcode.com/uploads/2020/10/03/swap_ex1.jpg" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：head = [1,2,3,4]</span><br><span class="line">输出：[2,1,4,3]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：head = []</span><br><span class="line">输出：[]</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：head = [1]</span><br><span class="line">输出：[1]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li>链表中节点的数目在范围 <code>[0, 100]</code> 内</li><li><code>0 &lt;= Node.val &lt;= 100</code></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">swapPairs</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">dummyHead</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>,head);</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> dummyHead;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">slow</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">fast</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">null</span> != cur.next &amp;&amp; <span class="literal">null</span> != cur.next.next) &#123;</span><br><span class="line">            slow = cur.next;</span><br><span class="line">            fast = slow.next;</span><br><span class="line">            slow.next = fast.next;</span><br><span class="line">            fast.next = slow;</span><br><span class="line">            cur.next = fast;</span><br><span class="line">            cur = cur.next.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dummyHead.next;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红蓝二分法，边界判定不用愁</title>
      <link href="/posts/28847.html"/>
      <url>/posts/28847.html</url>
      
        <content type="html"><![CDATA[<h1>📕📘红蓝二分法 解题</h1><p>​</p><h2 id="🔍红蓝二分法讲解：">🔍红蓝二分法讲解：</h2><p><strong>特此声明：本文模板非原创，核心内容均转自B站 五点七边 ，本人主要进行简要介绍，相应题目代码展示，持续更新中……</strong></p><p>关于红蓝二分法，五点七边以给出很不错的讲解：</p><p><a href="https://www.bilibili.com/video/BV1d54y1q7k7/?spm_id_from=333.999.0.0&amp;vd_source=a2cdc337163157715ec6605c77937a77">二分查找为什么总是写错？_哔哩哔哩_bilibili</a></p><p><code>leetcode</code> 大佬讲解红蓝二分法</p><p><a href="https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/solution/lan-hong-hua-fen-fa-dan-mo-ban-miao-sha-e7r40/">蓝红二分法单模板秒杀二分查找</a></p><h2 id="🌟二分的本质：">🌟二分的本质：</h2><p>​如果我们能够通过某种方式将一个区间<strong>划分成两个区间，左边区间满足某种特性；右边区间不满足某种特性</strong>。<br>​那么我们就能够通过二分法来寻找左区间的右边端点或者右区间的左边端点</p><p>​<strong>有单调性一定可以二分，但是二分不一定要有单调性</strong></p><p>​通常二分法的思路是通过二分<strong>不断缩小结果范围</strong>直到确认结果或者区间不存在</p><p>​而红蓝二分法则是<strong>逆向思路</strong>，通过<strong>不断扩大非结果区间的范围</strong>直到直到确认结果或者区间不存在</p><p>​</p><p>​通常二分法的思路对应的各种左闭右闭或者左闭右开往往面临繁琐的边界问题，虽然通过大量练习也能熟能生巧，但红蓝二分提供的简易思路可以摒弃复杂的边界问题，更加贴近二分的本质——<strong>循环不变量</strong></p><p>​大家写二分法经常写乱，主要是因为<strong>对区间的定义没有想清楚，区间的定义就是不变量</strong>。要在二分查找的过程中，保持不变量，就是在while寻找中每一次边界的处理都要坚持根据区间的定义来操作，这就是<strong>循环不变量</strong>规则。</p><p>红蓝二分模板：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">l = -<span class="number">1</span>, r = N;<span class="comment">//初始化，保证l和r不在搜索区间内部，保证循环不变量</span></span><br><span class="line"><span class="keyword">while</span> l + <span class="number">1</span> != <span class="type">r</span></span><br><span class="line">    <span class="variable">m</span> <span class="operator">=</span> l + (r - l) / <span class="number">2</span>           <span class="comment">//此处预防越界，只是和(l + r) / 2写法不同</span></span><br><span class="line">    <span class="keyword">if</span> <span class="title function_">isBlue</span><span class="params">(m)</span>  <span class="comment">// isBlue()是抽象出来的用来判断特性的方法</span></span><br><span class="line">        l = m</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        r = m</span><br><span class="line"><span class="keyword">return</span> l or r<span class="comment">//因题而异        </span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="❔二分题目总结">❔二分题目总结</h2><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202302282125488.png" alt="image-20230228210901759"></p><h3 id="完全有序">完全有序</h3><ul><li><em>梦开始的地方，基础的二分查找</em></li></ul><h4 id="⭐-704-二分查找">⭐ 704.<a href="https://leetcode.cn/problems/binary-search/">二分查找</a></h4><p><a href="https://leetcode.cn/problems/binary-search/">力扣题目链接(opens new window)</a></p><p>给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。</p><p>示例 1:</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">输入: nums = [-1,0,3,5,9,12], target = 9     </span><br><span class="line">输出: 4       </span><br><span class="line">解释: 9 出现在 nums 中并且下标为 4     </span><br></pre></td></tr></table></figure><p>1<br>2<br>3</p><p>示例 2:</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">输入: nums = [-1,0,3,5,9,12], target = 2     </span><br><span class="line">输出: -1        </span><br><span class="line">解释: 2 不存在 nums 中因此返回 -1        </span><br></pre></td></tr></table></figure><p>1<br>2<br>3</p><p>提示：</p><ul><li>你可以假设 nums 中的所有元素是不重复的。</li><li>n 将在 [1, 10000]之间。</li><li>nums 的每个元素都将在 [-9999, 9999]之间。</li></ul><p>红蓝二分法解法：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -<span class="number">1</span>, r = nums.length;</span><br><span class="line">        <span class="keyword">while</span>(l + <span class="number">1</span> != r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> l + (r - l) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[m] == target) <span class="keyword">return</span> m;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[m] &gt; target) r = m;</span><br><span class="line">            <span class="keyword">else</span> l = m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="35-搜索插入位置">35.<a href="https://leetcode.cn/problems/search-insert-position/">搜索插入位置</a></h4><ul><li><em>二分查找的变式，感受查找边界</em></li></ul><p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p><p>你可以假设数组中无重复元素。</p><p>示例 1:</p><ul><li>输入: [1,3,5,6], 5</li><li>输出: 2</li></ul><p>示例 2:</p><ul><li>输入: [1,3,5,6], 2</li><li>输出: 1</li></ul><p>示例 3:</p><ul><li>输入: [1,3,5,6], 7</li><li>输出: 4</li></ul><p>示例 4:</p><ul><li>输入: [1,3,5,6], 0</li><li>输出: 0</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">searchInsert</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -<span class="number">1</span>, r = nums.length;</span><br><span class="line">        <span class="keyword">while</span> (l + <span class="number">1</span> != r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> l + (r - l) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[m] &gt;= target) r = m;</span><br><span class="line">            <span class="keyword">else</span> l = m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="⭐34-在排序数组中查找元素的第一个和最后一个位置">⭐<a href="https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/">34. 在排序数组中查找元素的第一个和最后一个位置</a></h4><ul><li>二分查找边界的复合，进一步感受边界</li></ul><p>给你一个按照非递减顺序排列的整数数组 <code>nums</code>，和一个目标值 <code>target</code>。请你找出给定目标值在数组中的开始位置和结束位置。</p><p>如果数组中不存在目标值 <code>target</code>，返回 <code>[-1, -1]</code>。</p><p>你必须设计并实现时间复杂度为 <code>O(log n)</code> 的算法解决此问题。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [5,7,7,8,8,10], target = 8</span><br><span class="line">输出：[3,4]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [5,7,7,8,8,10], target = 6</span><br><span class="line">输出：[-1,-1]</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [], target = 0</span><br><span class="line">输出：[-1,-1]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>0 &lt;= nums.length &lt;= 105</code></li><li><code>-109 &lt;= nums[i] &lt;= 109</code></li><li><code>nums</code> 是一个非递减数组</li><li><code>-109 &lt;= target &lt;= 109</code></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] searchRange(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="type">int</span> result[] = &#123;getLeft(nums,target),getRight(nums,target)&#125;;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getLeft</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -<span class="number">1</span>, r = nums.length;</span><br><span class="line">        <span class="keyword">while</span> (l + <span class="number">1</span> != r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> l + ((r - l) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (nums[m] &gt;= target) r = m;</span><br><span class="line">            <span class="keyword">else</span> l = m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (r == nums.length || nums[r] != target  ) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getRight</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -<span class="number">1</span>, r = nums.length;</span><br><span class="line">        <span class="keyword">while</span> (l + <span class="number">1</span> != r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> l + ((r - l) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (nums[m] &lt;= target) l = m;</span><br><span class="line">            <span class="keyword">else</span> r = m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (l == -<span class="number">1</span> || nums[l] != target) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="不完全有序">不完全有序</h3><p>(旋转排序数组系列)</p><ul><li>局部有序，注意循环不变量</li></ul><h4 id="⭐153-寻找旋转排序数组中的最小值">⭐<a href="https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array/">153. 寻找旋转排序数组中的最小值</a></h4><p>已知一个长度为 <code>n</code> 的数组，预先按照升序排列，经由 <code>1</code> 到 <code>n</code> 次 <strong>旋转</strong> 后，得到输入数组。例如，原数组 <code>nums = [0,1,2,4,5,6,7]</code> 在变化后可能得到：</p><ul><li>若旋转 <code>4</code> 次，则可以得到 <code>[4,5,6,7,0,1,2]</code></li><li>若旋转 <code>7</code> 次，则可以得到 <code>[0,1,2,4,5,6,7]</code></li></ul><p>注意，数组 <code>[a[0], a[1], a[2], ..., a[n-1]]</code> <strong>旋转一次</strong> 的结果为数组 <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code> 。</p><p>给你一个元素值 <strong>互不相同</strong> 的数组 <code>nums</code> ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 <strong>最小元素</strong> 。</p><p>你必须设计一个时间复杂度为 <code>O(log n)</code> 的算法解决此问题。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [3,4,5,1,2]</span><br><span class="line">输出：1</span><br><span class="line">解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [4,5,6,7,0,1,2]</span><br><span class="line">输出：0</span><br><span class="line">解释：原数组为 [0,1,2,4,5,6,7] ，旋转 4 次得到输入数组。</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [11,13,15,17]</span><br><span class="line">输出：11</span><br><span class="line">解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>n == nums.length</code></li><li><code>1 &lt;= n &lt;= 5000</code></li><li><code>-5000 &lt;= nums[i] &lt;= 5000</code></li><li><code>nums</code> 中的所有整数 <strong>互不相同</strong></li><li><code>nums</code> 原来是一个升序排序的数组，并进行了 <code>1</code> 至 <code>n</code> 次旋转</li></ul><p>解法一</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findMin</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -<span class="number">1</span>, r = nums.length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> l + ((r - l) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(nums[m] &lt;= nums[r - <span class="number">1</span>]) &#123;</span><br><span class="line">            r = m;</span><br><span class="line">            <span class="keyword">while</span> (l + <span class="number">1</span> != r) &#123;</span><br><span class="line">                m = l + ((r - l) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (nums[m] &lt;= nums[r]) r = m;</span><br><span class="line">                <span class="keyword">else</span> l = m;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            l = m;</span><br><span class="line">            <span class="keyword">while</span> (l + <span class="number">1</span> != r) &#123;</span><br><span class="line">                m = l + ((r - l) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (nums[m] &gt;= nums[l]) l = m;</span><br><span class="line">                <span class="keyword">else</span> r = m;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[r];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解法二、</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findMin</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="type">int</span> l=-<span class="number">1</span>, r=n;</span><br><span class="line">        <span class="keyword">while</span> (l+<span class="number">1</span> != r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l+(r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">target</span> <span class="operator">=</span> r == n ? nums[n-<span class="number">1</span>] : nums[r];</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] &gt; target) &#123;</span><br><span class="line">                l = mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                r = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[r];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="⭐154-寻找旋转排序数组中的最小值-II"><a href="https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array-ii/">⭐154. 寻找旋转排序数组中的最小值 II</a></h4><p>已知一个长度为 <code>n</code> 的数组，预先按照升序排列，经由 <code>1</code> 到 <code>n</code> 次 <strong>旋转</strong> 后，得到输入数组。例如，原数组 <code>nums = [0,1,4,4,5,6,7]</code> 在变化后可能得到：</p><ul><li>若旋转 <code>4</code> 次，则可以得到 <code>[4,5,6,7,0,1,4]</code></li><li>若旋转 <code>7</code> 次，则可以得到 <code>[0,1,4,4,5,6,7]</code></li></ul><p>注意，数组 <code>[a[0], a[1], a[2], ..., a[n-1]]</code> <strong>旋转一次</strong> 的结果为数组 <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code> 。</p><p>给你一个可能存在 <strong>重复</strong> 元素值的数组 <code>nums</code> ，它原来是一个升序排列的数组，并按上述情形进行了多次旋转。请你找出并返回数组中的 <strong>最小元素</strong> 。</p><p>你必须尽可能减少整个过程的操作步骤。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [1,3,5]</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [2,2,2,0,1]</span><br><span class="line">输出：0</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>n == nums.length</code></li><li><code>1 &lt;= n &lt;= 5000</code></li><li><code>-5000 &lt;= nums[i] &lt;= 5000</code></li><li><code>nums</code> 原来是一个升序排序的数组，并进行了 <code>1</code> 至 <code>n</code> 次旋转</li></ul><p>**进阶：**这道题与 <a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/description/">寻找旋转排序数组中的最小值</a> 类似，但 <code>nums</code> 可能包含重复元素。允许重复会影响算法的时间复杂度吗？会如何影响，为什么？</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findMin</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> n-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (nums[r] == nums[<span class="number">0</span>] &amp;&amp; r &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            r--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">last</span> <span class="operator">=</span> nums[r];</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        ++r;</span><br><span class="line">        n = r;</span><br><span class="line">        <span class="keyword">while</span> (l+<span class="number">1</span> != r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l+(r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">target</span> <span class="operator">=</span> r == n ? last : nums[r];</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] &gt; target) &#123;</span><br><span class="line">                l = mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                r = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[r];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="⭐33-搜索旋转排序数组">⭐<a href="https://leetcode.cn/problems/search-in-rotated-sorted-array/">33. 搜索旋转排序数组</a></h4><p>整数数组 <code>nums</code> 按升序排列，数组中的值 <strong>互不相同</strong> 。</p><p>在传递给函数之前，<code>nums</code> 在预先未知的某个下标 <code>k</code>（<code>0 &lt;= k &lt; nums.length</code>）上进行了 <strong>旋转</strong>，使数组变为 <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>（下标 <strong>从 0 开始</strong> 计数）。例如， <code>[0,1,2,4,5,6,7]</code> 在下标 <code>3</code> 处经旋转后可能变为 <code>[4,5,6,7,0,1,2]</code> 。</p><p>给你 <strong>旋转后</strong> 的数组 <code>nums</code> 和一个整数 <code>target</code> ，如果 <code>nums</code> 中存在这个目标值 <code>target</code> ，则返回它的下标，否则返回 <code>-1</code> 。</p><p>你必须设计一个时间复杂度为 <code>O(log n)</code> 的算法解决此问题。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [4,5,6,7,0,1,2], target = 0</span><br><span class="line">输出：4</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [4,5,6,7,0,1,2], target = 3</span><br><span class="line">输出：-1</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [1], target = 0</span><br><span class="line">输出：-1</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 5000</code></li><li><code>-104 &lt;= nums[i] &lt;= 104</code></li><li><code>nums</code> 中的每个值都 <strong>独一无二</strong></li><li>题目数据保证 <code>nums</code> 在预先未知的某个下标上进行了旋转</li><li><code>-104 &lt;= target &lt;= 104</code></li></ul><h4 id="⭐81-搜索旋转排序数组-II">⭐<a href="https://leetcode.cn/problems/search-in-rotated-sorted-array-ii/">81. 搜索旋转排序数组 II</a></h4><p>已知存在一个按非降序排列的整数数组 <code>nums</code> ，数组中的值不必互不相同。</p><p>在传递给函数之前，<code>nums</code> 在预先未知的某个下标 <code>k</code>（<code>0 &lt;= k &lt; nums.length</code>）上进行了 <strong>旋转</strong> ，使数组变为 <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>（下标 <strong>从 0 开始</strong> 计数）。例如， <code>[0,1,2,4,4,4,5,6,6,7]</code> 在下标 <code>5</code> 处经旋转后可能变为 <code>[4,5,6,6,7,0,1,2,4,4]</code> 。</p><p>给你 <strong>旋转后</strong> 的数组 <code>nums</code> 和一个整数 <code>target</code> ，请你编写一个函数来判断给定的目标值是否存在于数组中。如果 <code>nums</code> 中存在这个目标值 <code>target</code> ，则返回 <code>true</code> ，否则返回 <code>false</code> 。</p><p>你必须尽可能减少整个操作步骤。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [2,5,6,0,0,1,2], target = 0</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [2,5,6,0,0,1,2], target = 3</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 5000</code></li><li><code>-104 &lt;= nums[i] &lt;= 104</code></li><li>题目数据保证 <code>nums</code> 在预先未知的某个下标上进行了旋转</li><li><code>-104 &lt;= target &lt;= 104</code></li></ul><p><strong>进阶：</strong></p><ul><li>这是 <a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/description/">搜索旋转排序数组</a> 的延伸题目，本题中的 <code>nums</code> 可能包含重复元素。</li><li>这会影响到程序的时间复杂度吗？会有怎样的影响，为什么</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> findMin(nums);</span><br><span class="line">        System.out.println(t);</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -<span class="number">1</span>, r = n;</span><br><span class="line">        <span class="keyword">if</span> (nums[t] &lt;= target &amp;&amp; target &lt;= nums[n - <span class="number">1</span>]) &#123;</span><br><span class="line">            l = t - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            r = t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (l + <span class="number">1</span> != r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> (r + l) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[m] == target) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[m] &gt; target) r = m;</span><br><span class="line">            <span class="keyword">else</span> l = m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findMin</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        n = nums.length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> n-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (nums[r] == nums[<span class="number">0</span>] &amp;&amp; r &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            r--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">last</span> <span class="operator">=</span> nums[r];</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        ++r;</span><br><span class="line">        n = r;</span><br><span class="line">        <span class="keyword">while</span> (l+<span class="number">1</span> != r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l+(r-l)/<span class="number">2</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">target</span> <span class="operator">=</span> r == n ? last : nums[r];</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] &gt; target) &#123;</span><br><span class="line">                l = mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                r = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="⭐162-寻找峰值">⭐<a href="https://leetcode.cn/problems/find-peak-element/">162. 寻找峰值</a></h4><p>峰值元素是指其值严格大于左右相邻值的元素。</p><p>给你一个整数数组 <code>nums</code>，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 <strong>任何一个峰值</strong> 所在位置即可。</p><p>你可以假设 <code>nums[-1] = nums[n] = -∞</code> 。</p><p>你必须实现时间复杂度为 <code>O(log n)</code> 的算法来解决此问题。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [1,2,3,1]</span><br><span class="line">输出：2</span><br><span class="line">解释：3 是峰值元素，你的函数应该返回其索引 2。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：nums = [1,2,1,3,5,6,4]</span><br><span class="line">输出：1 或 5 </span><br><span class="line">解释：你的函数可以返回索引 1，其峰值元素为 2；</span><br><span class="line">     或者返回索引 5， 其峰值元素为 6。</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 1000</code></li><li><code>-231 &lt;= nums[i] &lt;= 231 - 1</code></li><li>对于所有有效的 <code>i</code> 都有 <code>nums[i] != nums[i + 1]</code></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findPeakElement</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -<span class="number">1</span>, r = nums.length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (l + <span class="number">1</span> != r) &#123;</span><br><span class="line">           m = l + ((r - l) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">           <span class="keyword">if</span> (m &gt;= nums.length - <span class="number">1</span>) r = m;  </span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span> ( nums[m] &gt; nums[m+<span class="number">1</span>]) r = m;</span><br><span class="line">           <span class="keyword">else</span> l = m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二维数组">二维数组</h3><h4 id="⭐74-搜索二维矩阵">⭐<a href="https://leetcode.cn/problems/search-a-2d-matrix/">74. 搜索二维矩阵</a></h4><p>难度中等</p><p>编写一个高效的算法来判断 <code>m x n</code> 矩阵中，是否存在一个目标值。该矩阵具有如下特性：</p><ul><li>每行中的整数从左到右按升序排列。</li><li>每行的第一个整数大于前一行的最后一个整数。</li></ul><p><strong>示例 1：</strong></p><p><img src="%E7%BA%A2%E8%93%9D%E4%BA%8C%E5%88%86%E6%B3%95%E2%80%94%E2%80%94%E4%B8%80%E7%A7%8D%E4%BA%8C%E5%88%86%E6%B3%95%E7%9A%84%E9%80%9A%E7%94%A8%E6%A8%A1%E6%9D%BF.assets/mat.jpg" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><p><img src="%E7%BA%A2%E8%93%9D%E4%BA%8C%E5%88%86%E6%B3%95%E2%80%94%E2%80%94%E4%B8%80%E7%A7%8D%E4%BA%8C%E5%88%86%E6%B3%95%E7%9A%84%E9%80%9A%E7%94%A8%E6%A8%A1%E6%9D%BF.assets/mat2.jpg" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入：matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>m == matrix.length</code></li><li><code>n == matrix[i].length</code></li><li><code>1 &lt;= m, n &lt;= 100</code></li><li><code>-104 &lt;= matrix[i][j], target &lt;= 104</code></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">searchMatrix</span><span class="params">(<span class="type">int</span>[][] matrix, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -<span class="number">1</span>, r = matrix.length * matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">while</span> (l + <span class="number">1</span> != r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> l + ((r - l) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> get(matrix,m);</span><br><span class="line">            <span class="keyword">if</span> (value == target) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (value &gt; target) r = m;</span><br><span class="line">            <span class="keyword">else</span> l = m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">get</span><span class="params">(<span class="type">int</span>[][] matrix, <span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> matrix.length, n = matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> index / n, j = index % n;</span><br><span class="line">        <span class="keyword">return</span> matrix[i][j]; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="其他">其他</h3><h4 id="367-有效的完全平方数"><a href="https://leetcode.cn/problems/valid-perfect-square/">367. 有效的完全平方数</a></h4><p>给你一个正整数 num 。如果 num 是一个完全平方数，则返回 true ，否则返回 false 。</p><p>完全平方数 是一个可以写成某个整数的平方的整数。换句话说，它可以写成某个整数和自身的乘积。</p><p>不能使用任何内置的库函数，如  sqrt 。</p><p>示例 1：</p><p>输入：num = 16<br>输出：true<br>解释：返回 true ，因为 4 * 4 = 16 且 4 是一个整数。<br>示例 2：</p><p>输入：num = 14<br>输出：false<br>解释：返回 false ，因为 3.742 * 3.742 = 14 但 3.742 不是一个整数。</p><p>提示：</p><p>1 &lt;= num &lt;= 231 - 1</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//直接暴力用大数了</span></span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPerfectSquare</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">l</span> <span class="operator">=</span>BigInteger.valueOf(-<span class="number">1</span>);</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">r</span> <span class="operator">=</span>BigInteger.valueOf((num &gt;&gt; <span class="number">1</span>) + <span class="number">2</span>);</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">x</span> <span class="operator">=</span> BigInteger.valueOf(num);</span><br><span class="line">        BigInteger m;</span><br><span class="line">        <span class="keyword">while</span> (!l.add(BigInteger.ONE).equals(r)) &#123;</span><br><span class="line">            m = l.add(r).divide(BigInteger.TWO);</span><br><span class="line">            <span class="keyword">if</span> (m.multiply(m).equals(x)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (m.multiply(m).compareTo(x) == -<span class="number">1</span>) l = m;</span><br><span class="line">            <span class="keyword">else</span> r = m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="69-x-的平方根"><a href="https://leetcode.cn/problems/sqrtx/">69. x 的平方根 </a></h4><p>给你一个非负整数 x ，计算并返回 x 的 算术平方根 。</p><p>由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。</p><p>注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。</p><p>示例 1：</p><p>输入：x = 4<br>输出：2<br>示例 2：</p><p>输入：x = 8<br>输出：2<br>解释：8 的算术平方根是 2.82842…, 由于返回类型是整数，小数部分将被舍去。</p><p>提示：</p><p>0 &lt;= x &lt;= 231 - 1</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//暴力大数</span></span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">mySqrt</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">l</span> <span class="operator">=</span> BigInteger.valueOf(-<span class="number">1</span>);</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">r</span> <span class="operator">=</span> BigInteger.valueOf((x &gt;&gt; <span class="number">1</span>) + <span class="number">2</span>);</span><br><span class="line">        <span class="type">BigInteger</span> <span class="variable">num</span> <span class="operator">=</span> BigInteger.valueOf(x); </span><br><span class="line">        <span class="keyword">while</span> (!l.add(BigInteger.ONE).equals(r)) &#123;</span><br><span class="line">            <span class="type">BigInteger</span> <span class="variable">m</span> <span class="operator">=</span> l.add(r).divide(BigInteger.TWO);</span><br><span class="line">            <span class="keyword">if</span> (m.multiply(m).compareTo(num) == <span class="number">1</span>) r = m;</span><br><span class="line">            <span class="keyword">else</span> l = m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l.intValue(); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">mySqrt</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">2</span> || x == <span class="number">3</span> || x == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//上面两行均是为了防止 m == 0的情况，而后面为什么要用x/m&lt;m 而不是 m*m&gt;x则是为了防止越界错误</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> -<span class="number">1</span> , r = (x &gt;&gt; <span class="number">1</span>) + <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span> (l + <span class="number">1</span> != r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> l + ((r - l)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (x / m &lt; m) r = m;</span><br><span class="line">            <span class="keyword">else</span> l = m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计原则与思想</title>
      <link href="/posts/65361.html"/>
      <url>/posts/65361.html</url>
      
        <content type="html"><![CDATA[<h1>设计原则与思想: 面向对象</h1><h1>我们在讨论面向对象的时候,我们到底在谈论什么?</h1><h2 id="什么是面向对象编程和面向对象编程语言">什么是面向对象编程和面向对象编程语言?</h2><ul><li>面向对象编程是一种编程范式或编程风格, 它以类或对象作为组织代码的基本单元, 并将封装, 抽象, 继承, 多态四个特性,作为代码设计和实现的基石</li><li>面向对象编程语言是支持类或对象的语法机制, 并由现成的语法机制,能方便地实现面向对象编程四大特性(封装, 抽象, 继承, 多态)的编程语言</li></ul><h2 id="面向对象语言和面向对象编程语言之间地关系">面向对象语言和面向对象编程语言之间地关系</h2><ul><li><p>面向过程语言也可以实现面向对象编程</p></li><li><p>面向对象语言也会写出面向过程编程</p></li></ul><h2 id="如何判定一个编程语言是否面向对象编程语言">如何判定一个编程语言是否面向对象编程语言</h2><p>并没有严格地定义,面向对象语言要求宽泛,并不一定要求具有所有的四大特性, 只要某种编程语言支持类, 对象语法机制,那几本上就可以说这种编程语言是面向对象编程语言了</p><h2 id="什么是面向对象分析和面向对象设计">什么是面向对象分析和面向对象设计?</h2><p>OOA, OOD, OOP 软件开发流程</p><p>面向对象分析就是搞清楚做什么, 面向对象设计就是搞清楚怎么做,. 两个阶段地产出就是类的设计,包括程序被拆解为哪些类, 每个类有哪些属性方法,类与类之间如何交互等等</p><h1>封装, 抽象, 继承,多态可以解决哪些编程问题?]</h1><h2 id="封装特性">封装特性</h2><p>封装也叫信息隐藏或者数据访问保护. 类通过暴露有限的访问接口,授权外部仅能通过类提供的范式来访问内部信息或者数据.</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Wallet</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> String id;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">long</span> createTime;</span><br><span class="line">  <span class="keyword">private</span> BigDecimal balance;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">long</span> balanceLastModifiedTime;</span><br><span class="line">  <span class="comment">// ...省略其他属性...</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">Wallet</span><span class="params">()</span> &#123;</span><br><span class="line">     <span class="built_in">this</span>.id = IdGenerator.getInstance().generate();</span><br><span class="line">     <span class="built_in">this</span>.createTime = System.currentTimeMillis();</span><br><span class="line">     <span class="built_in">this</span>.balance = BigDecimal.ZERO;</span><br><span class="line">     <span class="built_in">this</span>.balanceLastModifiedTime = System.currentTimeMillis();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 注意：下面对get方法做了代码折叠，是为了减少代码所占文章的篇幅</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getId</span><span class="params">()</span> &#123; <span class="keyword">return</span> <span class="built_in">this</span>.id; &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getCreateTime</span><span class="params">()</span> &#123; <span class="keyword">return</span> <span class="built_in">this</span>.createTime; &#125;</span><br><span class="line">  <span class="keyword">public</span> BigDecimal <span class="title function_">getBalance</span><span class="params">()</span> &#123; <span class="keyword">return</span> <span class="built_in">this</span>.balance; &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getBalanceLastModifiedTime</span><span class="params">()</span> &#123; <span class="keyword">return</span> <span class="built_in">this</span>.balanceLastModifiedTime;  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">increaseBalance</span><span class="params">(BigDecimal increasedAmount)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (increasedAmount.compareTo(BigDecimal.ZERO) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InvalidAmountException</span>(<span class="string">&quot;...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.balance.add(increasedAmount);</span><br><span class="line">    <span class="built_in">this</span>.balanceLastModifiedTime = System.currentTimeMillis();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">decreaseBalance</span><span class="params">(BigDecimal decreasedAmount)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (decreasedAmount.compareTo(BigDecimal.ZERO) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InvalidAmountException</span>(<span class="string">&quot;...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (decreasedAmount.compareTo(<span class="built_in">this</span>.balance) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InsufficientAmountException</span>(<span class="string">&quot;...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.balance.subtract(decreasedAmount);</span><br><span class="line">    <span class="built_in">this</span>.balanceLastModifiedTime = System.currentTimeMillis();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它需要编程语言提供权限访问控制语法来支持, 例如Java中的public protected, public 关键字</p><p>封装:</p><ul><li>保护数据不被随意修改 ,提高代码的可维护性</li><li>仅暴露有限的必要接口,提高类的易用性(不需要调用者了解过多的细节) 冰箱的按钮多少,出错的概率</li></ul><h2 id="抽象特性">抽象特性</h2><p>抽象讲解如何隐藏方法的具体实现, 让使用者只需要关心方法提供了哪些功能, 不需要知道这些功能如何实现.</p><p>抽象通过接口类或者抽象类来实现, 但也不需要特殊的语法机制来支持,命名时也要有抽象思维,getAliyunPicture()    ---- &gt;    getPicture()</p><p>抽象存在的意义:</p><ul><li>提高代码的可扩展性,维护性,修改实现不需要改变定义,减少代码改动的范围</li><li>处理复杂系统的有效手段,能有效过滤不必关注的信息</li></ul><h2 id="继承特性">继承特性</h2><p>继承用来表示类之间的is-a关系,分为两种模式</p><ul><li>单继承</li><li>多继承</li></ul><p>为了实现继承这个特性,编程语言需要提供特殊的语法机制来支持</p><p>继承存在的意义:</p><ul><li>继承主要用来解决代码复用的问题(也可以用组合来实现),特定情况下用继承的is-关系非常符合人类的思维方式,从设计来说也有一种设计美感</li></ul><p>​过度使用继承时错误的,例如在阅读代码时过多层次会增加代码阅读负担, 同时继承的复用会导致子类和父类耦合过高,继承特性很受争议</p><h2 id="多态特性">多态特性</h2><p>三个语法机制实现多态</p><ul><li>语法要支持父类引用可以引用子类对象</li><li>语法要支持继承</li><li>语法要支持子类重写父类方法</li></ul><p>除了&quot;继承加方法重写&quot;还有接口类语法 ,  duck-typing语法(动态语言支持)</p><p>接口类语法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Iterator</span> &#123;</span><br><span class="line">  <span class="type">boolean</span> <span class="title function_">hasNext</span><span class="params">()</span>;</span><br><span class="line">  String <span class="title function_">next</span><span class="params">()</span>;</span><br><span class="line">  String <span class="title function_">remove</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Array</span> <span class="keyword">implements</span> <span class="title class_">Iterator</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> String[] data;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasNext</span><span class="params">()</span> &#123; ... &#125;</span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">next</span><span class="params">()</span> &#123; ... &#125;</span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">remove</span><span class="params">()</span> &#123; ... &#125;</span><br><span class="line">  <span class="comment">//...省略其他方法...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkedList</span> <span class="keyword">implements</span> <span class="title class_">Iterator</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> LinkedListNode head;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasNext</span><span class="params">()</span> &#123; ... &#125;</span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">next</span><span class="params">()</span> &#123; ... &#125;</span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">remove</span><span class="params">()</span> &#123; ... &#125;</span><br><span class="line">  <span class="comment">//...省略其他方法... </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(Iterator iterator)</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">      System.out.println(iterator.next());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Iterator</span> <span class="variable">arrayIterator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line">    print(arrayIterator);</span><br><span class="line">    </span><br><span class="line">    <span class="type">Iterator</span> <span class="variable">linkedListIterator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinkedList</span>();</span><br><span class="line">    print(linkedListIterator);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>duck-typing</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Logger</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">record</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(“I write a log into file.”)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DB</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">record</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(“I insert data into db. ”)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">recorder</span>):</span><br><span class="line">    recorder.record()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">demo</span>():</span><br><span class="line">    logger = Logger()</span><br><span class="line">    db = DB()</span><br><span class="line">    test(logger)</span><br><span class="line">    test(db)</span><br></pre></td></tr></table></figure><p>多态的意义:</p><ul><li>提高代码扩展性和复用性,很多设计模式, 设计原则, 编程技巧的代码实现基础</li></ul><h1>面向对象相比面向过程有哪些优势? 面向过程真的过时了吗?</h1><p>总有人拿面向对象语言写面向过程风格的代码</p><h2 id="什么是面向过程编程与面向过程编程语言">什么是面向过程编程与面向过程编程语言?</h2><p>面向对象定义</p><ul><li>面向对象过程编程是一种编程范式, 是以类和对象作为基本单元, 以封装, 抽象, 继承,多态为基石来设计和实现代码</li><li>面向对象编程语言是支持类和对象的语法机制,并有现成的语法机制, 能方便地实现面向对象编程地四大特性地编程语言</li></ul><p>面向过程定义</p><ul><li>面向过程编程也是一种编程范式,它以过程(方法, 函数, 操作)作为组织代码的基本单元, 以数据(成员变量, 属性)与方法相分离为最主要的特点.面向过程风格是一种流程化的编程风格,通过拼接一组顺序执行的方法来操作数据完成一项功能</li><li>面向过程编程语言,最大特点是不支持类和对象两个语法概念,不支持丰富的面向对象的编程特性,仅支持面向过程编程</li></ul><p>假设我们有一个记录了用户信息的文本文件users.txt,每行文本的格式是name&amp;age&amp;gender(比如，小王&amp;28&amp;男)。我们希望写一个程序，从users…txt文件中逐行读取用户信息，然后格式化成<br>name\tage\tgender(其中，\t是分隔符)这种文本格式，并且按照age从小到大排序之后，<br>重新写入到另一个文本文件formatted_.users…txt中,</p><p>用面向过程和面向对象两种编程风格，编写出来的代码有什么不同。</p><p>面向过程</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">User</span> &#123;</span></span><br><span class="line">  <span class="type">char</span> name[<span class="number">64</span>];</span><br><span class="line">  <span class="type">int</span> age;</span><br><span class="line">  <span class="type">char</span> gender[<span class="number">16</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> User <span class="title function_">parse_to_user</span><span class="params">(<span class="type">char</span>* text)</span> &#123;</span><br><span class="line">  <span class="comment">// 将text(“小王&amp;28&amp;男”)解析成结构体struct User</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* <span class="title function_">format_to_text</span><span class="params">(<span class="keyword">struct</span> User user)</span> &#123;</span><br><span class="line">  <span class="comment">// 将结构体struct User格式化成文本（&quot;小王\t28\t男&quot;）</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort_users_by_age</span><span class="params">(<span class="keyword">struct</span> User users[])</span> &#123;</span><br><span class="line">  <span class="comment">// 按照年龄从小到大排序users</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">format_user_file</span><span class="params">(<span class="type">char</span>* origin_file_path, <span class="type">char</span>* new_file_path)</span> &#123;</span><br><span class="line">  <span class="comment">// open files...</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">User</span> <span class="title">users</span>[1024];</span> <span class="comment">// 假设最大1024个用户</span></span><br><span class="line">  <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>) &#123; <span class="comment">// read until the file is empty</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">User</span> <span class="title">user</span> =</span> parse_to_user(line);</span><br><span class="line">    users[count++] = user;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  sort_users_by_age(users);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; ++i) &#123;</span><br><span class="line">    <span class="type">char</span>* formatted_user_text = format_to_text(users[i]);</span><br><span class="line">    <span class="comment">// write to new file...</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// close files...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">char</span>** args, <span class="type">int</span> argv)</span> &#123;</span><br><span class="line">  format_user_file(<span class="string">&quot;/home/zheng/user.txt&quot;</span>, <span class="string">&quot;/home/zheng/formatted_users.txt&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>面向对象</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">  <span class="keyword">private</span> String gender;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String name, <span class="type">int</span> age, String gender)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">    <span class="built_in">this</span>.gender = gender;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> User <span class="title function_">praseFrom</span><span class="params">(String userInfoText)</span> &#123;</span><br><span class="line">    <span class="comment">// 将text(“小王&amp;28&amp;男”)解析成类User</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">formatToText</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 将类User格式化成文本（&quot;小王\t28\t男&quot;）</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserFileFormatter</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">format</span><span class="params">(String userFile, String formattedUserFile)</span> &#123;</span><br><span class="line">    <span class="comment">// Open files...</span></span><br><span class="line">    <span class="type">List</span> <span class="variable">users</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123; <span class="comment">// read until file is empty </span></span><br><span class="line">      <span class="comment">// read from file into userText...</span></span><br><span class="line">      <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> User.parseFrom(userText);</span><br><span class="line">      users.add(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// sort users by age...</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; users.size(); ++i) &#123;</span><br><span class="line">      <span class="type">String</span> <span class="variable">formattedUserText</span> <span class="operator">=</span> user.formatToText();</span><br><span class="line">      <span class="comment">// write to new file...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// close files...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainApplication</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">UserFileFormatter</span> <span class="variable">userFileFormatter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserFileFormatter</span>();</span><br><span class="line">    userFileFormatter.format(<span class="string">&quot;/home/zheng/users.txt&quot;</span>, <span class="string">&quot;/home/zheng/formatted_users.txt&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="面向对象编程相比面向过程编程有哪些优势">面向对象编程相比面向过程编程有哪些优势</h2><ul><li><p>对于大规模程序的开发,程序的处理流程并非单一主线, 而是错综复杂的玩转结构.面向对象编程比起面向过程编程,更能应对这种复杂类型的程序开发</p></li><li><p>面向对象编程丰富的特性.利用这些特性编写出来的代码,更易扩展,易维护,易复用</p></li><li><p>编程语言和机器打交道的方式的演进规律中,我们可以总结出: 面向对象编程语言比面向过程编程语言,更加人性化,更加高级,更加智能</p></li></ul><h1>哪些代码设计看似是面向对象,实际是面向过程的?</h1><h2 id="滥用getter-setter方法">滥用<code>getter</code>,<code>setter</code>方法</h2><p>​违反封装特性,将面向对象编程风格退化为面向过程编程风格</p><p><strong>在设计类时尽量不要给属性定义setter方法, 除此之外,尽管getter方法相对于setter方法要安全,但是如果返回的是集合容器,也要防范集合内部数据被修改的危险</strong></p><h2 id="滥用全局变量-Constants-和全局方法-Utils">滥用全局变量(Constants)和全局方法(Utils)</h2><p>将数据和操作分离, 不是面向对象,但也有一定好处</p><h3 id="Utils改进策略"><code>Utils</code>改进策略</h3><p>​判定表标准:  在定义<code>Utils</code>类之前, 你要问一下自己,:</p><ul><li><p>**你真的需要单独定义这样一个<code>Utils</code>类吗? **</p></li><li><p><strong>是否可以把<code>Utils</code>类中地某些方法定义到其它类中呢?</strong></p></li></ul><p>​回答完这些问题,你还是觉得确实有必要去定义这样一个<code>Utils</code>类, 那么<strong>大胆地去定义它吧(不要为了面向对象, 随意抽象一个父类)</strong> ,因为在面向对象编程中, 我们也并不是完全排斥面向过程风格的代码.  只要能为我们写好代码,贡献力量,我们就可以适度地去使用</p><h3 id="Constants改进策略">Constants改进策略</h3><p>​当<code>Constants</code>类中包含很多常量定义的时候,依赖这个类的代码就会很多, 每次修改Constants类,都会导致依赖它的类文件重新编译,因此会浪费很多不必要的编译时间, 对于一个非常大的工程项目,编译一次救药花费几分钟,甚至几十分钟, 每次进行单元测试都会出发一次编译的过程,编译过程会影响我们的开发效率</p><p>改进<code>Constants</code>类 两种思路:</p><ul><li>将<code>Constants</code>拆分为功能更加单一的多个类</li><li>不单独设计<code>Constants</code>常量类,而是哪个类用到了某个常量,将常量定义到这个类中(让我想到了注解)</li></ul><p>​<strong><code>Constants</code>类, <code>Utils</code>类的设计问题</strong>, 对于这两种类的设计, 我们尽量能做到职责单一,定义一些细化到的类, 比如有<code>RedisConstatns</code>, <code>FileUtils</code>, 而不是定义一个大而全的<code>Constants</code>类, <code>Utils</code>类. 除此之外,如果能将这些类中的属性和方法, 划分归并到其他业务中,  那是最好不过的了, 能极大地提高类的内举行和代码地可复用性</p><h2 id="定义数据和方法分离的类">定义数据和方法分离的类</h2><pre><code>传统`MVC`结构分为`Model`层, `Controller`层, `View`层这三层</code></pre><p>​逻辑上分为 <code>Controller</code>层, <code>Service</code>层, <code>Repository</code>层</p><p>​数据上定义<code>VO</code>(View Object) <code>BO</code>(Business Object)  <code>Entity</code></p><p>这是典型的面向过程的编程风格</p><p>​这种开发模式叫做基于<code>贫血模型</code>的开发模型, 是我们现在非常常用的一种Web项目的开发模式.(日后会讲)</p><p>​面向对象编程比面向过程编程难一些,不经意就写成面向过程了</p><p>​我们在写一些微小程序时,或者一个数据处理相关的代码, 以算法为主, 数据为辅, 脚本是的面向过程编码风格就更加适合一些,而且面向过程本身就是面向对象的基础, 面向对象编程离不开基础的面向过程编程.</p><p>​不管使用面向对象还是面向过程哪种风格来写代码, 我们最终的目的还是写出易维护, 易读, 易复用, 易扩展的高质量代码. 只要能控制面向过程编程风格的一些弊端, 控制好它的副作用, 在掌握范围内为我们所用, 我们大可不避讳在面向对象编程中写面向过程风格的代码</p><p>优秀评论(笑死看不懂)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.用she实现自动化脚本做的服务编排，一般都是面向过程，一步一步的。而k8s的编排却是</span><br><span class="line">面向对象的，因为它为这个顺序流抽象出了很多角色，将原本一步一步的顺序操作转变成了多</span><br><span class="line">个角色间的轮转和交互。</span><br><span class="line">2.从接触ddd才走出javaer举面向对象旗，干面向过程勾当的局面。所谓为什么“充血模型”不流</span><br><span class="line">行，我认为不外呼两个。一，规范的领域模型对于底层基础架构来说并不友好（缺少stge</span><br><span class="line">t)，所以会导致规范的领域模型与现有基础架构不贴合，切很难开发出完全贴合的基础架</span><br><span class="line">构，进而引深出，合理的业务封装却阻碍关于复用通用抽象的矛盾。二，合理的业务封装，需</span><br><span class="line">要在战略上对业务先做合理的归类分割和抽象。而这个前置条件很少也不好达成。进而缺少前</span><br><span class="line">置设计封装出来的“充血模型”会有种四不像的味道，反而加剧了业务的复杂性，还不如“贫血</span><br><span class="line">模型”来得实用。事实上快节奏下，前置战略设计往往都是不足的，所以想构建优秀的“充血模</span><br><span class="line">型”架构，除了要对业务领域和领域设计有足够的认知，在重构手法和重构意愿上还要有一定</span><br><span class="line">讲究和追求，这样才能让项目以“充血模型”持续且良性的迭代。</span><br><span class="line">3.“充血模型”相对于“贫血模型”有什么好处？从我的经验来看，可读性其实可能“贫血模型”还好</span><br><span class="line">一点，这也可能有思维惯性的原因在里面。但从灵活和扩展性来说“充血模型”会优秀很多，因</span><br><span class="line">为好的“充血模型&quot;”往往意味着边界清晰（耦合低），功能内敛（高内聚）。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>接口vs抽象类的区别? 如何用普通的类模拟抽象类和接口?</h1><p>C++不支持抽象类, python不支持抽象类也不支持接口</p><h3 id="什么是抽象类和接口-区别在哪里">什么是抽象类和接口? 区别在哪里?</h3><p>典型的抽象类的使用场景(模板设计模式)</p><p>​<code>Logger</code>是一个记录日志的抽象类,<code>FileLogger</code>和<code>MessageQueueLogger</code>继承<code>Logger</code>, 分别实现两种不同的日志记录方式:  记录日志到文件中和记录日志到消息队列中.</p><p>​<code>FileLogger</code>和<code>MessageQueueLogger</code>两个子类服用了父类<code>Logger</code>中的<code>name</code>, <code>enabled</code>, <code>minPermittedLevel</code>属性和<code>log()</code>方法, 但因为这两个子类写日志的方式不同, 它们又各自重写了父类中的<code>doLog()</code>方法</p><p>抽象类:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 抽象类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Logger</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">boolean</span> enabled;</span><br><span class="line">  <span class="keyword">private</span> Level minPermittedLevel;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">Logger</span><span class="params">(String name, <span class="type">boolean</span> enabled, Level minPermittedLevel)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.enabled = enabled;</span><br><span class="line">    <span class="built_in">this</span>.minPermittedLevel = minPermittedLevel;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">log</span><span class="params">(Level level, String message)</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">loggable</span> <span class="operator">=</span> enabled &amp;&amp; (minPermittedLevel.intValue() &lt;= level.intValue());</span><br><span class="line">    <span class="keyword">if</span> (!loggable) <span class="keyword">return</span>;</span><br><span class="line">    doLog(level, message);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">doLog</span><span class="params">(Level level, String message)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 抽象类的子类：输出日志到文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileLogger</span> <span class="keyword">extends</span> <span class="title class_">Logger</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> Writer fileWriter;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">FileLogger</span><span class="params">(String name, <span class="type">boolean</span> enabled,</span></span><br><span class="line"><span class="params">    Level minPermittedLevel, String filepath)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(name, enabled, minPermittedLevel);</span><br><span class="line">    <span class="built_in">this</span>.fileWriter = <span class="keyword">new</span> <span class="title class_">FileWriter</span>(filepath); </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doLog</span><span class="params">(Level level, String mesage)</span> &#123;</span><br><span class="line">    <span class="comment">// 格式化level和message,输出到日志文件</span></span><br><span class="line">    fileWriter.write(...);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 抽象类的子类: 输出日志到消息中间件(比如kafka)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MessageQueueLogger</span> <span class="keyword">extends</span> <span class="title class_">Logger</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> MessageQueueClient msgQueueClient;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">MessageQueueLogger</span><span class="params">(String name, <span class="type">boolean</span> enabled,</span></span><br><span class="line"><span class="params">    Level minPermittedLevel, MessageQueueClient msgQueueClient)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(name, enabled, minPermittedLevel);</span><br><span class="line">    <span class="built_in">this</span>.msgQueueClient = msgQueueClient;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doLog</span><span class="params">(Level level, String mesage)</span> &#123;</span><br><span class="line">    <span class="comment">// 格式化level和message,输出到消息中间件</span></span><br><span class="line">    msgQueueClient.send(...);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义接口:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">  <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(RpcRequest req)</span> <span class="keyword">throws</span> RpcException;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接口实现类：鉴权过滤器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthencationFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(RpcRequest req)</span> <span class="keyword">throws</span> RpcException &#123;</span><br><span class="line">    <span class="comment">//...鉴权逻辑..</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接口实现类：限流过滤器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RateLimitFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(RpcRequest req)</span> <span class="keyword">throws</span> RpcException &#123;</span><br><span class="line">    <span class="comment">//...限流逻辑...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 过滤器使用Demo</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">  <span class="comment">// filters.add(new AuthencationFilter());</span></span><br><span class="line">  <span class="comment">// filters.add(new RateLimitFilter());</span></span><br><span class="line">  <span class="keyword">private</span> List&lt;Filter&gt; filters = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleRpcRequest</span><span class="params">(RpcRequest req)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">for</span> (Filter filter : filters) &#123;</span><br><span class="line">        filter.doFilter(req);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(RpcException e) &#123;</span><br><span class="line">      <span class="comment">// ...处理过滤结果...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...省略其他处理逻辑...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​抽象类实际就是类, 只不过是一种特殊的类,这种类不能被实例化对象, 只能被子类继承. 继承关系是一种<code>is-a</code>关系来说, 接口表示一种 <code>has-a</code>关系, 表示具有某些功能, 对于接口, 有一种更加抽象的叫法,那就是协议(contract).</p><h3 id="抽象类和接口能解决什么编程问题">抽象类和接口能解决什么编程问题?</h3><p>抽象类是为了代码复用而生的</p><p>但普通类也可以实现代码复用, 那么抽象类有什么独特作用吗?</p><p>抽象类是 <code>is-a</code></p><p>接口时 <code>has-a</code></p><p>我们还是拿之前那个打印日志的例子来讲解。我们先对上面的代码做下改造。在改造之后的代<br>码中，<code>Logger</code>不再是抽象类，只是一个普通的父类，删除了<code>Logger</code>中<code>log()</code>、<code>doLog()</code>方法，<br>新增了<code>isLoggablet()</code>方法。<code>FileLogger</code>和<code>MessageQueueLogger</code>还是继承<code>Logger</code>父类，以达<br>到代码复用的目的。具体的代码如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 父类：非抽象类，就是普通的类. 删除了log(),doLog()，新增了isLoggable().</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Logger</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> <span class="type">boolean</span> enabled;</span><br><span class="line">  <span class="keyword">private</span> Level minPermittedLevel;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">Logger</span><span class="params">(String name, <span class="type">boolean</span> enabled, Level minPermittedLevel)</span> &#123;</span><br><span class="line">    <span class="comment">//...构造函数不变，代码省略...</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">isLoggable</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">loggable</span> <span class="operator">=</span> enabled &amp;&amp; (minPermittedLevel.intValue() &lt;= level.intValue());</span><br><span class="line">    <span class="keyword">return</span> loggable;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 子类：输出日志到文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileLogger</span> <span class="keyword">extends</span> <span class="title class_">Logger</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> Writer fileWriter;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">FileLogger</span><span class="params">(String name, <span class="type">boolean</span> enabled,</span></span><br><span class="line"><span class="params">    Level minPermittedLevel, String filepath)</span> &#123;</span><br><span class="line">    <span class="comment">//...构造函数不变，代码省略...</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">log</span><span class="params">(Level level, String mesage)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!isLoggable()) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 格式化level和message,输出到日志文件</span></span><br><span class="line">    fileWriter.write(...);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 子类: 输出日志到消息中间件(比如kafka)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MessageQueueLogger</span> <span class="keyword">extends</span> <span class="title class_">Logger</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> MessageQueueClient msgQueueClient;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">MessageQueueLogger</span><span class="params">(String name, <span class="type">boolean</span> enabled,</span></span><br><span class="line"><span class="params">    Level minPermittedLevel, MessageQueueClient msgQueueClient)</span> &#123;</span><br><span class="line">    <span class="comment">//...构造函数不变，代码省略...</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">log</span><span class="params">(Level level, String mesage)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!isLoggable()) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 格式化level和message,输出到消息中间件</span></span><br><span class="line">    msgQueueClient.send(...);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个设计思路虽然达到了代码复用的目的，但是无法使用多态特性了。像下面这样编写代码，<br>就会出现编译错误，因为<code>Logger</code>中并没有定义<code>log()</code>方法。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileLogger</span>(<span class="string">&quot;access-log&quot;</span>, <span class="literal">true</span>, Level.WARN, <span class="string">&quot;/users/wangzheng/access.log&quot;</span>);</span><br><span class="line">logger.log(Level.ERROR, <span class="string">&quot;This is a test log message.&quot;</span>);</span><br></pre></td></tr></table></figure><p>你可能会说，这个问题解决起来很简单啊。我们在Logger父类中，定义一个空的<code>Iog()</code>方法，<br>让子类重写父类的<code>1og ()</code>方法，实现自己的记录日志的逻辑，不就可以了吗？</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Logger</span> &#123;</span><br><span class="line">  <span class="comment">// ...省略部分代码...</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">log</span><span class="params">(Level level, String mesage)</span> &#123; <span class="comment">// do nothing... &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileLogger</span> <span class="keyword">extends</span> <span class="title class_">Logger</span> &#123;</span><br><span class="line">  <span class="comment">// ...省略部分代码...</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">log</span><span class="params">(Level level, String mesage)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!isLoggable()) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 格式化level和message,输出到日志文件</span></span><br><span class="line">    fileWriter.write(...);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MessageQueueLogger</span> <span class="keyword">extends</span> <span class="title class_">Logger</span> &#123;</span><br><span class="line">  <span class="comment">// ...省略部分代码...</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">log</span><span class="params">(Level level, String mesage)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!isLoggable()) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 格式化level和message,输出到消息中间件</span></span><br><span class="line">    msgQueueClient.send(...);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但它显然没有之前抽象类的实现思路优雅</p><ul><li>Logger中定义一个空的方法,可读性差</li><li>当创建一个新的子类继承Logger父类的时候, 我们又可能会忘记重新实现log()方法,之前的抽象类会强制子类重写<code>log()</code>方法</li><li>Logger可以被实例化,增加类被误用的风险</li></ul><p>其他语言即使不支持接口特性, 也可以模拟接口</p><h1>为什么基于接口而非实现编程? 有必要为每个类都定义接口吗?</h1>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式之美 </tag>
            
            <tag> 计算机基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式之美导学</title>
      <link href="/posts/1358.html"/>
      <url>/posts/1358.html</url>
      
        <content type="html"><![CDATA[<h1>为什么要学习设计模式?</h1><p><em>越早学习设计模式越好,有些东西早点知道,才能在日后一直发挥作用</em></p><p>在计算机基础中</p><ul><li><p>数据结构和算法研究如何高效实现</p></li><li><p>设计模式研究如何保证代码的可维护性</p></li></ul><p>总结</p><ul><li>应对面试中的设计模式相关问题</li><li>告别被别人吐槽的烂代码(talk is cheap, show me your code)</li><li>提高复杂代码的设计和开发能力</li><li>让读源码,学框架事半功倍</li><li>为职场发展做铺垫</li></ul><p>​</p><p>在日常开发中用过哪些设计模式?</p><p>使用代理模式进行共性话处理,比如AOP思想,将非业务功能和业务功能解耦</p><ul><li>事务的处理 @Translation</li><li>系统间上下文的传递ThreadLocal+ restTemplate#intercept等等</li></ul><p>使用工厂 + 策略</p><ul><li>不同优惠种类的计算</li><li>定制化功能的解耦</li></ul><p>观察者模式 : 这个模式的思想在很多中间件(mq, zookeeper, netty等等)可以看到银子</p><ul><li>通过领域事件解耦业务</li><li>理解eventloop, epoll等等</li><li>通过watch实现动态配置, HA等等</li></ul><p>职责链模式: pipeline思想</p><ul><li>filter</li><li>理解netty中的各种handler</li></ul><h1>从哪些维度评价代码质量的好坏?如何具备写高质量代码的能力?</h1><h2 id="如何评价代码质量的高低">如何评价代码质量的高低?</h2><p>代码质量高低的指标是从不同维度进行评价且具有很大的主观性</p><p>且指标之间并不独立,维度可能重合</p><p>而且评价很难量化,并非非黑即白</p><p>最常用的评价标准</p><ul><li><strong>可维护性</strong></li><li><strong>可读性</strong></li><li><strong>可扩展性</strong></li><li>灵活性</li><li>简介性</li><li>可复用性</li><li>可测试性</li></ul><h2 id="可维护性">可维护性</h2><p>维护代码事件远远大于编码时间</p><p>维护无外乎 修改bug, 修改老代码, 添加新代码</p><p>易维护是指在不破坏原有代码设计, 不引入新的bug的情况下, 能快速地修改或者添加代码</p><p>可维护性由人而定, 很主观</p><h2 id="可读性">可读性</h2><p><em>Google 内部甚至专门有个认证就叫作 Readability。只有拿到这个认证的工程师，才有资格在 code review 的时候，批准别人提交代码。</em></p><p>可见代码的可读性有多重要，毕竟，代码被阅读的次数远远超过被编写和执行的次数。</p><p>查看代码是否符合编码规范, 命名是否达意, 注释是否详尽, 函数是否长短合适, 模块划分是否清晰, 是否符合高内聚低耦合等等</p><p>code review是一个很好的测验代码可读性地手段. 如果同事可以轻松地读懂你写的代码,那说明你的代码可读性很好</p><h2 id="可扩展性">可扩展性</h2><p>代码是否易于扩展</p><p>代码预留一些功能扩展点,不会因为添加一个功能,改动大量的原始代码</p><p>“对修改关闭, 对扩展开放”</p><h2 id="灵活性">灵活性</h2><p>很抽象,不好下定义</p><p>举例场景可以被称为 代码写的灵活</p><ul><li>添加新的功能时, 原有代码已经预留好了扩展点, 不需要修改原代码,只需要在扩展点添加新的代码即可(扩展性)</li><li>实现一个功能,发现原有代码中,已经抽象出很多底层可复用的模块(可复用性)</li><li>使用某组接口时,这组接口可以应对各种使用场景,满足不同的的需求.(易用)</li></ul><h2 id="简洁性">简洁性</h2><p>KISS原则 “Keep it Simple , Stupid”</p><p>编程经验不足的程序员喜欢在项目中引入一些复杂的设计模式,认为这样才能体现出技术水平</p><p>真正的高手能云淡风轻的用最简单的方式解决最复杂的问题</p><h2 id="可复用性">可复用性</h2><p>尽量减少重复代码的编写,复用已有的代码</p><p>Don’t Reapeat your self</p><h2 id="可测试性">可测试性</h2><p>代码可测试性差,比较难写单元测试,那基本说明代码设计有问题</p><h2 id="如何写出高质量的代码">如何写出高质量的代码?</h2><p>如何写出易维护,易读, 易扩展,灵活, 简洁, 可复用, 可测试的代码?</p><p>需要掌握一些更加细化,更加能落地的编程方法论</p><p>面向对象的设计思想, 设计原则, 设计模式, 编码规范, 重构技巧</p><h1>面向对象,设计原则, 设计模式,编程规范, 重构,这五者之间的关系?</h1><p><strong>极客时间 设计模式之美 大纲,学习框架</strong></p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202309160909847.png" alt="image-20230916090931099"></p><h2 id="面向对象">面向对象</h2><p>主流编程范式(面向过程, 面向对象, 函数式)中的主流.</p><p>面向对象具有丰富的特性(继承,封装.多态,抽象),可以实现很多复杂的设计思路,是很多设计原则,设计模式编码实现的基础</p><p>接下来需要掌握</p><ul><li>面向对象的四大特性 : 封装, 抽象, 继承, 多态</li><li>面向对象编程与面向过程编程的区别和联系</li><li>面向对象分析, 面向对象设计, 面向对象编程</li><li>接口类和抽象类的区别以及各自的应用场景</li><li>基于接口而非实现的编程设计思想</li><li>多用组合少用继承的设计思想</li><li>面向过程的贫血模式和面向对象的充血模型</li></ul><h2 id="设计原则">设计原则</h2><p>设计原则这里比较抽象,不能单纯的记忆,需要掌握其设计初衷,解决哪些编程问题,有那些应用场景</p><ul><li>SOLD原则-SRP 单一职责原则</li><li>SOLD原则-OCP 开闭原则</li><li>SOLD原则-LSP 里式替换原则</li><li>SOLD原则-ISP接口隔离原则</li><li>SOLD原则-DIP依赖倒置原则</li><li>DRY原则, KISS原则, YAGNI原则, LOD法则</li></ul><h2 id="设计模式">设计模式</h2><p>设计模式相较设计原则没那么抽象,难点在原了解他们都能解决哪些问题, 掌握典型的应用场景, 冰冻的不过度应用</p><p>23种经典设计模式,随着语言的严谨,一些设计模式(Singleton)随之过时,甚至成了反模式,一些内置在编程语言中(比如Iterator), 另外还有一些新模式的诞生(Monostate)</p><p>学习设计模式要有侧重点,对常用的设计模式,我们要多花时间理解掌握,对于不常用的只需要稍微了解即可</p><h3 id="创建型-5">创建型(5)</h3><p><strong>常用</strong>: <strong>单例, 工厂模式(工厂方法和抽象工厂), 建造者模式</strong></p><p>不常用: 原型模式</p><h3 id="结构型-7">结构型(7)</h3><p>常用: 代理模式, 桥接模式, 装饰器模式, 适配器模式</p><p>不常用: 门面模式, 组合模式, 享元模式</p><h3 id="行为型-11">行为型(11)</h3><p>常用: 观察者模式, 模板模式, 策略模式, 职责链模式,迭代器模式, 状态模式</p><p>不常用: 访问者模式, 备忘录模式, 命令模式, 解释器模式, 中介模式</p><h2 id="编码规范">编码规范</h2><p>主要解决的是代码可读性问题,相对设计原则, 设计模式, 更加具体,更加片中代码细节</p><p>是最起码要掌握的</p><p>比如 : 给变量,类,函数命名, 如何写代码注释, 函数不宜过长, 参数不能过多</p><p>已经有很多经典书籍了,没时间,看20条也够用</p><p>编码规范没有单独作为一个模块来讲解,而是放到重构中,重构分为大重构和小重构,小重构利用的知识点基本上就是编码规范</p><h2 id="代码重构">代码重构</h2><p>软件开发中,只要软件在不停的迭代,就没有一劳永逸的设计,随着需求的变化, 代码的不断堆砌,原有设计必然存在这样那样的问题,针对这些问题,我们需要进行代码重构,重构是软件开发中重要的一环, 持续重构是保证代码质量不下降的有效手段,能避免代码孵化到无可救药的地步</p><p>我们前面讲的面向对象, 设计原则, 设计模式 一个重要的应用场景就是在代码重构的时候, 虽然设计模式可以提高代码的可扩展性,但过度不恰当地使用,也会增加代码地复杂度, 影响代码地可读性, <strong>开发初期特别必须, 我们不要过度设计</strong>,应用复杂地设计模式.而是当代码出现问题时,在针对问题进行重构,避免前期地过度设计</p><ul><li>重构地目的(why), 对象(what), 时机(when), 方法(how) ;</li><li>保证重构不出错地技术手段, :  单元测试和代码的可测试性</li><li>两种不同规模的重构: 大重构(大规模高层次) 和 小重构(小规模低层次)</li></ul><h3 id="五者间的联系">五者间的联系</h3><ul><li><p>面向对象丰富的特性(继承, 封装, 多态, 抽象)可以实现很多复杂的设计思路, 是很多设计原则, 设计模式等编码实现的基础</p></li><li><p>设计原则是指导我们代码设计的一些经验总结, 对于某些场景下,是否应该应用某种设计模式,具有指导意义. 比如, &quot;开闭原则&quot;是很多设计模式(策略, 模板等)的指导原则</p></li><li><p>设计模式是针对软件开发中经常遇到的设计问题,总结出来的一套解决方案或者设计思想, 主要目的是提高代码的可扩展性. 设计原则比设计模式更抽象, 设计模式更加具体,更加可执行</p></li><li><p>编程方式主要解决的是代码的可读性问题. 它相较于设计原则, 设计模式,更加具体,更加偏重代码细节,更加能落地. 持续的小重构依赖的理论基础主要是编程规范</p></li><li><p>重构作为保持代码质量不下降的有效手段,利用的激素hi面向对象, 设计原则,设计模式,编码规范这些理论</p></li></ul><p>锐评</p><p><em>再好的理论,应用不到实际中也是白费,对于提升代码质量,最有效的是编码规范,其次才是设计原则,再次是代码重构, 最后才是面向对象和设计模式</em></p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机基础 </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git使用指南</title>
      <link href="/posts/undefined.html"/>
      <url>/posts/undefined.html</url>
      
        <content type="html"><![CDATA[<h1>Git使用</h1><p><strong>Git是目前世界上最先进的分布式版本控制系统。</strong></p><p><strong>工作原理 / 流程</strong></p><p><img src="https://pic2.zhimg.com/80/v2-3bc9d5f2c49a713c776e69676d7d56c5_1440w.webp" alt="git流程图"></p><h2 id="Git下载与安装">Git下载与安装</h2><p>具体安装教程已有详细博客，不多说，上链接</p><p>[Git下载与安装_pingcode的博客-CSDN博客_git](<a href="https://blog.csdn.net/qq_41521682/article/details/122764915#:~:text=%E7%AC%AC%E4%B8%80%E6%AD%A5">https://blog.csdn.net/qq_41521682/article/details/122764915#:~:text=第一步</a> 下载git (找到自己需要的版本) 第二步 下载 完点击 安装 包进入使用许可声明界面,这里我是选择装在D盘，大家如果嫌麻烦就默认 安装 在C盘 第四步 点击Next进入选择 安装 组件界面 上图红框内的选项是默认勾选的，建议不要动。)</p><h2 id="Git初始配置">Git初始配置</h2><p>​</p><p>​安装完成后，需要对软件进行配置，右键点Git Bash Here, 输入以下指令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>​解释一下，用户名和邮箱起标识作用，git命令行和Linux指令很相似，<code>--</code>后面加完整名称的单词做参数，<code>-</code>后面则是单词简写</p><h3 id="扩展-git配置的优先级">扩展 git配置的优先级</h3><p>​<code>-- global</code> 是指git配置的位置，位置所管辖的范围约小，配置生效的优先级越高，优先级越高的配置会覆盖掉优先级较低的配置，优先生效<img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202301311730216.png" alt="image-20230131170032912"></p><p>​git的配置基于配置文件，有如下四个配置范围</p><p><img src="https://img.panyanbin.com/img/2021/06/30/1624986904-3edb6dce65621f97c0e649eee007e1e5.png" alt="image-20230131164336991"></p><p>​常用的有三个（<code>local</code>、<code>global</code>、<code>system</code>），worktree基本不使用所以不多说。</p><ul><li><strong>system系统级</strong></li></ul><p>​系统级配置文件含有系统里每位用户及他们所拥有的仓库的配置值。其位置为git的安装目录下的<code>/etc/gitconfig</code>，即如果git的安装目录为<code>D:\Git</code>，则配置文件地址为<code>D:\Git\etc\gitconfig</code>。</p><p><strong>优先度最低，其配置值可被全局级配置和本地级配置的值覆盖</strong>。一般我们很少会使用系统级的配置。</p><ul><li><strong>global全局级</strong></li></ul><p>​全局级配置文件包含当前系统用户的拥有的仓库配置值，每个系统用户的全局级配置相互隔离。全局级别的配置默认保存在当前系统用户的主目录下的 .gitconfig 文件内。Windows通常保存在<code>C:\Users\xxxx\.gitconfig</code>，Linux为<code>/home/xxx/.gitconfig</code>。</p><p><strong>优先度比系统级高，可覆盖系统级的配置值</strong>。全局级的配置平时使用得比较多，比如设置账号和邮箱：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name panyanbin</span><br><span class="line">git config --global user.email me@panyanbin.com</span><br></pre></td></tr></table></figure><ul><li><strong>local本地级</strong></li></ul><p>​本地级别的配置保存在当前仓库下面的 <code>.git\config</code> 文件内，通常 .git 文件夹是隐藏的，Window要在文件管理器的文件夹选项中打开显示隐藏文件夹才可以看到。这里的配置仅对当前仓库有效，不影响其他的仓库。</p><p><strong>优先级别最高，如果全局级别或系统级别的配置里出现了同一配置项，则以本地级别配置内容为准</strong></p><p>​了解这些后，你就可以进行不同优先级和生效范围的配置了</p><h2 id="Git-创建版本库">Git 创建版本库</h2><p>​<code>版本库（repository）</code>,你可以理解为一个目录，它存储了所有你在不同时间上对<code>工作目录</code>中文件的更改，也就是某个时间点上你所提交的<code>工作目录</code>中文件的状态，这个文件状态我们称之为<code>版本</code> ， 以便你能任意在多个版本间跳转（初学者看会有点抽象）</p><p>​创建一个仓库很简单，只要先创建一个目录，这个目录就是你的<code>工作目录</code>（也称<code>工作区</code>），然后在目录中 Git Bash Here,输入指令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202301311722914.png" alt="image-20230131172231949"></p><p>此时，目录中会生成一个<code>.git</code>文件夹，这个就是<code>版本库</code>，不要随意乱动，以免损坏</p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202301311724121.png" alt="image-20230131172436286"></p><p>​git记录版本是通过提交（<code>commit</code>）实现的，但并不是每次对文件修改就直接提交这些修改，因为提交后版本就无法删除的永远存在于版本库中了（除非你删掉仓库或者损坏.git文件），git在对文件从修改到提交的过程中增加了一个叫<code>暂存区</code>的概念，为提交的提供了容错的空间</p><p>​<img src="https://www.runoob.com/wp-content/uploads/2015/02/1352126739_7909.jpg" alt=""></p><p>​我们来理解下 Git 工作区、暂存区和版本库概念</p><ul><li>**工作区：**就是你在电脑里能看到的目录。</li><li>**暂存区：**英文叫 stage 或 index。一般存放在 <strong>.git</strong> 目录下的 index 文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。</li><li>**版本库：**工作区有一个隐藏目录 <strong>.git</strong>，这个不算工作区，而是 Git 的版本库</li></ul><p>​提交一个版本，需要首先在<code>工作区</code>中对文件进行修改，然后再添加到<code>暂存区</code>，最后提交到<code>版本库</code>,初学者理解这个流程，方便记忆指令（其实用多了自然也就记住了）</p><p>​下面我们按照这个流程呢来学习git的常用指令</p><h2 id="Git基本操作指令">Git基本操作指令</h2><ul><li>将工作目录的修改提交到暂存区（index）</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//添加一个或多个文件到暂存区（index）</span><br><span class="line"></span><br><span class="line">git add [file1] [file2] .....</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 添加所有文件到暂存区</span><br><span class="line"></span><br><span class="line">git add .</span><br></pre></td></tr></table></figure><ul><li>查看暂存区情况</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日常工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis</title>
      <link href="/posts/27274.html"/>
      <url>/posts/27274.html</url>
      
        <content type="html"><![CDATA[<h1>Redis</h1><h1>Redis基础篇</h1><h2 id="redis快速入门">redis快速入门</h2><h3 id="认识NoSQL">认识NoSQL</h3><h4 id="NoSQL类型">NoSQL类型</h4><ul><li><p>键值对型 (Redis)</p></li><li><p>文档型 (MongoDB)</p></li><li><p>图类型 (HBase)</p></li><li><p>列类型 (Neo4j)</p></li></ul><h4 id="SQL-VS-NoSQL">SQL   VS   NoSQL</h4><p>#1  结构化(Structured)     非结构化</p><p>#2  关联的(Relational)      非关系</p><p>#3 SQL查询                        非SQL (命令,函数, Restful)</p><p>#4 ACID                              Base</p><p>#5 磁盘                               内存</p><p>#6 垂直扩展                       水平扩展</p><p>​</p><table><thead><tr><th>SQL</th><th>NoSQL</th></tr></thead><tbody><tr><td>数据结构固定</td><td>数据结构不固定</td></tr><tr><td>对数据一致性, 安全性要求较高</td><td>对数据一致性,安全性要求不高,对性能要求高</td></tr></tbody></table><h3 id="认识Redis">认识Redis</h3><p><strong>Redis</strong> (Remote Dictionary Server)  远程词典服务器  2009年诞生</p><p>特征</p><ul><li><p>键值型, value支持不同类型</p></li><li><p>单线程, 每个命令具备原子性(Redis 6.0 网络请求改为多线程, 核心命令仍是单线程)</p></li><li><p>低延迟, 速度快(基于内存, 基于IO多路复用, 良好的编码( C语言 ))</p></li><li><p>支持数据持久化</p></li><li><p>支持主从集群,  分片集群</p></li><li><p>多语言客户端</p></li></ul><h2 id="redis数据结构">redis数据结构</h2><p><img src="redis.assets/image-20231203202716520.png" alt="image-20231203202716520"></p><ul><li>KEYS (生产环境不建议使用)</li><li>DEL</li><li>EXISTS</li><li>EXPIRE</li><li>TTL</li></ul><h3 id="String">String</h3><p>value是字符串, 不过根据字符串格式不同可以分为三类</p><ul><li>string</li><li>int</li><li>float</li></ul><p>字符串类型最大空间不能超过512m</p><h4 id="String常见命令">String常见命令</h4><ul><li><p>SET key value</p></li><li><p>GET key</p></li><li><p>MSET key value [key value …]</p></li><li><p>MGET key [key …]</p></li><li><p>INCR key</p></li><li><p>INCRBY key integer</p></li><li><p>INCRBYFLOAT key float</p></li><li><p>SETNX key value (等价于 set key value nx)</p></li><li><p>SETEX key seconds value (等价于 set key value         expire key seconds)</p></li></ul><h3 id="Key的层次结构">Key的层次结构</h3><p>Redis中没有表的概念, 如何区分不同类型的key? (用户id是1, 商品id是1)</p><p>比如</p><p>项目名:业务名:类型:id</p><p>user相关的key : zs:user:1</p><p>product相关的key : zs:product:1</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>加密安全</title>
      <link href="/posts/26365.html"/>
      <url>/posts/26365.html</url>
      
        <content type="html"><![CDATA[<h1>加密安全</h1><h2 id="Base64编码"><code>Base64</code>编码</h2><p>将<strong>二进制字节</strong>转化为<strong>文本格式</strong></p><p>将任意二进制字节数据转化为只包含 <code>A</code>~<code>Z</code>   <code>a</code>~<code>z</code>  <code>0</code>~<code>9</code>  <code>+</code>  <code>/</code>  <code>=</code> 这64个字符</p><p>原理是将3个字节的二进制数据按照<code>6bit</code>一组, 用<code>4个int整数</code>表示, 然后将int整数用索引对应到字符, 得到编码后的字符串</p><p>3个byte数据分别是<code>e4</code>、<code>b8</code>、<code>ad</code>，按<code>6bit</code>分组得到<code>39</code>、<code>0b</code>、<code>22</code>和<code>2d</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌───────────────┬───────────────┬───────────────┐</span><br><span class="line">│      e4       │      b8       │      ad       │</span><br><span class="line">└───────────────┴───────────────┴───────────────┘</span><br><span class="line">┌─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┐</span><br><span class="line">│1│1│1│0│0│1│0│0│1│0│1│1│1│0│0│0│1│0│1│0│1│1│0│1│</span><br><span class="line">└─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┘</span><br><span class="line">┌───────────┬───────────┬───────────┬───────────┐</span><br><span class="line">│    39     │    0b     │    22     │    2d     │</span><br><span class="line">└───────────┴───────────┴───────────┴───────────┘</span><br></pre></td></tr></table></figure><p>字符<code>A</code><sub>`Z`对应索引`0`</sub><code>25</code>，字符<code>a</code><sub>`z`对应索引`26`</sub><code>51</code>，字符<code>0</code><sub>`9`对应索引`52`</sub><code>61</code>，最后两个索引<code>62</code>、<code>63</code>分别用字符<code>+</code>和<code>/</code>表示。</p><p>如果字节数不是3的倍数, 用 <code>=</code> 或者 <code>==</code> 补到三的倍数</p><p>例如  :</p><p>16个字节  补成 18个字节</p><p>最后会生成 24个字符(18 / 3 * 4)</p><h2 id="哈希算法-Digest">哈希算法(Digest)</h2><p>常用的哈希算法有：</p><table><thead><tr><th style="text-align:left">算法</th><th style="text-align:left">输出长度（位）</th><th style="text-align:left">输出长度（字节）</th></tr></thead><tbody><tr><td style="text-align:left"><code>MD5</code></td><td style="text-align:left">128 bits</td><td style="text-align:left">16 bytes</td></tr><tr><td style="text-align:left"><code>SHA-1</code></td><td style="text-align:left">160 bits</td><td style="text-align:left">20 bytes</td></tr><tr><td style="text-align:left"><code>RipeMD-160</code></td><td style="text-align:left">160 bits</td><td style="text-align:left">20 bytes</td></tr><tr><td style="text-align:left"><code>SHA-256</code></td><td style="text-align:left">256 bits</td><td style="text-align:left">32 bytes</td></tr><tr><td style="text-align:left"><code>SHA-512</code></td><td style="text-align:left">512 bits</td><td style="text-align:left">64 bytes</td></tr></tbody></table><p>用哈希存储口令时要考虑彩虹表攻击, 通常通过加盐来加大破解难度(即便有彩虹表(数据量为m)和salt(数据量为n) 复杂度也会是O(m * n))</p><p>非安全专业不要尝试自己写哈希算法库, 直接用开源得到公众认可的库</p><h2 id="消息认证算法-MAC">消息认证算法(MAC)</h2><p><code>Hmac</code>算法就是一种基于密钥的消息认证码算法</p><p><code>Hmac</code>算法总是和某种哈希算法配合起来用的, 本质上就是把key混入摘要的算法。验证此哈希时，除了原始的输入数据，还要提供key</p><p>这里的key可以理解为盐</p><p>可以配合<code>MD5</code>、<code>SHA-1</code>等哈希算法，计算的摘要长度和原摘要算法长度相同。</p><h2 id="对称加密算法">对称加密算法</h2><p>在软件开发中，常用的对称加密算法有：</p><table><thead><tr><th style="text-align:left">算法</th><th style="text-align:left">密钥长度</th><th style="text-align:left">工作模式</th><th style="text-align:left">填充模式</th></tr></thead><tbody><tr><td style="text-align:left"><code>DES</code></td><td style="text-align:left">56/64</td><td style="text-align:left"><code>ECB/CBC/PCBC/CTR/...</code></td><td style="text-align:left"><code>NoPadding/PKCS5Padding/...</code></td></tr><tr><td style="text-align:left"><code>AES</code></td><td style="text-align:left">128/192/256</td><td style="text-align:left"><code>ECB/CBC/PCBC/CTR/...</code></td><td style="text-align:left"><code>NoPadding/PKCS5Padding/PKCS7Padding/...</code></td></tr><tr><td style="text-align:left"><code>IDEA</code></td><td style="text-align:left">128</td><td style="text-align:left"><code>ECB</code></td><td style="text-align:left"><code>PKCS5Padding/PKCS7Padding/...</code></td></tr></tbody></table><p><a href="https://blog.csdn.net/bandaoyu/article/details/105552003">【加密】DES加密算法中，ECB和CBC模式有什么区别？_ecb cbc-CSDN博客</a></p><p>对称加密算法决定了口令必须是固定长度，然后对明文进行分块加密。又因为安全需求，口令长度往往都是128位以上，即至少16个字符</p><p>DES算法由于密钥过短，可以在短时间内被暴力破解，所以现在已经不安全了。</p><p><code>ECB</code>模式是最简单的<code>AES</code>加密模式，它只需要一个固定长度的密钥，固定的明文会生成固定的密文，这种一对一的加密方式会导致安全性降低</p><p>更好的方式是通过<code>CBC</code>模式，它需要一个随机数作为IV参数，这样对于同一份明文，每次生成的密文都不同</p><h2 id="口令加密算法">口令加密算法</h2><p><code>PBE</code>就是<code>Password Based Encryption</code>, 作用就是把用户输入的口令和一个安全随机的口令采用杂凑后计算出真正的密钥</p><p><code>PBE算法</code>并没有真正构建新的加密/解密算法，而是对我们已经知道的对称加密算法（如DES算法）做了包装。使用PBE算法对数据做加密/解密操作的时候，其实是使用了<code>DES</code>或者是<code>AES</code>等其它对称加密算法做了相应的操作。</p><h2 id="密钥交换算法">密钥交换算法</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java API</title>
      <link href="/posts/13799.html"/>
      <url>/posts/13799.html</url>
      
        <content type="html"><![CDATA[<h1>Java API</h1><h2 id="Stream流">Stream流</h2><h3 id="流收集合">流收集合</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//流转化为集合</span></span><br><span class="line">Stream&lt;String&gt; stream = Stream.of(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>);</span><br><span class="line">stream.collect(Collectors.toList())</span><br><span class="line">stream.collect(Collectors.toSet())</span><br><span class="line">stream.collect(Collectors.toCollection(ArraysList::<span class="keyword">new</span>))</span><br><span class="line"><span class="comment">//流转化为数组</span></span><br><span class="line">stream.toArray()</span><br><span class="line">stream.toArray(<span class="type">int</span>[]::<span class="keyword">new</span>)</span><br><span class="line"><span class="comment">//聚合计算</span></span><br><span class="line">stream.collect(Collectors.maxBy())</span><br><span class="line">stream.collect(Collectors.minBy())</span><br><span class="line">stream.collect(Collectors.counting())</span><br><span class="line">stream.collect(Collectors.summingInt())</span><br><span class="line">stream.collect(Collectors.averagingInt())</span><br><span class="line"><span class="comment">//分组  分组函数  值收集器默认为List</span></span><br><span class="line">stream.collect(Collectors.groupingBy())</span><br><span class="line"><span class="comment">//分区</span></span><br><span class="line">stream.collcet(Collectors.partitionBy())</span><br><span class="line"><span class="comment">//拼接</span></span><br><span class="line">stream.collect(Collectors.joining())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>解放双手，每日强国</title>
      <link href="/posts/40882.html"/>
      <url>/posts/40882.html</url>
      
        <content type="html"><![CDATA[<h1>解放双手，每日强国</h1><p>​学习强国是好事,但有些学校功利性的算各种学分,大多数人以这种动机的学习显然更像是一种负担,其实如果大家有余力还是推荐自己学习</p><p>​<em>本教程全程傻瓜式操作，适用于未使用过油猴和GitHub的小白，脚本内容搬运自：<a href="https://github.com/Xu22Web/tech-study-js/issues%EF%BC%88%E4%BB%A3%E7%A0%81%E6%88%91%E4%BC%9A%E8%B4%B4%E5%9C%A8%E6%96%87%E7%AB%A0%E6%9C%AB%E5%B0%BE%EF%BC%8C%E5%86%8D%E6%AC%A1%E5%BC%BA%E8%B0%83%E6%88%91%E5%8F%AA%E6%98%AF%E6%90%AC%E8%BF%90%E5%B7%A5%EF%BC%8C%E5%A6%82%E6%9C%89%E4%BE%B5%E6%9D%83%E4%BC%9A%E7%AB%8B%E5%8D%B3%E5%88%A0%E9%99%A4%EF%BC%89">https://github.com/Xu22Web/tech-study-js/issues（代码我会贴在文章末尾，再次强调我只是搬运工，如有侵权会立即删除）</a></em></p><p>​一年前的博客了,现在学习强国也做了很多&quot;改进&quot;,亲测目前只有<strong>自动刷视频和文章是无风险支持</strong>(***warning !!!***自动刷题会被警告,警告到一定次数会被封禁7~30天)</p><h2 id="一、安装油猴">一、安装油猴</h2><p>​<em>已经安装过的可以跳过这里</em></p><ol><li>打开你的edge浏览器，点击扩展</li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131226862.jpg" alt="img"></p><ol start="2"><li>点击获取下图选项获取扩展</li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131227984.jpg" alt="img"></p><ol start="3"><li>搜索框输入“tempermonkey”，搜索该扩展并获取</li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131227875.jpg" alt="img"></p><ol start="4"><li>之后会有弹窗，点“添加扩展”</li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131227120.jpg" alt="img"></p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131227430.jpg" alt="img"></p><ol start="5"><li>把目光聚焦到浏览器的右上方</li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131227455.jpg" alt="img"></p><ol start="6"><li>这时候可能还看不到安装上的Tempermonkey(之后步骤简称油猴)，因为添加扩展后，默认设置是不可视的</li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131227521.jpg" alt="img"></p><ol start="7"><li>按下图顺序点击，便可设置为工具栏可见了</li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131227990.jpg" alt="img"></p><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131227805.jpg" alt="img"></p><h2 id="二、添加脚本">二、添加脚本</h2><ol start="8"><li>按下图操作，会进入一个新的界面</li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131227043.jpg" alt="img"></p><ol start="9"><li>新的界面如下</li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131227747.png" alt="img"></p><ol start="10"><li>底下这些内容是可以编辑的，首先把原本的内容删掉</li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131227861.png" alt="img"></p><ol start="11"><li>然后把从<a href="https://github.com/Xu22Web/tech-study-js/issues">https://github.com/Xu22Web/tech-study-js/issues</a> (文章末尾的代码)Ctrl+A(全选)，然后Ctrl+C（复制），最后Ctrl+V（粘贴）到这里</li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131227559.png" alt="img"></p><ol start="12"><li>Ctrl+S（保存），脚本就新建成功了，启用它</li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202207131301723.png" alt="img"></p><h2 id="三、脚本使用">三、脚本使用</h2><ol start="13"><li><p>进入学习强国网页版，<a href="https://www.xuexi.cn/">学习强国 (xuexi.cn)</a>，然后扫码用户登录（这里就不截图演示了）</p></li><li><p>右上角的浮窗点，开始学习，之后什么都不用不做，慢慢等待完成即可；以后每天只需要重复最后两步，就可以懒人式斩获25分了</p></li></ol><p><img src="https://ohtoai-images.oss-cn-beijing.aliyuncs.com/imgs/OhtoAi_Blog/202309042118286.png" alt="image-20230904211513385"></p><p>代码如下:</p><p>代码比较长,复制时可能会卡一下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name   不学习何以强国</span></span><br><span class="line"><span class="comment">// @namespace   http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version   1.7.0</span></span><br><span class="line"><span class="comment">// @description   有趣的 `学习强国` 油猴插件。读文章,看视频，做习题。问题反馈： https://github.com/Xu22Web/tech-study-js/issues 。</span></span><br><span class="line"><span class="comment">// @author   原作者：techxuexi 荷包蛋。现作者：Xu22Web</span></span><br><span class="line"><span class="comment">// @match   https://www.xuexi.cn/*</span></span><br><span class="line"><span class="comment">// @match   https://pc.xuexi.cn/points/exam-practice.html</span></span><br><span class="line"><span class="comment">// @match   https://pc.xuexi.cn/points/exam-weekly-detail.html?id=*</span></span><br><span class="line"><span class="comment">// @match   https://pc.xuexi.cn/points/exam-paper-detail.html?id=*</span></span><br><span class="line"><span class="comment">// @match   https://login.xuexi.cn/login/xuexiWeb?appid=dingoankubyrfkttorhpou&amp;goto=https%3A%2F%2Foa.xuexi.cn&amp;type=1&amp;state=ffdea2ded23f45ab%2FKQreTlDFe1Id3B7BVdaaYcTMp6lsTBB%2Fs3gGevuMKfvpbABDEl9ymG3bbOgtpSN&amp;check_login=https%3A%2F%2Fpc-api.xuexi.cn</span></span><br><span class="line"><span class="comment">// @require   https://cdn.jsdelivr.net/npm/blueimp-md5@2.9.0</span></span><br><span class="line"><span class="comment">// @run-at   document-start</span></span><br><span class="line"><span class="comment">// @grant   GM_addStyle</span></span><br><span class="line"><span class="comment">// @grant   GM_setValue</span></span><br><span class="line"><span class="comment">// @grant   GM_getValue</span></span><br><span class="line"><span class="comment">// @grant   GM_openInTab</span></span><br><span class="line"><span class="comment">// @grant   unsafeWindow</span></span><br><span class="line"><span class="comment">// @updateURL   https://raw.githubusercontent.com/Xu22Web/tech-study-js/master/tech-study.js</span></span><br><span class="line"><span class="comment">// @downloadURL   https://raw.githubusercontent.com/Xu22Web/tech-study-js/master/tech-study.js</span></span><br><span class="line"><span class="comment">// @supportURL   https://github.com/Xu22Web</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"><span class="keyword">const</span> css = <span class="string">&#x27;* &#123;  -webkit-tap-highlight-color: transparent;&#125;:root &#123;  --themeColor: #fa3333;  --scale: 1;  font-size: calc(10px * var(--scale));&#125;@media (min-height: 678px) and (max-height: 768px) &#123;  :root &#123;    --scale: 0.8;  &#125;&#125;@media (max-height: 667px) &#123;  :root &#123;    --scale: 0.75;  &#125;&#125;@keyframes fade &#123;  from &#123;    opacity: 0.8;  &#125;  to &#123;    opacity: 0.4;    background: #ccc;  &#125;&#125;.egg_icon &#123;  width: 1em;  height: 1em;  fill: currentColor;&#125;.egg_hr_wrap &#123;  position: relative;  display: flex;  justify-content: center;  color: #ccc;&#125;.egg_hr_wrap .egg_hr &#123;  position: absolute;  top: 50%;  transform: translateY(-50%);  background: currentColor;  height: 0.1rem;  width: 30%;&#125;.egg_hr_wrap .egg_hr:nth-of-type(1) &#123;  left: 0;&#125;.egg_hr_wrap .egg_hr:nth-last-of-type(1) &#123;  right: 0;&#125;.egg_hr_title &#123;  font-size: 1.2rem;&#125;.egg_exam_btn &#123;  transition: background-color 80ms;  outline: none;  border: none;  padding: 1.2rem 2rem;  border-radius: 1.2rem;  cursor: pointer;  font-size: 1.8rem;  font-weight: bold;  text-align: center;  color: #ffffff;  background: #666777;&#125;.egg_exam_btn.manual &#123;  background: #e3484b;&#125;.egg_panel_wrap * &#123;  padding: 0;  margin: 0;  box-sizing: border-box;  outline: none;  border: none;&#125;.egg_panel_wrap &#123;  position: fixed;  left: 0;  top: 0;  z-index: 99999;  width: 100%;  height: 100%;  color: #333;  font-size: 1.6rem;  pointer-events: none;&#125;.egg_panel &#123;  position: absolute;  top: 5rem;  left: 1rem;  padding: 1.2rem 2rem;  border-radius: 1rem;  background: #ffffffe6;  backdrop-filter: blur(1rem);  box-shadow: 0 0 0.1rem 0.1rem #f1f1f1;  transition: 80ms ease-out;  pointer-events: all;&#125;.egg_panel.hide &#123;  left: 0;  transform: translateX(-100%);&#125;.egg_panel_wrap.mobile .egg_panel &#123;  top: 1rem;&#125;@media (min-height: 678px) and (max-height: 768px) &#123;  .egg_panel &#123;    top: 2rem;  &#125;&#125;@media (max-height: 667px) &#123;  .egg_panel &#123;    top: 1rem;  &#125;&#125;.egg_panel button &#123;  outline: none;  border: none;  padding: 0;  cursor: pointer;  background: none;&#125;.egg_panel .egg_btns_wrap &#123;  position: absolute;  left: 100%;  top: 50%;  transform: translate(-50%, -50%);  transition: 80ms ease;  z-index: 9;&#125;.egg_panel.hide .egg_btns_wrap &#123;  left: 100%;  transform: translate(0, -50%);&#125;.egg_panel .egg_btns_wrap button &#123;  border-radius: 50%;  width: 3rem;  height: 3rem;  padding: 0;  overflow: hidden;  border: 0.2rem solid currentColor;  color: white;  display: grid;  place-items: center;  font-size: 1.8rem;&#125;.egg_panel.hide .egg_panel_show_btn &#123;  background: var(--themeColor);&#125;.egg_panel .egg_panel_show_btn &#123;  background: #ccc;&#125;.egg_panel .egg_frame_show_btn &#123;  background: var(--themeColor);  margin-bottom: 1rem;&#125;.egg_panel .egg_frame_show_btn.hide &#123;  display: none;&#125;.egg_panel .egg_settings_show_btn &#123;  background: #ccc;  margin-top: 1rem;&#125;.egg_panel .egg_settings_show_btn.active &#123;  background: var(--themeColor);&#125;.egg_panel .egg_settings_reset_btn &#123;  background: #ccc;  margin-top: 1rem;&#125;.egg_panel .egg_settings_reset_btn:active &#123;  background: var(--themeColor);&#125;.egg_login_item &#123;  display: flex;  justify-content: center;  align-items: center;  flex-direction: column;  padding: 0.5rem 0;&#125;.egg_login_item .egg_login_btn &#123;  font-size: 1.4rem;  border-radius: 1rem;  transition: 80ms ease;  color: white;  background: var(--themeColor);  padding: 0.8rem 2.4rem;&#125;.egg_login_item .egg_login_btn:active &#123;  opacity: 0.8;&#125;.egg_login_item .egg_login_img_wrap &#123;  height: 0;  border-radius: 1rem;  transition: height 80ms ease;  overflow: hidden;&#125;.egg_login_item .egg_login_img_wrap.active &#123;  padding: 0.8rem;  margin-top: 0.8rem;  height: auto;  background: white;&#125;.egg_login_img_wrap .egg_login_img &#123;  width: 15rem;  height: 15rem;&#125;.egg_info_item .egg_login_btn &#123;  font-size: 1.4rem;  border-radius: 1rem;  transition: 80ms ease;  color: white;&#125;.egg_info_item .egg_login_btn:active &#123;  opacity: 0.8;&#125;.egg_info_item .egg_login_btn &#123;  background: #ccc;  padding: 0.4rem 0.8rem;&#125;.egg_info_item &#123;  display: flex;  justify-content: space-between;  align-items: center;&#125;.egg_info_item .egg_userinfo &#123;  display: flex;  justify-content: center;  align-items: center;  padding: 0.5rem 0;&#125;.egg_userinfo .egg_avatar .egg_avatar_nick,.egg_userinfo .egg_avatar .egg_avatar_img &#123;  height: 5rem;  width: 5rem;  border-radius: 50%;  background: var(--themeColor);  display: flex;  justify-content: center;  align-items: center;  text-overflow: ellipsis;  overflow: hidden;  white-space: nowrap;  font-size: 2rem;  color: white;&#125;.egg_userinfo .egg_nick &#123;  padding-left: 0.5rem;  text-overflow: ellipsis;  overflow: hidden;  white-space: nowrap;  max-width: 10rem;&#125;.egg_score_item .egg_scoreinfo &#123;  display: flex;  justify-content: space-between;  align-items: center;  padding: 0.5rem 0;&#125;.egg_scoreinfo .egg_totalscore,.egg_scoreinfo .egg_todayscore &#123;  font-size: 1.2rem;  user-select: none;&#125;.egg_scoreinfo .egg_totalscore span,.egg_scoreinfo .egg_todayscore .egg_todayscore_btn span &#123;  padding-left: 0.2rem;&#125;.egg_scoreinfo .egg_totalscore span,.egg_todayscore .egg_todayscore_btn span,.egg_todayscore .egg_score_details span &#123;  color: var(--themeColor);  font-weight: bold;&#125;.egg_scoreinfo .egg_todayscore &#123;  position: relative;&#125;.egg_todayscore .egg_todayscore_btn &#123;  display: flex;  align-items: center;&#125;.egg_todayscore_btn .egg_icon &#123;  opacity: 0.3;&#125;.egg_todayscore .egg_score_details &#123;  position: absolute;  left: calc(100% + 1rem);  top: 0;  background: #fffffff2;  border-radius: 0.5rem;  opacity: 1;  width: 10rem;  box-shadow: 0 0 0.1rem 0.1rem #f1f1f1;  transition: 80ms ease;  z-index: 9;&#125;.egg_todayscore .egg_score_details.hide &#123;  visibility: hidden;  opacity: 0;  left: 100%;&#125;.egg_score_details .egg_score_title &#123;  border-bottom: 0.1rem solid #eee;  padding: 0.5rem 0.8rem;  display: flex;  align-items: center;&#125;.egg_score_details .egg_score_title .egg_icon &#123;  font-size: 1.4rem;&#125;.egg_score_details .egg_score_title .egg_score_title_text &#123;  font-weight: bold;  padding-left: 0.2rem;&#125;.egg_score_details .egg_score_item &#123;  display: flex;  align-items: center;  justify-content: space-between;  padding: 0.5rem 0.8rem;&#125;.egg_task_list &#123;  position: relative;&#125;.egg_task_item &#123;  user-select: none;  min-height: 3rem;  min-width: 18rem;  display: flex;  align-items: center;  justify-content: space-between;  padding: 0.5rem 0;&#125;.egg_task_item .egg_label_wrap &#123;  flex-grow: 1;  padding-right: 0.5rem;&#125;.egg_label_wrap .egg_task_title_wrap &#123;  display: flex;  justify-content: space-between;  align-items: center;&#125;.egg_task_title_wrap .egg_task_progress_wrap &#123;  display: flex;  align-items: center;  font-size: 1.4rem;  width: 3.5rem;&#125;.egg_task_progress_wrap .egg_task_current &#123;  color: var(--themeColor);&#125;.egg_task_progress_wrap .egg_task_max &#123;  color: #999;  font-size: 1.2rem;&#125;.egg_label_wrap .egg_progress &#123;  display: flex;  justify-content: space-between;  align-items: center;  padding-top: 0.8rem;&#125;.egg_progress .egg_track &#123;  background: #ccc;  height: 0.5rem;  border-radius: 1rem;  flex: 1 1 auto;  overflow: hidden;&#125;.egg_progress .egg_track .egg_bar &#123;  height: 0.5rem;  background: var(--themeColor);  border-radius: 1rem;  width: 0;  transition: width 0.5s;&#125;.egg_setting_item &#123;  min-height: 3rem;  min-width: 18rem;  display: flex;  align-items: center;  justify-content: space-between;  box-sizing: border-box;&#125;.egg_setting_item .egg_label_wrap &#123;  flex-grow: 1;&#125;.egg_detail &#123;  background: #ccc;  color: white;  border-radius: 10rem;  font-size: 1.2rem;  width: 1.6rem;  height: 1.6rem;  margin-left: 0.4rem;  display: inline-block;  text-align: center;  line-height: 1.6rem;  cursor: pointer;&#125;.egg_switch &#123;  cursor: pointer;  margin: 0;  outline: 0;  appearance: none;  -webkit-appearance: none;  -moz-appearance: none;  position: relative;  width: 4.2rem;  height: 2.2rem;  background: #ccc;  border-radius: 5rem;  transition: background 0.3s;  --border-padding: 0.5rem;  box-shadow: -0.1rem 0 0.1rem -0.1rem #999 inset,    0.1rem 0 0.1rem -0.1rem #999 inset;&#125;.egg_switch::after &#123;  content: \&#x27;\&#x27;;  display: inline-block;  width: 1.4rem;  height: 1.4rem;  border-radius: 50%;  background: #fff;  box-shadow: 0 0 0.2rem #999;  transition: left 0.4s;  position: absolute;  top: calc(50% - (1.4rem / 2));  position: absolute;  left: var(--border-padding);&#125;.egg_switch:checked &#123;  background: var(--themeColor);&#125;.egg_switch:disabled &#123;  opacity: 0.5;  background: #ccc;&#125;.egg_switch:checked::after &#123;  left: calc(100% - var(--border-padding) - 1.4rem);&#125;.egg_tip_list &#123;  font-size: 1.2rem;  max-width: 18rem;  line-height: 2rem;  color: var(--themeColor);&#125;.egg_tip_list .egg_tip_btn &#123;  padding: 0.2rem 0.4rem;  background: #f1f1f1;  color: #333;&#125;.egg_tip_list .egg_tip_btn:disabled &#123;  opacity: 0.5;  background: #ccc;&#125;.egg_study_item &#123;  display: flex;  justify-content: center;  padding-top: 0.5rem;&#125;.egg_study_item .egg_study_btn &#123;  background: var(--themeColor);  padding: 0.8rem 2.4rem;  font-size: 1.4rem;  border-radius: 1rem;  color: white;  transition: 80ms ease;&#125;.egg_study_item .egg_study_btn:not(.loading):active &#123;  opacity: 0.8;&#125;.egg_study_item .egg_study_btn.loading &#123;  animation: fade 2s ease infinite alternate;&#125;.egg_study_item .egg_study_btn:disabled &#123;  background: #ccc;&#125;.egg_tip_wrap &#123;  position: fixed;  left: 0;  top: 0;  z-index: 999999;  width: 100%;  height: 100%;  pointer-events: none;&#125;.egg_tip_wrap * &#123;  padding: 0;  margin: 0;  box-sizing: border-box;  outline: none;  border: none;&#125;.egg_tip_wrap .egg_tip &#123;  position: absolute;  bottom: 2rem;  left: 2rem;  padding: 1.2rem 1.4rem;  border: none;  border-radius: 1rem;  background: var(--themeColor);  color: white;  font-size: 1.4rem;  transition: 200ms ease;  opacity: 0;  transform: scale(0.9) translateY(1rem);&#125;.egg_tip_wrap .egg_tip.active &#123;  opacity: 1;  transform: scale(1) translateY(0);&#125;.egg_tip_wrap .egg_tip.active.delay &#123;  opacity: 0.5;&#125;.egg_tip_wrap .egg_tip .egg_countdown &#123;  display: inline-block;  color: var(--themeColor);  background: white;  border-radius: 0.5rem;  padding: 0.2rem 0.4rem;  font-weight: bold;  margin-left: 0.4rem;  font-size: 1.2rem;&#125;.egg_frame_wrap &#123;  position: fixed;  left: 0;  top: 0;  z-index: 999;  width: 100%;  height: 100%;  visibility: visible;&#125;.egg_frame_wrap * &#123;  padding: 0;  margin: 0;  box-sizing: border-box;  outline: none;  border: none;&#125;.egg_frame_wrap.hide &#123;  visibility: hidden;&#125;.egg_frame_wrap.hide .egg_frame_mask,.egg_frame_wrap.hide .egg_frame_content_wrap &#123;  opacity: 0;&#125;.egg_frame_wrap.hide .egg_frame_content_wrap &#123;  transform: scale(0);&#125;.egg_frame_mask &#123;  background: #00000030;  width: 100%;  height: 100%;  opacity: 1;  transition: 200ms ease;&#125;.egg_frame_content_wrap &#123;  position: absolute;  width: 80%;  height: 80%;  top: 10%;  left: 10%;  display: flex;  flex-direction: column;  transition: 200ms ease;  border-radius: 1rem;  background: #ffffffe6;  backdrop-filter: blur(1rem);  overflow: hidden;  transform: scale(1);&#125;.egg_frame_content_wrap.max &#123;  top: 0;  left: 0;  width: 100%;  height: 100%;  border-radius: 0;&#125;.egg_frame_content_wrap .egg_frame_controls_wrap &#123;  width: 100%;  display: flex;  justify-content: space-between;  align-items: center;  box-sizing: border-box;&#125;.egg_frame_controls_wrap .egg_frame_title &#123;  padding: 1rem 2rem;  font-size: 1.6rem;&#125;.egg_frame_controls .egg_frame_btn &#123;  outline: none;  border: none;  background: none;  padding: 1rem 2rem;  transition: 80ms ease;  cursor: pointer;  color: #333;  font-size: 1.8rem;&#125;.egg_frame_controls .egg_frame_btn:active &#123;  opacity: 0.8;&#125;.egg_frame_wrap .egg_frame_content &#123;  width: 100%;  flex-grow: 1;  border-top: 0.1rem solid #ccc;  min-height: 40rem;  min-width: 30rem;  background: white;&#125;.egg_frame_content .egg_frame &#123;  width: 100%;  height: 100%;  outline: none;  border: none;&#125;.egg_time_input &#123;  display: inline-flex;  align-items: center;  justify-content: center;&#125;.egg_time_input .egg_hour_wrap,.egg_time_input .egg_minute_wrap &#123;  width: 4rem;&#125;.egg_time_input .egg_separator &#123;  padding: 0 0.5rem;  font-size: 1.5rem;&#125;.egg_settings_item &#123;  position: absolute;  top: 0;  left: 0;  width: 100%;  height: 100%;  pointer-events: none;  overflow: hidden;  border-radius: 1rem;&#125;.egg_settings_item .egg_settings &#123;  display: inline-flex;  flex-direction: column;  font-size: 1.4rem;  background: white;  border-radius: 1rem;  overflow: hidden;  width: 100%;  height: 100%;  pointer-events: all;  transform: translateX(100%);  transition: transform 300ms ease;  padding-top: 1rem;&#125;.egg_settings_item .egg_settings.active &#123;  transform: translateX(0);&#125;.egg_settings .egg_settings_label &#123;  padding-bottom: 1rem;  user-select: none;&#125;.egg_settings_item .egg_settings_version_wrap &#123;  padding: 1rem 2rem 0 2rem;  display: flex;  align-items: center;  justify-content: space-between;&#125;.egg_settings_version_wrap .egg_settings_version &#123;  color: #999;  display: flex;  align-items: center;&#125;.egg_settings_version .egg_settings_version_detail &#123;  color: #24292f;  font-size: 1.6rem;  width: 1.6rem;  height: 1.6rem;  margin-left: 0.4rem;&#125;.egg_settings_item .egg_settings_theme_wrap &#123;  padding: 1rem 2rem 0 2rem;&#125;.egg_settings_theme_wrap .egg_settings_theme_colors &#123;  display: flex;  align-items: center;  justify-content: space-between;&#125;.egg_settings_theme_color_wrap .egg_settings_theme_color &#123;  border-radius: 50%;  width: 1.6rem;  height: 1.6rem;  background: currentColor;&#125;.egg_settings .egg_settings_read_time_wrap,.egg_settings .egg_settings_watch_time_wrap &#123;  padding: 1rem 2rem 0 2rem;  display: flex;  justify-content: space-between;  align-items: center;&#125;.egg_settings_read_time_wrap .egg_settings_label,.egg_settings_watch_time_wrap .egg_settings_label &#123;  padding: 0.5rem 0;&#125;.egg_settings_read_time_wrap .egg_select,.egg_settings_watch_time_wrap .egg_select &#123;  width: 6rem;&#125;.egg_settings .egg_settings_token_wrap &#123;  padding: 1rem 2rem 0 2rem;&#125;.egg_settings_token_wrap .egg_settings_token_input &#123;  outline: none;  border: 0.1rem solid #eee;  padding: 1rem;  background: white;  border-radius: 0.2rem;  width: 100%;  box-sizing: border-box;  color: #ccc;&#125;.egg_settings_token_wrap .egg_settings_token_input.active &#123;  color: #333;&#125;.egg_settings_token_input::placeholder &#123;  color: #ccc;&#125;.egg_settings .egg_settings_submit_btn_wrap &#123;  text-align: right;  padding-top: 1rem;  display: none;&#125;.egg_settings .egg_settings_submit_btn_wrap.active &#123;  display: block;&#125;.egg_settings_submit_btn_wrap .egg_settings_submit_btn &#123;  outline: none;  border: 0.1rem solid #eee;  padding: 0.5rem 1rem;  text-align: center;  background: white;  border-radius: 0.2rem;  cursor: pointer;&#125;.egg_settings_submit_btn_wrap .egg_settings_submit_btn:active &#123;  background: #eee;&#125;.egg_schedule &#123;  height: 100%;  display: flex;  flex-direction: column;&#125;.egg_schedule_time_wrap &#123;  padding: 1rem 2rem;  border-bottom: 0.1rem solid #eee;&#125;.egg_schedule_time .egg_schedule_label &#123;  padding-bottom: 1rem;  user-select: none;&#125;.egg_schedule_time .egg_schedule_time_input_wrap &#123;  display: flex;  justify-content: space-between;  align-items: center;&#125;.egg_schedule_time_input_wrap .egg_schedule_add_btn &#123;  outline: none;  border: 0.1rem solid #eee;  padding: 0.5rem 1rem;  text-align: center;  background: white;  border-radius: 0.2rem;  cursor: pointer;&#125;.egg_schedule_time_input_wrap .egg_schedule_add_btn:active &#123;  background: #eee;&#125;.egg_schedule_list &#123;  height: 100%;  overflow: auto;&#125;.egg_schedule_list .egg_schedule_item &#123;  display: flex;  justify-content: space-between;  padding: 0.5rem 1.5rem;  font-size: 1.4rem;  border-bottom: 0.1rem solid #eee;&#125;.egg_schedule_list::-webkit-scrollbar &#123;  width: 0.4rem;  background: white;  border-radius: 0.2rem;&#125;.egg_schedule_list::-webkit-scrollbar-thumb &#123;  background: #ccc;  border-radius: 0.2rem;&#125;.egg_schedule_detail_time_wrap &#123;  display: flex;  align-items: center;&#125;.egg_schedule_detail_time_wrap.inactive &#123;  color: #ccc;&#125;.egg_schedule_detail_time_wrap .egg_schedule_detail_icon &#123;  padding-right: 0.4rem;  display: flex;  color: #ccc;&#125;.egg_schedule_detail_del_wrap .egg_schedule_del_btn &#123;  outline: none;  padding: 1rem;  text-align: center;  background: white;  border-radius: 0.2rem;  font-size: 1.4rem;  cursor: pointer;  color: #ccc;&#125;.egg_schedule_detail_del_wrap .egg_schedule_del_btn:hover &#123;  color: #333;&#125;.egg_schedule_detail_del_wrap .egg_schedule_del_btn:active &#123;  color: #eee;&#125;.egg_schedule_list .egg_schedule_list_none &#123;  width: 100%;  height: 100%;  display: flex;  flex-direction: column;  justify-content: center;  align-items: center;  color: #ccc;&#125;.egg_schedule_list_none .egg_icon &#123;  font-size: 2.5rem;&#125;.egg_schedule_list_none_text &#123;  padding-top: 1rem;&#125;.egg_select &#123;  position: relative;&#125;.egg_select .egg_select_input &#123;  outline: none;  border: 0.1rem solid #eee;  padding: 0.8rem;  text-align: center;  background: white;  border-radius: 0.2rem;  display: inline-block;  width: 100%;  box-sizing: border-box;&#125;.egg_select .egg_select_input::placeholder &#123;  color: #ccc;&#125;.egg_select_list &#123;  max-height: 12rem;  border-radius: 0 0 0.2rem 0.2rem;  box-shadow: 0 0.1rem 0.1rem 0.1rem #eee;  background: white;  user-select: none;  transition: 100ms ease;  scrollbar-width: thin;  overflow: auto;  opacity: 1;  z-index: 9;  width: 100%;  position: absolute;&#125;.egg_select_list.hide &#123;  opacity: 0;  visibility: hidden;&#125;.egg_select_list::-webkit-scrollbar &#123;  width: 0.4rem;  background: white;  border-radius: 0.2rem;&#125;.egg_select_list::-webkit-scrollbar-thumb &#123;  background: #ccc;  border-radius: 0.2rem;&#125;.egg_select_list .egg_select_item &#123;  padding: 0.6rem 1rem;  border-bottom: 0.1rem solid #eee;  cursor: pointer;  color: #333;  transition: 300ms ease;  text-align: center;&#125;.egg_select_list .egg_select_item.selected &#123;  font-weight: bold;  background: #f6f6f6;&#125;.egg_select_list .egg_select_item.active &#123;  background: #eee;&#125;.egg_select_list .egg_select_item:hover &#123;  background: #eee;&#125;&#x27;</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 嵌入样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">GM_addStyle</span>(css);</span><br><span class="line"><span class="title function_">load</span>(<span class="function">(<span class="params">href</span>) =&gt;</span> href.<span class="title function_">match</span>(<span class="variable constant_">URL_CONFIG</span>.<span class="property">home</span>), <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化logo</span></span><br><span class="line">    <span class="title function_">initLogo</span>();</span><br><span class="line">    <span class="comment">// 页面提示</span></span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;进入主页面!&#x27;</span>);</span><br><span class="line">    <span class="comment">// 初始化主题</span></span><br><span class="line">    <span class="title function_">initThemeColor</span>();</span><br><span class="line">    <span class="comment">// 初始化任务配置</span></span><br><span class="line">    <span class="title function_">initTaskConfig</span>();</span><br><span class="line">    <span class="comment">// 初始化设置</span></span><br><span class="line">    <span class="title function_">initSettings</span>();</span><br><span class="line">    <span class="comment">// 设置字体</span></span><br><span class="line">    <span class="title function_">initFontSize</span>();</span><br><span class="line">    <span class="comment">// 初始化主页面</span></span><br><span class="line">    <span class="title function_">initMainListener</span>();</span><br><span class="line">    <span class="comment">// 初始化提示</span></span><br><span class="line">    <span class="title function_">renderTip</span>();</span><br><span class="line">    <span class="comment">// 渲染面板</span></span><br><span class="line">    <span class="title function_">renderPanel</span>();</span><br><span class="line">    <span class="comment">// 渲染窗口</span></span><br><span class="line">    <span class="title function_">renderFrame</span>();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="title function_">load</span>(<span class="function">(<span class="params">href</span>) =&gt;</span> href === <span class="title function_">GM_getValue</span>(<span class="string">&#x27;readingUrl&#x27;</span>), <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="comment">// 页面提示</span></span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;进入文章选读页面!&#x27;</span>);</span><br><span class="line">    <span class="comment">// 初始化主题</span></span><br><span class="line">    <span class="title function_">initThemeColor</span>();</span><br><span class="line">    <span class="comment">// 初始化设置</span></span><br><span class="line">    <span class="title function_">initSettings</span>();</span><br><span class="line">    <span class="comment">// 设置字体</span></span><br><span class="line">    <span class="title function_">initFontSize</span>();</span><br><span class="line">    <span class="comment">// 最大阅读</span></span><br><span class="line">    <span class="title function_">initMaxRead</span>();</span><br><span class="line">    <span class="comment">// 初始化子页面</span></span><br><span class="line">    <span class="title function_">initChildListener</span>();</span><br><span class="line">    <span class="comment">// 初始化提示</span></span><br><span class="line">    <span class="title function_">renderTip</span>();</span><br><span class="line">    <span class="comment">// 处理文章</span></span><br><span class="line">    <span class="title function_">handleNews</span>();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="title function_">load</span>(<span class="function">(<span class="params">href</span>) =&gt;</span> href === <span class="title function_">GM_getValue</span>(<span class="string">&#x27;watchingUrl&#x27;</span>), <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="comment">// 页面提示</span></span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;进入视听学习页面!&#x27;</span>);</span><br><span class="line">    <span class="comment">// 初始化主题</span></span><br><span class="line">    <span class="title function_">initThemeColor</span>();</span><br><span class="line">    <span class="comment">// 初始化设置</span></span><br><span class="line">    <span class="title function_">initSettings</span>();</span><br><span class="line">    <span class="comment">// 设置字体</span></span><br><span class="line">    <span class="title function_">initFontSize</span>();</span><br><span class="line">    <span class="comment">// 最大视听</span></span><br><span class="line">    <span class="title function_">initMaxWatch</span>();</span><br><span class="line">    <span class="comment">// 初始化子页面</span></span><br><span class="line">    <span class="title function_">initChildListener</span>();</span><br><span class="line">    <span class="comment">// 初始化提示</span></span><br><span class="line">    <span class="title function_">renderTip</span>();</span><br><span class="line">    <span class="comment">// 处理视频</span></span><br><span class="line">    <span class="title function_">handleVideo</span>();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="title function_">load</span>(<span class="function">(<span class="params">href</span>) =&gt;</span> href === <span class="variable constant_">URL_CONFIG</span>.<span class="property">examPractice</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="comment">// 页面提示</span></span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;进入每日答题页面!&#x27;</span>);</span><br><span class="line">    <span class="comment">// 初始化主题</span></span><br><span class="line">    <span class="title function_">initThemeColor</span>();</span><br><span class="line">    <span class="comment">// 初始化设置</span></span><br><span class="line">    <span class="title function_">initSettings</span>();</span><br><span class="line">    <span class="comment">// 设置字体</span></span><br><span class="line">    <span class="title function_">initFontSize</span>();</span><br><span class="line">    <span class="comment">// 初始化子页面</span></span><br><span class="line">    <span class="title function_">initChildListener</span>();</span><br><span class="line">    <span class="comment">// 初始化提示</span></span><br><span class="line">    <span class="title function_">renderTip</span>();</span><br><span class="line">    <span class="comment">// 创建答题按钮</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">renderExamBtn</span>();</span><br><span class="line">    <span class="comment">// 开始答题</span></span><br><span class="line">    <span class="title function_">doingExam</span>(<span class="title class_">ExamType</span>.<span class="property">PRACTICE</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="title function_">load</span>(<span class="function">(<span class="params">href</span>) =&gt;</span> href.<span class="title function_">includes</span>(<span class="variable constant_">URL_CONFIG</span>.<span class="property">examPaper</span>), <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="comment">// 页面提示</span></span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;进入专项练习页面!&#x27;</span>);</span><br><span class="line">    <span class="comment">// 初始化主题</span></span><br><span class="line">    <span class="title function_">initThemeColor</span>();</span><br><span class="line">    <span class="comment">// 初始化设置</span></span><br><span class="line">    <span class="title function_">initSettings</span>();</span><br><span class="line">    <span class="comment">// 设置字体</span></span><br><span class="line">    <span class="title function_">initFontSize</span>();</span><br><span class="line">    <span class="comment">// 初始化子页面</span></span><br><span class="line">    <span class="title function_">initChildListener</span>();</span><br><span class="line">    <span class="comment">// 初始化提示</span></span><br><span class="line">    <span class="title function_">renderTip</span>();</span><br><span class="line">    <span class="comment">// 创建答题按钮</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">renderExamBtn</span>();</span><br><span class="line">    <span class="comment">// 开始答题</span></span><br><span class="line">    <span class="title function_">doingExam</span>(<span class="title class_">ExamType</span>.<span class="property">PAPER</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 初始化logo</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initLogo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`%c tech-study.js %c <span class="subst">$&#123;version&#125;</span> `</span>, <span class="string">&#x27;background:dodgerblue;color:white;font-size:15px;border-radius:4px 0 0 4px;padding:2px 0;&#x27;</span>, <span class="string">&#x27;background:black;color:gold;font-size:15px;border-radius:0 4px 4px 0;padding:2px 0;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 初始化配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initTaskConfig</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> configTemp = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title function_">GM_getValue</span>(<span class="string">&#x27;taskConfig&#x27;</span>));</span><br><span class="line">        <span class="keyword">if</span> (configTemp &amp;&amp; <span class="title class_">Array</span>.<span class="title function_">isArray</span>(configTemp)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (configTemp.<span class="property">length</span> === taskConfig.<span class="property">length</span>) &#123;</span><br><span class="line">                taskConfig.<span class="title function_">forEach</span>(<span class="function">(<span class="params">task, i</span>) =&gt;</span> &#123;</span><br><span class="line">                    task.<span class="property">active</span> = configTemp[i].<span class="property">active</span>;</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 初始化配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initSettings</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> settingsTemp = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title function_">GM_getValue</span>(<span class="string">&#x27;studySettings&#x27;</span>));</span><br><span class="line">        <span class="keyword">if</span> (settingsTemp &amp;&amp; <span class="title class_">Array</span>.<span class="title function_">isArray</span>(settingsTemp)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (settingsTemp.<span class="property">length</span> === settings.<span class="property">length</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> settingsTemp) &#123;</span><br><span class="line">                    settings[i] = settingsTemp[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 初始化配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initFontSize</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 移动端</span></span><br><span class="line">    <span class="keyword">const</span> moblie = <span class="title function_">hasMobile</span>();</span><br><span class="line">    <span class="keyword">if</span> (moblie) &#123;</span><br><span class="line">        <span class="comment">// 清除缩放</span></span><br><span class="line">        <span class="keyword">const</span> meta = $$(<span class="string">&#x27;meta[name=viewport]&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span> (meta) &#123;</span><br><span class="line">            meta.<span class="property">content</span> = <span class="string">&#x27;initial-scale=0, user-scalable=yes&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 缩放比例</span></span><br><span class="line">        <span class="keyword">const</span> scale = ~~(<span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">outerWidth</span>) || <span class="number">1</span>;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&#x27;--scale&#x27;</span>, <span class="title class_">String</span>(scale));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 初始化最大阅读时长</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initMaxRead</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> maxReadTemp = <span class="title function_">GM_getValue</span>(<span class="string">&#x27;maxRead&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (maxReadTemp) &#123;</span><br><span class="line">            maxRead.<span class="property">value</span> = maxReadTemp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (error) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 初始化最大视听时长</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initMaxWatch</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> maxWatchTemp = <span class="title function_">GM_getValue</span>(<span class="string">&#x27;maxWatch&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (maxWatchTemp) &#123;</span><br><span class="line">            maxWatch.<span class="property">value</span> = maxWatchTemp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (error) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 初始化主题色</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initThemeColor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 监听主题变化</span></span><br><span class="line">        <span class="title function_">watch</span>(themeColor, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 设置主题</span></span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&#x27;--themeColor&#x27;</span>, themeColor.<span class="property">value</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 主题色</span></span><br><span class="line">        <span class="keyword">const</span> themeColorTemp = <span class="title function_">GM_getValue</span>(<span class="string">&#x27;themeColor&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (themeColorTemp) &#123;</span><br><span class="line">            themeColor.<span class="property">value</span> = themeColorTemp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (error) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 渲染提示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">renderTip</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> tipWrap = <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">        <span class="attr">class</span>: <span class="string">&#x27;egg_tip_wrap&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="title function_">mountElement</span>(tipWrap);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 渲染答题按钮</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">renderExamBtn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> titles = <span class="keyword">await</span> $_(<span class="string">&#x27;.title&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (titles.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="comment">// 插入节点</span></span><br><span class="line">        titles[<span class="number">0</span>].<span class="property">parentNode</span>?.<span class="title function_">insertBefore</span>(<span class="title class_">ExamBtn</span>().<span class="property">ele</span>, titles[<span class="number">0</span>].<span class="property">nextSibling</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 渲染面板</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">renderPanel</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 面板</span></span><br><span class="line">    <span class="keyword">const</span> panel = <span class="title class_">Panel</span>();</span><br><span class="line">    <span class="comment">// 插入节点</span></span><br><span class="line">    <span class="title function_">mountElement</span>(panel);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 渲染窗口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">renderFrame</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 窗口</span></span><br><span class="line">    <span class="keyword">const</span> frame = <span class="title class_">Frame</span>();</span><br><span class="line">    <span class="comment">// 插入节点</span></span><br><span class="line">    <span class="title function_">mountElement</span>(frame);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 答案 API */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 获取答案</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getAnswer</span>(<span class="params">question</span>) &#123;</span><br><span class="line">    <span class="comment">// 数据</span></span><br><span class="line">    <span class="keyword">const</span> data = &#123;</span><br><span class="line">        <span class="attr">txt_name</span>: <span class="title function_">md5</span>(question),</span><br><span class="line">        <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(data);</span><br><span class="line">        <span class="comment">// 请求</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_CONFIG</span>.<span class="property">answerSearch</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">            <span class="attr">headers</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">body</span>: params.<span class="title function_">toString</span>(),</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> result = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="keyword">const</span> &#123; data, status &#125; = result;</span><br><span class="line">            <span class="keyword">if</span> (status !== <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 答案列表</span></span><br><span class="line">                <span class="keyword">const</span> answerList = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(data.<span class="property">txt_content</span>);</span><br><span class="line">                <span class="comment">// 答案</span></span><br><span class="line">                <span class="keyword">const</span> answers = answerList[<span class="number">0</span>].<span class="property">content</span>.<span class="title function_">split</span>(<span class="regexp">/[;\s]/</span>);</span><br><span class="line">                <span class="keyword">return</span> answers;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (error) &#123; &#125;</span><br><span class="line">    <span class="keyword">return</span> [];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 保存答案</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">saveAnswer</span>(<span class="params">question, answer</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 内容</span></span><br><span class="line">        <span class="keyword">const</span> content = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([&#123; <span class="attr">title</span>: <span class="title function_">md5</span>(question), <span class="attr">content</span>: answer &#125;]);</span><br><span class="line">        <span class="comment">// 数据</span></span><br><span class="line">        <span class="keyword">const</span> data = &#123;</span><br><span class="line">            <span class="attr">txt_name</span>: <span class="title function_">md5</span>(question),</span><br><span class="line">            <span class="attr">txt_content</span>: content,</span><br><span class="line">            <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="attr">v_id</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">const</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(data);</span><br><span class="line">        <span class="comment">// 请求</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_CONFIG</span>.<span class="property">answerSave</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">            <span class="attr">headers</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">body</span>: params.<span class="title function_">toString</span>(),</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (error) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 数据 API */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 获取新闻数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getNewsList</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 随机</span></span><br><span class="line">    <span class="keyword">const</span> randNum = ~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable constant_">API_CONFIG</span>.<span class="property">todayNews</span>.<span class="property">length</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 获取重要新闻</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_CONFIG</span>.<span class="property">todayNews</span>[randNum], &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (err) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 获取视频数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getVideoList</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 随机</span></span><br><span class="line">    <span class="keyword">const</span> randNum = ~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable constant_">API_CONFIG</span>.<span class="property">todayVideos</span>.<span class="property">length</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 获取重要新闻</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_CONFIG</span>.<span class="property">todayVideos</span>[randNum], &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (err) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 专项练习数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getExamPaper</span>(<span class="params">pageNo</span>) &#123;</span><br><span class="line">    <span class="comment">// 链接</span></span><br><span class="line">    <span class="keyword">const</span> url = <span class="string">`<span class="subst">$&#123;API_CONFIG.paperList&#125;</span>?pageSize=50&amp;pageNo=<span class="subst">$&#123;pageNo&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 获取专项练习</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">            <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="keyword">const</span> paperJson = <span class="built_in">decodeURIComponent</span>(<span class="built_in">escape</span>(<span class="variable language_">window</span>.<span class="title function_">atob</span>(data.<span class="property">data_str</span>.<span class="title function_">replace</span>(<span class="regexp">/-/g</span>, <span class="string">&#x27;+&#x27;</span>).<span class="title function_">replace</span>(<span class="regexp">/_/g</span>, <span class="string">&#x27;/&#x27;</span>))));</span><br><span class="line">            <span class="comment">// JSON格式化</span></span><br><span class="line">            <span class="keyword">const</span> paper = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(paperJson);</span><br><span class="line">            <span class="keyword">return</span> paper;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 生成二维码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">generateQRCode</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 推送</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_CONFIG</span>.<span class="property">generateQRCode</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="keyword">if</span> (data.<span class="property">success</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> data.<span class="property">result</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (error) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 用二维码登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">loginWithQRCode</span>(<span class="params">qrCode</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123;</span><br><span class="line">            qrCode,</span><br><span class="line">            <span class="attr">goto</span>: <span class="string">&#x27;https://oa.xuexi.cn&#x27;</span>,</span><br><span class="line">            <span class="attr">pdmToken</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 推送</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_CONFIG</span>.<span class="property">loginWithQRCode</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">            <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span>,</span><br><span class="line">            <span class="attr">headers</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded;charset=UTF-8&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">body</span>: params.<span class="title function_">toString</span>(),</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (error) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 签名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getSign</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 推送</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_CONFIG</span>.<span class="property">sign</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">            <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="keyword">if</span> (data.<span class="property">ok</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> data.<span class="property">data</span>.<span class="property">sign</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (error) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 安全检查</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">data</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">secureCheck</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(data);</span><br><span class="line">        <span class="keyword">const</span> url = <span class="string">`<span class="subst">$&#123;API_CONFIG.secureCheck&#125;</span>?<span class="subst">$&#123;params&#125;</span>`</span>;</span><br><span class="line">        <span class="comment">// 推送</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">            <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="keyword">return</span> data.<span class="property">success</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (error) &#123; &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 推送 API */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 推送</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">pushPlus</span>(<span class="params">token, title, content, template, toToken</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 参数体</span></span><br><span class="line">        <span class="keyword">const</span> body = &#123;</span><br><span class="line">            token,</span><br><span class="line">            title,</span><br><span class="line">            content,</span><br><span class="line">            template,</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 好友令牌</span></span><br><span class="line">        <span class="keyword">if</span> (toToken) &#123;</span><br><span class="line">            body.<span class="property">to</span> = toToken;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 推送</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_CONFIG</span>.<span class="property">push</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">            <span class="attr">headers</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(body),</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (error) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 用户 API */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 获取用户信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getUserInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_CONFIG</span>.<span class="property">userInfo</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">            <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (err) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 获取总积分</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getTotalScore</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_CONFIG</span>.<span class="property">totalScore</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">            <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="comment">// 总分</span></span><br><span class="line">            <span class="keyword">const</span> &#123; score &#125; = data;</span><br><span class="line">            <span class="keyword">return</span> score;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (err) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 获取当天总积分</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getTodayScore</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_CONFIG</span>.<span class="property">todayScore</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">            <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="comment">// 当天总分</span></span><br><span class="line">            <span class="keyword">const</span> &#123; score &#125; = data;</span><br><span class="line">            <span class="keyword">return</span> score;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (err) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 获取任务列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getTaskList</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_CONFIG</span>.<span class="property">taskList</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">            <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 请求成功</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">            <span class="comment">// 进度和当天总分</span></span><br><span class="line">            <span class="keyword">const</span> &#123; taskProgress &#125; = data;</span><br><span class="line">            <span class="keyword">return</span> taskProgress;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (err) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* task·配置 */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 单次最大新闻数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> maxNewsNum = <span class="number">6</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 单次最大视频数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> maxVideoNum = <span class="number">6</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 二维码最大刷新次数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> maxRefreshCount = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 二维码自动刷新间隔</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> autoRefreshQRCodeInterval = <span class="number">100000</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 视频静音</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> muted = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> url配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">URL_CONFIG</span> = &#123;</span><br><span class="line">    <span class="comment">// 主页正则</span></span><br><span class="line">    <span class="attr">home</span>: <span class="regexp">/^https\:\/\/www\.xuexi\.cn(\/(index\.html)?)?$/</span>,</span><br><span class="line">    <span class="comment">// 主页</span></span><br><span class="line">    <span class="attr">homeOrigin</span>: <span class="string">&#x27;https://www.xuexi.cn&#x27;</span>,</span><br><span class="line">    <span class="comment">// 每日答题页面</span></span><br><span class="line">    <span class="attr">examPractice</span>: <span class="string">&#x27;https://pc.xuexi.cn/points/exam-practice.html&#x27;</span>,</span><br><span class="line">    <span class="comment">// 专项练习页面</span></span><br><span class="line">    <span class="attr">examPaper</span>: <span class="string">&#x27;https://pc.xuexi.cn/points/exam-paper-detail.html&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> api配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">API_CONFIG</span> = &#123;</span><br><span class="line">    <span class="comment">// 用户信息</span></span><br><span class="line">    <span class="attr">userInfo</span>: <span class="string">&#x27;https://pc-api.xuexi.cn/open/api/user/info&#x27;</span>,</span><br><span class="line">    <span class="comment">// 总分</span></span><br><span class="line">    <span class="attr">totalScore</span>: <span class="string">&#x27;https://pc-proxy-api.xuexi.cn/delegate/score/get&#x27;</span>,</span><br><span class="line">    <span class="comment">// 当天分数</span></span><br><span class="line">    <span class="attr">todayScore</span>: <span class="string">&#x27;https://pc-proxy-api.xuexi.cn/delegate/score/today/query&#x27;</span>,</span><br><span class="line">    <span class="comment">// 任务列表</span></span><br><span class="line">    <span class="attr">taskList</span>: <span class="string">&#x27;https://pc-proxy-api.xuexi.cn/delegate/score/days/listScoreProgress?sence=score&amp;deviceType=2&#x27;</span>,</span><br><span class="line">    <span class="comment">// 新闻数据</span></span><br><span class="line">    <span class="attr">todayNews</span>: [</span><br><span class="line">        <span class="string">&#x27;https://www.xuexi.cn/lgdata/35il6fpn0ohq.json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://www.xuexi.cn/lgdata/1ap1igfgdn2.json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://www.xuexi.cn/lgdata/vdppiu92n1.json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://www.xuexi.cn/lgdata/152mdtl3qn1.json&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// 视频数据</span></span><br><span class="line">    <span class="attr">todayVideos</span>: [</span><br><span class="line">        <span class="string">&#x27;https://www.xuexi.cn/lgdata/525pi8vcj24p.json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://www.xuexi.cn/lgdata/11vku6vt6rgom.json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://www.xuexi.cn/lgdata/2qfjjjrprmdh.json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://www.xuexi.cn/lgdata/3o3ufqgl8rsn.json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://www.xuexi.cn/lgdata/591ht3bc22pi.json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://www.xuexi.cn/lgdata/1742g60067k.json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https://www.xuexi.cn/lgdata/1novbsbi47k.json&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// 专项练习列表</span></span><br><span class="line">    <span class="attr">paperList</span>: <span class="string">&#x27;https://pc-proxy-api.xuexi.cn/api/exam/service/paper/pc/list&#x27;</span>,</span><br><span class="line">    <span class="comment">// 文本服务器保存答案</span></span><br><span class="line">    <span class="attr">answerSave</span>: <span class="string">&#x27;https://a6.qikekeji.com/txt/data/save&#x27;</span>,</span><br><span class="line">    <span class="comment">// 文本服务器获取答案</span></span><br><span class="line">    <span class="attr">answerSearch</span>: <span class="string">&#x27;https://a6.qikekeji.com/txt/data/detail&#x27;</span>,</span><br><span class="line">    <span class="comment">// 推送</span></span><br><span class="line">    <span class="attr">push</span>: <span class="string">&#x27;https://www.pushplus.plus/send&#x27;</span>,</span><br><span class="line">    <span class="comment">// 生成二维码</span></span><br><span class="line">    <span class="attr">generateQRCode</span>: <span class="string">&#x27;https://login.xuexi.cn/user/qrcode/generate&#x27;</span>,</span><br><span class="line">    <span class="comment">//二维码登录</span></span><br><span class="line">    <span class="attr">loginWithQRCode</span>: <span class="string">&#x27;https://login.xuexi.cn/login/login_with_qr&#x27;</span>,</span><br><span class="line">    <span class="comment">// 签名</span></span><br><span class="line">    <span class="attr">sign</span>: <span class="string">&#x27;https://pc-api.xuexi.cn/open/api/sns/sign&#x27;</span>,</span><br><span class="line">    <span class="comment">// 安全检查</span></span><br><span class="line">    <span class="attr">secureCheck</span>: <span class="string">&#x27;https://pc-api.xuexi.cn/login/secure_check&#x27;</span>,</span><br><span class="line">    <span class="comment">// 二维码</span></span><br><span class="line">    <span class="attr">qrcode</span>: <span class="string">&#x27;https://api.qrserver.com/v1/create-qr-code&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 版本号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> version = <span class="string">&#x27;1.7.0&#x27;</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 任务类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">TaskType</span>;</span><br><span class="line">(<span class="keyword">function</span> (<span class="params">TaskType</span>) &#123;</span><br><span class="line">    <span class="title class_">TaskType</span>[<span class="title class_">TaskType</span>[<span class="string">&quot;LOGIN&quot;</span>] = <span class="number">0</span>] = <span class="string">&quot;LOGIN&quot;</span>;</span><br><span class="line">    <span class="title class_">TaskType</span>[<span class="title class_">TaskType</span>[<span class="string">&quot;READ&quot;</span>] = <span class="number">1</span>] = <span class="string">&quot;READ&quot;</span>;</span><br><span class="line">    <span class="title class_">TaskType</span>[<span class="title class_">TaskType</span>[<span class="string">&quot;WATCH&quot;</span>] = <span class="number">2</span>] = <span class="string">&quot;WATCH&quot;</span>;</span><br><span class="line">    <span class="title class_">TaskType</span>[<span class="title class_">TaskType</span>[<span class="string">&quot;PRACTICE&quot;</span>] = <span class="number">3</span>] = <span class="string">&quot;PRACTICE&quot;</span>;</span><br><span class="line">&#125;)(<span class="title class_">TaskType</span> || (<span class="title class_">TaskType</span> = &#123;&#125;));</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 设置类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">SettingType</span>;</span><br><span class="line">(<span class="keyword">function</span> (<span class="params">SettingType</span>) &#123;</span><br><span class="line">    <span class="title class_">SettingType</span>[<span class="title class_">SettingType</span>[<span class="string">&quot;AUTO_START&quot;</span>] = <span class="number">0</span>] = <span class="string">&quot;AUTO_START&quot;</span>;</span><br><span class="line">    <span class="title class_">SettingType</span>[<span class="title class_">SettingType</span>[<span class="string">&quot;SAME_TAB&quot;</span>] = <span class="number">1</span>] = <span class="string">&quot;SAME_TAB&quot;</span>;</span><br><span class="line">    <span class="title class_">SettingType</span>[<span class="title class_">SettingType</span>[<span class="string">&quot;SILENT_RUN&quot;</span>] = <span class="number">2</span>] = <span class="string">&quot;SILENT_RUN&quot;</span>;</span><br><span class="line">    <span class="title class_">SettingType</span>[<span class="title class_">SettingType</span>[<span class="string">&quot;SCHEDULE_RUN&quot;</span>] = <span class="number">3</span>] = <span class="string">&quot;SCHEDULE_RUN&quot;</span>;</span><br><span class="line">    <span class="title class_">SettingType</span>[<span class="title class_">SettingType</span>[<span class="string">&quot;RANDOM_EXAM&quot;</span>] = <span class="number">4</span>] = <span class="string">&quot;RANDOM_EXAM&quot;</span>;</span><br><span class="line">    <span class="title class_">SettingType</span>[<span class="title class_">SettingType</span>[<span class="string">&quot;REMOTE_PUSH&quot;</span>] = <span class="number">5</span>] = <span class="string">&quot;REMOTE_PUSH&quot;</span>;</span><br><span class="line">&#125;)(<span class="title class_">SettingType</span> || (<span class="title class_">SettingType</span> = &#123;&#125;));</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 进度类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">TaskStatusType</span>;</span><br><span class="line">(<span class="keyword">function</span> (<span class="params">TaskStatusType</span>) &#123;</span><br><span class="line">    <span class="title class_">TaskStatusType</span>[<span class="title class_">TaskStatusType</span>[<span class="string">&quot;LOADING&quot;</span>] = <span class="number">0</span>] = <span class="string">&quot;LOADING&quot;</span>;</span><br><span class="line">    <span class="title class_">TaskStatusType</span>[<span class="title class_">TaskStatusType</span>[<span class="string">&quot;LOADED&quot;</span>] = <span class="number">1</span>] = <span class="string">&quot;LOADED&quot;</span>;</span><br><span class="line">    <span class="title class_">TaskStatusType</span>[<span class="title class_">TaskStatusType</span>[<span class="string">&quot;START&quot;</span>] = <span class="number">2</span>] = <span class="string">&quot;START&quot;</span>;</span><br><span class="line">    <span class="title class_">TaskStatusType</span>[<span class="title class_">TaskStatusType</span>[<span class="string">&quot;PAUSE&quot;</span>] = <span class="number">3</span>] = <span class="string">&quot;PAUSE&quot;</span>;</span><br><span class="line">    <span class="title class_">TaskStatusType</span>[<span class="title class_">TaskStatusType</span>[<span class="string">&quot;FINISH&quot;</span>] = <span class="number">4</span>] = <span class="string">&quot;FINISH&quot;</span>;</span><br><span class="line">&#125;)(<span class="title class_">TaskStatusType</span> || (<span class="title class_">TaskStatusType</span> = &#123;&#125;));</span><br><span class="line"><span class="comment">// 当前订阅</span></span><br><span class="line"><span class="keyword">let</span> currentSub;</span><br><span class="line"><span class="comment">// 订阅</span></span><br><span class="line"><span class="keyword">const</span> subscription = <span class="keyword">new</span> <span class="title class_">WeakMap</span>();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> Proxy Map</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> proxyMap = <span class="keyword">new</span> <span class="title class_">WeakMap</span>();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 收集 Ref 依赖</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">key</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">trackRef</span> = (<span class="params">target</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 当前订阅</span></span><br><span class="line">    <span class="keyword">if</span> (!currentSub) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// target 订阅列表</span></span><br><span class="line">    <span class="keyword">let</span> subList = subscription.<span class="title function_">get</span>(target);</span><br><span class="line">    <span class="comment">// 不存在订阅列表</span></span><br><span class="line">    <span class="keyword">if</span> (!subList) &#123;</span><br><span class="line">        subList = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">        <span class="comment">// 键订阅</span></span><br><span class="line">        <span class="keyword">const</span> subkeyList = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">        <span class="comment">// 添加订阅</span></span><br><span class="line">        subkeyList.<span class="title function_">add</span>(currentSub);</span><br><span class="line">        subList.<span class="title function_">set</span>(<span class="string">&#x27;value&#x27;</span>, subkeyList);</span><br><span class="line">        subscription.<span class="title function_">set</span>(target, subList);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 键订阅</span></span><br><span class="line">    <span class="keyword">let</span> subkeyList = subList.<span class="title function_">get</span>(<span class="string">&#x27;value&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!subkeyList) &#123;</span><br><span class="line">        <span class="comment">// 键订阅</span></span><br><span class="line">        subkeyList = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">        <span class="comment">// 添加订阅</span></span><br><span class="line">        subkeyList.<span class="title function_">add</span>(currentSub);</span><br><span class="line">        subList.<span class="title function_">set</span>(<span class="string">&#x27;value&#x27;</span>, subkeyList);</span><br><span class="line">        subscription.<span class="title function_">set</span>(target, subList);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 添加订阅</span></span><br><span class="line">    subkeyList.<span class="title function_">add</span>(currentSub);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 通知 Ref 订阅</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">terget</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">key</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">triggerRef</span>(<span class="params">target, newVal, oldVal</span>) &#123;</span><br><span class="line">    <span class="comment">// target 订阅列表</span></span><br><span class="line">    <span class="keyword">const</span> subList = subscription.<span class="title function_">get</span>(target);</span><br><span class="line">    <span class="keyword">if</span> (!subList) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 键订阅</span></span><br><span class="line">    <span class="keyword">let</span> subkeyList = subList.<span class="title function_">get</span>(<span class="string">&#x27;value&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!subkeyList) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通知订阅</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> fn <span class="keyword">of</span> subkeyList) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fn <span class="keyword">instanceof</span> <span class="title class_">Function</span>) &#123;</span><br><span class="line">            <span class="title function_">fn</span>(newVal, oldVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 收集依赖</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">key</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">track</span> = (<span class="params">target, key</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 当前订阅</span></span><br><span class="line">    <span class="keyword">if</span> (!currentSub) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// proxy</span></span><br><span class="line">    <span class="keyword">const</span> proxyTarget = proxyMap.<span class="title function_">get</span>(target);</span><br><span class="line">    <span class="keyword">if</span> (!proxyTarget) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// target 订阅列表</span></span><br><span class="line">    <span class="keyword">let</span> subList = subscription.<span class="title function_">get</span>(target);</span><br><span class="line">    <span class="comment">// 不存在订阅列表</span></span><br><span class="line">    <span class="keyword">if</span> (!subList) &#123;</span><br><span class="line">        subList = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">        <span class="comment">// 键订阅</span></span><br><span class="line">        <span class="keyword">const</span> subkeyList = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">        <span class="comment">// 添加订阅</span></span><br><span class="line">        subkeyList.<span class="title function_">add</span>(currentSub);</span><br><span class="line">        subList.<span class="title function_">set</span>(key, subkeyList);</span><br><span class="line">        subscription.<span class="title function_">set</span>(target, subList);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 键订阅</span></span><br><span class="line">    <span class="keyword">let</span> subkeyList = subList.<span class="title function_">get</span>(key);</span><br><span class="line">    <span class="keyword">if</span> (!subkeyList) &#123;</span><br><span class="line">        <span class="comment">// 键订阅</span></span><br><span class="line">        subkeyList = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">        <span class="comment">// 添加订阅</span></span><br><span class="line">        subkeyList.<span class="title function_">add</span>(currentSub);</span><br><span class="line">        subList.<span class="title function_">set</span>(key, subkeyList);</span><br><span class="line">        subscription.<span class="title function_">set</span>(target, subList);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 添加订阅</span></span><br><span class="line">    subkeyList.<span class="title function_">add</span>(currentSub);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 通知订阅</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">terget</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">key</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">trigger</span>(<span class="params">target, key, newVal, oldVal</span>) &#123;</span><br><span class="line">    <span class="comment">// proxy</span></span><br><span class="line">    <span class="keyword">const</span> proxyTarget = proxyMap.<span class="title function_">get</span>(target);</span><br><span class="line">    <span class="keyword">if</span> (!proxyTarget) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// proxyTarget 订阅列表</span></span><br><span class="line">    <span class="keyword">const</span> subList = subscription.<span class="title function_">get</span>(target);</span><br><span class="line">    <span class="keyword">if</span> (!subList) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 键订阅</span></span><br><span class="line">    <span class="keyword">let</span> subkeyList = subList.<span class="title function_">get</span>(key);</span><br><span class="line">    <span class="keyword">if</span> (!subkeyList) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通知订阅</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> fn <span class="keyword">of</span> subkeyList) &#123;</span><br><span class="line">        <span class="title function_">fn</span>(newVal, oldVal);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 只读键</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">ReactiveFlags</span>;</span><br><span class="line">(<span class="keyword">function</span> (<span class="params">ReactiveFlags</span>) &#123;</span><br><span class="line">    <span class="title class_">ReactiveFlags</span>[<span class="string">&quot;IS_REF&quot;</span>] = <span class="string">&quot;_isRef&quot;</span>;</span><br><span class="line">    <span class="title class_">ReactiveFlags</span>[<span class="string">&quot;IS_SHALLOW&quot;</span>] = <span class="string">&quot;_isShallow&quot;</span>;</span><br><span class="line">    <span class="title class_">ReactiveFlags</span>[<span class="string">&quot;IS_REACTIVE&quot;</span>] = <span class="string">&quot;_isReactive&quot;</span>;</span><br><span class="line">    <span class="title class_">ReactiveFlags</span>[<span class="string">&quot;IS_READONLY&quot;</span>] = <span class="string">&quot;_isReadonly&quot;</span>;</span><br><span class="line">&#125;)(<span class="title class_">ReactiveFlags</span> || (<span class="title class_">ReactiveFlags</span> = &#123;&#125;));</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> <span class="variable">Ref</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Ref</span> &#123;</span><br><span class="line">    _isShallow = <span class="literal">false</span>;</span><br><span class="line">    _isRef = <span class="literal">true</span>;</span><br><span class="line">    _value;</span><br><span class="line">    value;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">val, shallow = <span class="literal">false</span></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_isShallow</span> = shallow;</span><br><span class="line">        <span class="keyword">if</span> (val &amp;&amp; <span class="keyword">typeof</span> val === <span class="string">&#x27;object&#x27;</span> &amp;&amp; shallow) &#123;</span><br><span class="line">            <span class="keyword">const</span> reactiveVal = <span class="title function_">reactive</span>(val);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_value</span> = reactiveVal;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">value</span> = reactiveVal;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">_value</span> = val;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">value</span> = val;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 定义属性</span></span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="variable language_">this</span>, <span class="string">&#x27;value&#x27;</span>, &#123;</span><br><span class="line">            <span class="title function_">get</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="comment">// 收集依赖</span></span><br><span class="line">                <span class="title function_">trackRef</span>(<span class="variable language_">this</span>);</span><br><span class="line">                <span class="keyword">return</span> _this.<span class="property">_value</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="title function_">set</span>(<span class="params">newVal</span>) &#123;</span><br><span class="line">                <span class="comment">// 旧数据</span></span><br><span class="line">                <span class="keyword">const</span> oldVal = <span class="variable language_">this</span>.<span class="property">_value</span>;</span><br><span class="line">                <span class="comment">// 数据变化</span></span><br><span class="line">                <span class="keyword">if</span> (oldVal !== newVal) &#123;</span><br><span class="line">                    <span class="comment">// 设置新数据值</span></span><br><span class="line">                    _this.<span class="property">_value</span> = newVal;</span><br><span class="line">                    <span class="comment">// 通知依赖</span></span><br><span class="line">                    <span class="title function_">triggerRef</span>(<span class="variable language_">this</span>, newVal, oldVal);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">toJSON</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> <span class="variable">ref</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">v</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">isRef</span> = (<span class="params">v</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> !!(v &amp;&amp; v[<span class="title class_">ReactiveFlags</span>.<span class="property">IS_REF</span>]);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 浅层 shallow</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">v</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">isShallow</span> = (<span class="params">v</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> !!(v &amp;&amp; v[<span class="title class_">ReactiveFlags</span>.<span class="property">IS_SHALLOW</span>]);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 创建 ref</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">v</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createRef</span> = (<span class="params">rawVal, shallow</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Ref</span>(rawVal, shallow);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 解除 ref</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">val</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">unref</span> = (<span class="params">val</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="title function_">isRef</span>(val) ? val.<span class="property">value</span> : val);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 顶层 ref</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">v</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">ref</span> = (<span class="params">value</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">isRef</span>(value)</span><br><span class="line">        ? value</span><br><span class="line">        : <span class="title function_">createRef</span>(value, <span class="literal">true</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> <span class="variable">ref</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">value</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">shallowRef</span> = (<span class="params">value</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">isRef</span>(value)</span><br><span class="line">        ? value</span><br><span class="line">        : <span class="title function_">createRef</span>(value, <span class="literal">false</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 创建处理 reactive</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">isReadonly</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">isShallow</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createReactiveHandlers</span> = (<span class="params">isReadonly, isShallow</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">get</span>: <span class="title function_">createGetters</span>(isReadonly, isShallow),</span><br><span class="line">        <span class="attr">set</span>: <span class="title function_">createSetters</span>(isReadonly, isShallow),</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> <span class="variable">getters</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">isReadonly</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">isShallow</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createGetters</span> = (<span class="params">isReadonly, isShallow</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">get</span>(<span class="params">target, key, receiver</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key === <span class="title class_">ReactiveFlags</span>.<span class="property">IS_REACTIVE</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> !isReadonly;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (key === <span class="title class_">ReactiveFlags</span>.<span class="property">IS_READONLY</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> isReadonly;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (key === <span class="title class_">ReactiveFlags</span>.<span class="property">IS_SHALLOW</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> isShallow;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 结果</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="title class_">Reflect</span>.<span class="title function_">get</span>(target, key, receiver);</span><br><span class="line">        <span class="keyword">if</span> (!isReadonly) &#123;</span><br><span class="line">            <span class="comment">// 收集依赖</span></span><br><span class="line">            <span class="title function_">track</span>(target, key);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isShallow) &#123;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">isRef</span>(res)) &#123;</span><br><span class="line">            <span class="keyword">return</span> res.<span class="property">value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res &amp;&amp; <span class="keyword">typeof</span> res === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (res <span class="keyword">instanceof</span> <span class="title class_">Element</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> res;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> isReadonly ? <span class="title function_">readonly</span>(res) : <span class="title function_">reactive</span>(res);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> <span class="variable">setters</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">readonly</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">shallow</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createSetters</span> = (<span class="params">readonly, shallow</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">set</span>(<span class="params">target, key, newVal, receiver</span>) &#123;</span><br><span class="line">        <span class="comment">// 只读</span></span><br><span class="line">        <span class="keyword">if</span> (readonly) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 旧值</span></span><br><span class="line">        <span class="keyword">const</span> oldVal = target[key];</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">isReadonly</span>(oldVal) &amp;&amp; <span class="title function_">isRef</span>(oldVal) &amp;&amp; !<span class="title function_">isRef</span>(newVal)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!shallow) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">isRef</span>(oldVal) &amp;&amp; !<span class="title function_">isRef</span>(newVal)) &#123;</span><br><span class="line">                oldVal.<span class="property">value</span> = newVal;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> res = <span class="title class_">Reflect</span>.<span class="title function_">set</span>(target, key, newVal, receiver);</span><br><span class="line">        <span class="comment">// length</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(target) &amp;&amp; key === <span class="string">&#x27;length&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// 通知依赖</span></span><br><span class="line">            <span class="title function_">trigger</span>(target, key, newVal, oldVal);</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 数据变化</span></span><br><span class="line">        <span class="keyword">if</span> (oldVal !== newVal) &#123;</span><br><span class="line">            <span class="comment">// 通知依赖</span></span><br><span class="line">            <span class="title function_">trigger</span>(target, key, newVal, oldVal);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> reactive object</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createReactiveObj</span> = (<span class="params">target, isReadonly, shallow</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 存在 Proxy</span></span><br><span class="line">    <span class="keyword">const</span> existingProxy = proxyMap.<span class="title function_">get</span>(target);</span><br><span class="line">    <span class="keyword">if</span> (existingProxy) &#123;</span><br><span class="line">        <span class="keyword">return</span> existingProxy;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 新建</span></span><br><span class="line">    <span class="keyword">const</span> proxy = <span class="keyword">new</span> <span class="title class_">Proxy</span>(target, <span class="title function_">createReactiveHandlers</span>(isReadonly, shallow));</span><br><span class="line">    proxyMap.<span class="title function_">set</span>(target, proxy);</span><br><span class="line">    <span class="keyword">return</span> proxy;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> <span class="variable">reactive</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">val</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">isReactive</span> = (<span class="params">val</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> !!(val &amp;&amp; val[<span class="title class_">ReactiveFlags</span>.<span class="property">IS_REACTIVE</span>]);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 创建 reactive</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createReactive</span> = (<span class="params">target</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createReactiveObj</span>(target, <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 顶层 reactive</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">shallowReactive</span> = (<span class="params">target</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createReactiveObj</span>(target, <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> <span class="variable">reactive</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">val</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">isReadonly</span> = (<span class="params">val</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> !!(val &amp;&amp; val[<span class="title class_">ReactiveFlags</span>.<span class="property">IS_READONLY</span>]);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 创建 readonly</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createReadonly</span> = (<span class="params">target</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createReactiveObj</span>(target, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 顶层 readonly</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">shallowReadonly</span> = (<span class="params">target</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createReactiveObj</span>(target, <span class="literal">true</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> <span class="variable">proxy</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">val</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">isProxy</span> = (<span class="params">val</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">isReactive</span>(val) || <span class="title function_">isReadonly</span>(val);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> <span class="variable">reactive</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">reactive</span> = (<span class="params">target</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createReactive</span>(target);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> <span class="variable">readonly</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">readonly</span> = (<span class="params">target</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createReadonly</span>(target);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 监听数据变化</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">source</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">callback</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">watch</span> = (<span class="params">source, callback, immediate = <span class="literal">false</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 立刻执行</span></span><br><span class="line">    immediate &amp;&amp; <span class="title function_">callback</span>(<span class="title function_">unref</span>(source), <span class="title function_">unref</span>(source));</span><br><span class="line">    <span class="comment">// array</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(source) &amp;&amp; source.<span class="title function_">every</span>(<span class="function">(<span class="params">s</span>) =&gt;</span> <span class="title function_">isRef</span>(s))) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> source) &#123;</span><br><span class="line">            <span class="comment">// Proxy</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">isProxy</span>(source[i])) &#123;</span><br><span class="line">                <span class="title function_">watch</span>(source[i], <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">const</span> res = source.<span class="title function_">map</span>(<span class="function">(<span class="params">s</span>) =&gt;</span> <span class="title function_">unref</span>(s));</span><br><span class="line">                    <span class="title function_">callback</span>(res, res);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">watch</span>(<span class="function">() =&gt;</span> source.<span class="title function_">map</span>(<span class="function">(<span class="params">s</span>) =&gt;</span> <span class="title function_">unref</span>(s)), callback);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// function</span></span><br><span class="line">    <span class="keyword">if</span> (source <span class="keyword">instanceof</span> <span class="title class_">Function</span>) &#123;</span><br><span class="line">        <span class="title function_">watch</span>(<span class="title function_">watchEffectRef</span>(source), <span class="function">(<span class="params">n, o</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">callback</span>(<span class="title function_">unref</span>(n), <span class="title function_">unref</span>(o));</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Proxy</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">isProxy</span>(source)) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line">            currentSub = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">callback</span>(source, source);</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// sub source</span></span><br><span class="line">            <span class="keyword">const</span> subSource = source[key];</span><br><span class="line">            currentSub = <span class="literal">undefined</span>;</span><br><span class="line">            <span class="title function_">watch</span>(subSource, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">callback</span>(source, source);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Ref</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">isRef</span>(source)) &#123;</span><br><span class="line">        <span class="comment">// Ref.value Proxy</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">isProxy</span>(source.<span class="property">value</span>)) &#123;</span><br><span class="line">            <span class="title function_">watch</span>(source.<span class="property">value</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">callback</span>(<span class="title function_">unref</span>(source), <span class="title function_">unref</span>(source));</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        currentSub = callback;</span><br><span class="line">        <span class="comment">// 收集依赖</span></span><br><span class="line">        <span class="title function_">trackRef</span>(source);</span><br><span class="line">        currentSub = <span class="literal">undefined</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 监听数据变化影响</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">callback</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">watchEffect</span> = (<span class="params">callback</span>) =&gt; &#123;</span><br><span class="line">    currentSub = callback;</span><br><span class="line">    <span class="comment">// 收集依赖</span></span><br><span class="line">    <span class="title function_">callback</span>();</span><br><span class="line">    currentSub = <span class="literal">undefined</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 监听影响 ref</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">refVal</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">callback</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">watchRef</span> = (<span class="params">source, callback</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 收集依赖</span></span><br><span class="line">    <span class="keyword">const</span> effectRes = <span class="title function_">shallowRef</span>(<span class="title function_">callback</span>());</span><br><span class="line">    <span class="comment">// 监听</span></span><br><span class="line">    <span class="title function_">watch</span>(source, <span class="function">() =&gt;</span> (effectRes.<span class="property">value</span> = <span class="title function_">unref</span>(<span class="title function_">callback</span>())));</span><br><span class="line">    <span class="keyword">return</span> effectRes;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 监听影响 ref</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">refVal</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">callback</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">watchEffectRef</span> = (<span class="params">callback</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 收集依赖</span></span><br><span class="line">    <span class="keyword">const</span> effectRes = <span class="title function_">shallowRef</span>(<span class="literal">undefined</span>);</span><br><span class="line">    <span class="comment">// 监听</span></span><br><span class="line">    <span class="title function_">watchEffect</span>(<span class="function">() =&gt;</span> (effectRes.<span class="property">value</span> = <span class="title function_">unref</span>(<span class="title function_">callback</span>())));</span><br><span class="line">    <span class="keyword">return</span> effectRes;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 创建元素节点</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">eleName</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">props</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">attrs</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">children</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createElementNode</span>(<span class="params">tagName, props, attrs, children, options</span>) &#123;</span><br><span class="line">    <span class="comment">// 挂载状态</span></span><br><span class="line">    <span class="keyword">let</span> beforemount = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="comment">// 挂载状态</span></span><br><span class="line">    <span class="keyword">let</span> mounted = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">const</span> &#123; onCreated, beforeCreat, onMounted, beforeMount &#125; = options || &#123;&#125;;</span><br><span class="line">    <span class="comment">// 订阅</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">subscribe</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; onMounted, beforeMount &#125; = e;</span><br><span class="line">        <span class="keyword">if</span> (beforeMount) &#123;</span><br><span class="line">            <span class="title function_">watch</span>(beforemount, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (beforemount.<span class="property">value</span>) &#123;</span><br><span class="line">                    <span class="title function_">beforeMount</span>();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (onMounted) &#123;</span><br><span class="line">            <span class="title function_">watch</span>(mounted, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (mounted.<span class="property">value</span>) &#123;</span><br><span class="line">                    <span class="title function_">onMounted</span>();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 取消订阅</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">unsubscribe</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">        <span class="comment">//懒得写</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 创建元素前</span></span><br><span class="line">    beforeCreat &amp;&amp; <span class="title function_">beforeCreat</span>();</span><br><span class="line">    <span class="comment">// 创建普通元素</span></span><br><span class="line">    <span class="keyword">const</span> ele = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(tagName);</span><br><span class="line">    <span class="comment">// 处理属性</span></span><br><span class="line">    <span class="title function_">handleProps</span>(ele, props);</span><br><span class="line">    <span class="comment">// 处理属性</span></span><br><span class="line">    <span class="title function_">handleAttributes</span>(ele, attrs, subscribe, unsubscribe);</span><br><span class="line">    <span class="comment">// 处理子元素</span></span><br><span class="line">    <span class="title function_">handleChildren</span>(ele, children, subscribe, unsubscribe);</span><br><span class="line">    <span class="comment">// 收集挂载前</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">collectBeforeMount</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        beforemount.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">        beforeMount &amp;&amp; <span class="title function_">beforeMount</span>();</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 收集挂载</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">collectOnMounted</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        mounted.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">        onMounted &amp;&amp; <span class="title function_">onMounted</span>();</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 创建元素后</span></span><br><span class="line">    onCreated &amp;&amp; <span class="title function_">onCreated</span>();</span><br><span class="line">    <span class="keyword">return</span> &#123; ele, <span class="attr">beforeMount</span>: collectBeforeMount, <span class="attr">onMounted</span>: collectOnMounted &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 创建svg元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">tagName</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">props</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">attrs</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">children</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createNSElementNode</span>(<span class="params">tagName, props, attrs, children, options</span>) &#123;</span><br><span class="line">    <span class="comment">// 挂载状态</span></span><br><span class="line">    <span class="keyword">let</span> beforemount = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="comment">// 挂载状态</span></span><br><span class="line">    <span class="keyword">let</span> mounted = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">const</span> &#123; onCreated, beforeCreat, onMounted, beforeMount &#125; = options || &#123;&#125;;</span><br><span class="line">    <span class="comment">// 订阅</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">subscribe</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; onMounted, beforeMount &#125; = e;</span><br><span class="line">        <span class="keyword">if</span> (beforeMount) &#123;</span><br><span class="line">            <span class="title function_">watch</span>(beforemount, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (beforemount.<span class="property">value</span>) &#123;</span><br><span class="line">                    <span class="title function_">beforeMount</span>();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (onMounted) &#123;</span><br><span class="line">            <span class="title function_">watch</span>(mounted, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (mounted.<span class="property">value</span>) &#123;</span><br><span class="line">                    <span class="title function_">onMounted</span>();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 取消订阅</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">unsubscribe</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">        <span class="comment">//懒得写</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 创建元素前</span></span><br><span class="line">    beforeCreat &amp;&amp; <span class="title function_">beforeCreat</span>();</span><br><span class="line">    <span class="comment">// svg元素命名空间</span></span><br><span class="line">    <span class="keyword">const</span> ns = <span class="string">&#x27;http://www.w3.org/2000/svg&#x27;</span>;</span><br><span class="line">    <span class="comment">// 创建svg元素</span></span><br><span class="line">    <span class="keyword">const</span> ele = <span class="variable language_">document</span>.<span class="title function_">createElementNS</span>(ns, tagName);</span><br><span class="line">    <span class="comment">// 处理属性</span></span><br><span class="line">    <span class="title function_">handleProps</span>(ele, props);</span><br><span class="line">    <span class="comment">// 处理属性</span></span><br><span class="line">    <span class="title function_">handleAttributes</span>(ele, attrs, subscribe, unsubscribe);</span><br><span class="line">    <span class="comment">// 处理子元素</span></span><br><span class="line">    <span class="title function_">handleChildren</span>(ele, children, subscribe, unsubscribe);</span><br><span class="line">    <span class="comment">// 收集挂载前</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">collectBeforeMount</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        beforemount.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">        beforeMount &amp;&amp; <span class="title function_">beforeMount</span>();</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 收集挂载</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">collectOnMounted</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        mounted.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">        onMounted &amp;&amp; <span class="title function_">onMounted</span>();</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 创建元素后</span></span><br><span class="line">    onCreated &amp;&amp; <span class="title function_">onCreated</span>();</span><br><span class="line">    <span class="keyword">return</span> &#123; ele, <span class="attr">beforeMount</span>: collectBeforeMount, <span class="attr">onMounted</span>: collectOnMounted &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 处理属性</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">ele</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">props</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleProps</span>(<span class="params">ele, props</span>) &#123;</span><br><span class="line">    <span class="comment">// props属性设置</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> props) &#123;</span><br><span class="line">        <span class="comment">// Ref 属性</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">isRef</span>(props[key])) &#123;</span><br><span class="line">            <span class="keyword">const</span> refVal = props[key];</span><br><span class="line">            <span class="title function_">watchEffect</span>(<span class="function">() =&gt;</span> (ele[key] = refVal.<span class="property">value</span>));</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ele[key] = props[key];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 处理svg属性</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">ele</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">attrs</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleAttributes</span>(<span class="params">ele, attrs, subscribe, unsubscribe</span>) &#123;</span><br><span class="line">    <span class="comment">// 属性存在</span></span><br><span class="line">    <span class="keyword">if</span> (attrs) &#123;</span><br><span class="line">        <span class="comment">// attrs属性设置</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> attrs) &#123;</span><br><span class="line">            <span class="comment">// 处理普通属性</span></span><br><span class="line">            <span class="title function_">handleAttribute</span>(ele, key, attrs[key], subscribe, unsubscribe);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 处理事件选项</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleEventOptions</span>(<span class="params">option</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (option.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> options = &#123;</span><br><span class="line">            <span class="attr">capture</span>: option.<span class="title function_">includes</span>(<span class="string">&#x27;capture&#x27;</span>),</span><br><span class="line">            <span class="attr">once</span>: option.<span class="title function_">includes</span>(<span class="string">&#x27;once&#x27;</span>),</span><br><span class="line">            <span class="attr">passive</span>: option.<span class="title function_">includes</span>(<span class="string">&#x27;passive&#x27;</span>),</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> options;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 处理属性</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">ele</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">key</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">value</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleAttribute</span>(<span class="params">ele, key, value, subscribe, unsubscribe</span>) &#123;</span><br><span class="line">    <span class="comment">// 处理完的key</span></span><br><span class="line">    <span class="keyword">const</span> formatKey = key.<span class="title function_">toLowerCase</span>();</span><br><span class="line">    <span class="comment">// 事件绑定</span></span><br><span class="line">    <span class="keyword">if</span> (formatKey.<span class="title function_">startsWith</span>(<span class="string">&#x27;on&#x27;</span>)) &#123;</span><br><span class="line">        <span class="comment">// 事件监听</span></span><br><span class="line">        <span class="keyword">const</span> [event] = formatKey.<span class="title function_">match</span>(<span class="regexp">/(?&lt;=on).*/</span>);</span><br><span class="line">        <span class="comment">// 事件类型</span></span><br><span class="line">        <span class="keyword">if</span> (event) &#123;</span><br><span class="line">            <span class="keyword">const</span> [eventType, ...option] = event.<span class="title function_">split</span>(<span class="string">&#x27;_&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> options = <span class="title function_">handleEventOptions</span>(option);</span><br><span class="line">            <span class="comment">// Ref 函数</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">isRef</span>(value)) &#123;</span><br><span class="line">                <span class="keyword">const</span> refVal = value;</span><br><span class="line">                <span class="keyword">const</span> refListener = <span class="title function_">watchRef</span>(refVal, <span class="function">() =&gt;</span> refVal.<span class="property">value</span></span><br><span class="line">                    ? <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                        option.<span class="title function_">includes</span>(<span class="string">&#x27;prevent&#x27;</span>) &amp;&amp; e.<span class="title function_">preventDefault</span>();</span><br><span class="line">                        option.<span class="title function_">includes</span>(<span class="string">&#x27;stop&#x27;</span>) &amp;&amp; e.<span class="title function_">stopPropagation</span>();</span><br><span class="line">                        <span class="keyword">const</span> callback = refVal.<span class="property">value</span>;</span><br><span class="line">                        <span class="title function_">callback</span>(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                    : <span class="literal">undefined</span>);</span><br><span class="line">                <span class="comment">// 设置事件监听</span></span><br><span class="line">                refListener.<span class="property">value</span> &amp;&amp;</span><br><span class="line">                    ele.<span class="title function_">addEventListener</span>(eventType, refListener.<span class="property">value</span>, options);</span><br><span class="line">                <span class="comment">// 监听事件变化</span></span><br><span class="line">                <span class="title function_">watch</span>(refListener, <span class="function">(<span class="params">newVal, oldVal</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// 移除旧事件监听</span></span><br><span class="line">                    oldVal &amp;&amp; ele.<span class="title function_">removeEventListener</span>(eventType, oldVal);</span><br><span class="line">                    <span class="comment">// 设置新事件监听</span></span><br><span class="line">                    newVal &amp;&amp; ele.<span class="title function_">addEventListener</span>(eventType, newVal, options);</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 普通函数</span></span><br><span class="line">            <span class="keyword">if</span> (value <span class="keyword">instanceof</span> <span class="title class_">Function</span>) &#123;</span><br><span class="line">                <span class="comment">// 设置事件监听</span></span><br><span class="line">                ele.<span class="title function_">addEventListener</span>(eventType, value, options);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 特殊属性</span></span><br><span class="line">    <span class="keyword">const</span> specificAttrs = [<span class="string">&#x27;checked&#x27;</span>, <span class="string">&#x27;selected&#x27;</span>, <span class="string">&#x27;disabled&#x27;</span>, <span class="string">&#x27;enabled&#x27;</span>];</span><br><span class="line">    <span class="comment">// 特殊 key</span></span><br><span class="line">    <span class="keyword">if</span> (specificAttrs.<span class="title function_">includes</span>(formatKey)) &#123;</span><br><span class="line">        <span class="comment">// Ref</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">isRef</span>(value)) &#123;</span><br><span class="line">            <span class="keyword">const</span> refVal = value;</span><br><span class="line">            <span class="title function_">watchEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (refVal.<span class="property">value</span>) &#123;</span><br><span class="line">                    ele.<span class="title function_">setAttribute</span>(formatKey, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    ele.<span class="title function_">removeAttribute</span>(formatKey);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 普通属性值</span></span><br><span class="line">        <span class="keyword">if</span> (value) &#123;</span><br><span class="line">            ele.<span class="title function_">setAttribute</span>(formatKey, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            ele.<span class="title function_">removeAttribute</span>(formatKey);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ref 属性名</span></span><br><span class="line">    <span class="keyword">if</span> (key === <span class="string">&#x27;ref&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">// Ref</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">isRef</span>(value)) &#123;</span><br><span class="line">            <span class="keyword">const</span> refVal = value;</span><br><span class="line">            subscribe &amp;&amp;</span><br><span class="line">                <span class="title function_">subscribe</span>(&#123;</span><br><span class="line">                    <span class="title function_">onMounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">                        refVal.<span class="property">value</span> = ele;</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Ref 函数</span></span><br><span class="line">        <span class="keyword">if</span> (value <span class="keyword">instanceof</span> <span class="title class_">Function</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> refFn = value;</span><br><span class="line">            subscribe &amp;&amp;</span><br><span class="line">                <span class="title function_">subscribe</span>(&#123;</span><br><span class="line">                    <span class="title function_">onMounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="title function_">refFn</span>(ele);</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// xlink命名空间</span></span><br><span class="line">    <span class="keyword">if</span> (key.<span class="title function_">startsWith</span>(<span class="string">&#x27;xlink:&#x27;</span>)) &#123;</span><br><span class="line">        <span class="comment">// xlink属性命名空间</span></span><br><span class="line">        <span class="keyword">const</span> attrNS = <span class="string">&#x27;http://www.w3.org/1999/xlink&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (value) &#123;</span><br><span class="line">            ele.<span class="title function_">setAttributeNS</span>(attrNS, key, value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            ele.<span class="title function_">removeAttributeNS</span>(attrNS, key);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Ref 属性值</span></span><br><span class="line">    <span class="keyword">if</span> (key &amp;&amp; <span class="title function_">isRef</span>(value)) &#123;</span><br><span class="line">        <span class="keyword">const</span> refVal = value;</span><br><span class="line">        <span class="comment">// 监听影响</span></span><br><span class="line">        <span class="title function_">watchEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            ele.<span class="title function_">setAttribute</span>(key, refVal.<span class="property">value</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 普通属性</span></span><br><span class="line">    <span class="keyword">if</span> (key) &#123;</span><br><span class="line">        <span class="comment">// 普通属性</span></span><br><span class="line">        ele.<span class="title function_">setAttribute</span>(key, value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 处理子元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">ele</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">children</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleChildren</span>(<span class="params">ele, children, subscribe, unsubscribe</span>) &#123;</span><br><span class="line">    <span class="comment">// Ref</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">isRef</span>(children)) &#123;</span><br><span class="line">        <span class="comment">// 注释元素</span></span><br><span class="line">        <span class="keyword">const</span> comment = <span class="variable language_">document</span>.<span class="title function_">createComment</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="comment">// 监听元素变化</span></span><br><span class="line">        <span class="title function_">watch</span>(children, <span class="keyword">async</span> (newEle, oldEle) =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (!newEle &amp;&amp; oldEle) &#123;</span><br><span class="line">                <span class="comment">// Promise</span></span><br><span class="line">                <span class="keyword">if</span> (oldEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> oldEleRes = <span class="keyword">await</span> oldEle;</span><br><span class="line">                    <span class="keyword">if</span> (oldEleRes) &#123;</span><br><span class="line">                        oldEleRes.<span class="title function_">forEach</span>(<span class="function">(<span class="params">ele</span>) =&gt;</span> &#123;</span><br><span class="line">                            unsubscribe &amp;&amp; <span class="title function_">unsubscribe</span>(ele);</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// unPromise</span></span><br><span class="line">                <span class="keyword">if</span> (!(oldEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>)) &#123;</span><br><span class="line">                    oldEle.<span class="title function_">forEach</span>(<span class="function">(<span class="params">ele</span>) =&gt;</span> &#123;</span><br><span class="line">                        unsubscribe &amp;&amp; <span class="title function_">unsubscribe</span>(ele);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                ele.<span class="title function_">replaceChildren</span>(comment);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (newEle) &#123;</span><br><span class="line">                <span class="keyword">if</span> (oldEle) &#123;</span><br><span class="line">                    <span class="comment">// Promise</span></span><br><span class="line">                    <span class="keyword">if</span> (oldEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">                        <span class="keyword">const</span> oldEleRes = <span class="keyword">await</span> oldEle;</span><br><span class="line">                        <span class="keyword">if</span> (oldEleRes) &#123;</span><br><span class="line">                            oldEleRes.<span class="title function_">forEach</span>(<span class="function">(<span class="params">ele</span>) =&gt;</span> &#123;</span><br><span class="line">                                unsubscribe &amp;&amp; <span class="title function_">unsubscribe</span>(ele);</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// unPromise</span></span><br><span class="line">                    <span class="keyword">if</span> (!(oldEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>)) &#123;</span><br><span class="line">                        oldEle.<span class="title function_">forEach</span>(<span class="function">(<span class="params">ele</span>) =&gt;</span> &#123;</span><br><span class="line">                            unsubscribe &amp;&amp; <span class="title function_">unsubscribe</span>(ele);</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// Promise</span></span><br><span class="line">                <span class="keyword">if</span> (newEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> newEleRes = <span class="keyword">await</span> newEle;</span><br><span class="line">                    <span class="keyword">if</span> (newEleRes) &#123;</span><br><span class="line">                        <span class="keyword">const</span> eles = newEleRes.<span class="title function_">map</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (v.<span class="property">beforeMount</span> || v.<span class="property">onMounted</span>) &#123;</span><br><span class="line">                                subscribe &amp;&amp; <span class="title function_">subscribe</span>(v);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">return</span> v.<span class="property">ele</span>;</span><br><span class="line">                        &#125;);</span><br><span class="line">                        ele.<span class="title function_">replaceChildren</span>(<span class="title function_">createElementBlock</span>(eles));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// unPromise</span></span><br><span class="line">                <span class="keyword">const</span> eles = newEle.<span class="title function_">map</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (v.<span class="property">beforeMount</span> || v.<span class="property">onMounted</span>) &#123;</span><br><span class="line">                        subscribe &amp;&amp; <span class="title function_">subscribe</span>(v);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> v.<span class="property">ele</span>;</span><br><span class="line">                &#125;);</span><br><span class="line">                ele.<span class="title function_">replaceChildren</span>(<span class="title function_">createElementBlock</span>(eles));</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// Promise</span></span><br><span class="line">        <span class="keyword">if</span> (children.<span class="property">value</span> <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">            <span class="comment">// 插入注释元素</span></span><br><span class="line">            ele.<span class="title function_">appendChild</span>(comment);</span><br><span class="line">            children.<span class="property">value</span>.<span class="title function_">then</span>(<span class="function">(<span class="params">childrenEle</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (childrenEle) &#123;</span><br><span class="line">                    <span class="keyword">const</span> eles = childrenEle.<span class="title function_">map</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (v.<span class="property">beforeMount</span> || v.<span class="property">onMounted</span>) &#123;</span><br><span class="line">                            subscribe &amp;&amp; <span class="title function_">subscribe</span>(v);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span> v.<span class="property">ele</span>;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    ele.<span class="title function_">replaceChildren</span>(<span class="title function_">createElementBlock</span>(eles));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// unPromise</span></span><br><span class="line">        <span class="keyword">if</span> (children.<span class="property">value</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> eles = children.<span class="property">value</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (v.<span class="property">beforeMount</span> || v.<span class="property">onMounted</span>) &#123;</span><br><span class="line">                    subscribe &amp;&amp; <span class="title function_">subscribe</span>(v);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> v.<span class="property">ele</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">            ele.<span class="title function_">appendChild</span>(<span class="title function_">createElementBlock</span>(eles));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 插入元素</span></span><br><span class="line">        ele.<span class="title function_">appendChild</span>(comment);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Promise</span></span><br><span class="line">    <span class="keyword">if</span> (children <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">        <span class="comment">// 注释元素</span></span><br><span class="line">        <span class="keyword">const</span> comment = <span class="variable language_">document</span>.<span class="title function_">createComment</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="comment">// 插入注释元素</span></span><br><span class="line">        ele.<span class="title function_">appendChild</span>(comment);</span><br><span class="line">        <span class="comment">// 异步替换元素</span></span><br><span class="line">        children.<span class="title function_">then</span>(<span class="function">(<span class="params">childEle</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (childEle) &#123;</span><br><span class="line">                <span class="keyword">const</span> &#123; beforeMount, onMounted &#125; = childEle;</span><br><span class="line">                <span class="keyword">if</span> (beforeMount || onMounted) &#123;</span><br><span class="line">                    subscribe &amp;&amp; <span class="title function_">subscribe</span>(childEle);</span><br><span class="line">                &#125;</span><br><span class="line">                comment.<span class="title function_">replaceWith</span>(childEle.<span class="property">ele</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Array</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(children)) &#123;</span><br><span class="line">        <span class="comment">// 处理过后</span></span><br><span class="line">        <span class="keyword">const</span> resChildren = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> children) &#123;</span><br><span class="line">            <span class="keyword">const</span> child = children[i];</span><br><span class="line">            <span class="comment">// Ref</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">isRef</span>(child)) &#123;</span><br><span class="line">                <span class="comment">// 注释</span></span><br><span class="line">                <span class="keyword">const</span> comment = <span class="variable language_">document</span>.<span class="title function_">createComment</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">                <span class="comment">// 监听影响</span></span><br><span class="line">                <span class="title function_">watch</span>(child, <span class="keyword">async</span> (newEle, oldEle) =&gt; &#123;</span><br><span class="line">                    <span class="comment">// 新元素为空</span></span><br><span class="line">                    <span class="keyword">if</span> (!newEle &amp;&amp; oldEle) &#123;</span><br><span class="line">                        <span class="comment">// Promise</span></span><br><span class="line">                        <span class="keyword">if</span> (oldEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">                            <span class="keyword">const</span> oldEleRes = <span class="keyword">await</span> oldEle;</span><br><span class="line">                            <span class="keyword">if</span> (oldEleRes) &#123;</span><br><span class="line">                                <span class="title function_">handleChangeElement</span>(newEle, oldEleRes, comment, subscribe, unsubscribe);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="title function_">handleChangeElement</span>(newEle, oldEle, comment, subscribe, unsubscribe);</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 旧元素为空</span></span><br><span class="line">                    <span class="keyword">if</span> (newEle &amp;&amp; !oldEle) &#123;</span><br><span class="line">                        <span class="comment">// Promise</span></span><br><span class="line">                        <span class="keyword">if</span> (newEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">                            <span class="keyword">const</span> newEleRes = <span class="keyword">await</span> newEle;</span><br><span class="line">                            <span class="keyword">if</span> (newEleRes) &#123;</span><br><span class="line">                                <span class="title function_">handleChangeElement</span>(newEleRes, oldEle, comment, subscribe, unsubscribe);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="title function_">handleChangeElement</span>(newEle, oldEle, comment, subscribe, unsubscribe);</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 存在</span></span><br><span class="line">                    <span class="keyword">if</span> (newEle &amp;&amp; oldEle) &#123;</span><br><span class="line">                        <span class="comment">// Promise</span></span><br><span class="line">                        <span class="keyword">if</span> (newEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span> &amp;&amp; oldEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">                            <span class="keyword">const</span> newEleRes = <span class="keyword">await</span> newEle;</span><br><span class="line">                            <span class="keyword">const</span> oldEleRes = <span class="keyword">await</span> oldEle;</span><br><span class="line">                            <span class="comment">// 处理元素变化</span></span><br><span class="line">                            <span class="title function_">handleChangeElement</span>(newEleRes, oldEleRes, comment, subscribe, unsubscribe);</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// Promise</span></span><br><span class="line">                        <span class="keyword">if</span> (newEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span> &amp;&amp; !(oldEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>)) &#123;</span><br><span class="line">                            <span class="keyword">const</span> newEleRes = <span class="keyword">await</span> newEle;</span><br><span class="line">                            <span class="comment">// 处理元素变化</span></span><br><span class="line">                            <span class="title function_">handleChangeElement</span>(newEleRes, oldEle, comment, subscribe, unsubscribe);</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// Promise</span></span><br><span class="line">                        <span class="keyword">if</span> (!(newEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &amp;&amp; oldEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">                            <span class="keyword">const</span> oldEleRes = <span class="keyword">await</span> oldEle;</span><br><span class="line">                            <span class="comment">// 处理元素变化</span></span><br><span class="line">                            <span class="title function_">handleChangeElement</span>(newEle, oldEleRes, comment, subscribe, unsubscribe);</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// 非 Promise</span></span><br><span class="line">                        <span class="keyword">if</span> (!(oldEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &amp;&amp; !(newEle <span class="keyword">instanceof</span> <span class="title class_">Promise</span>)) &#123;</span><br><span class="line">                            <span class="comment">// 处理元素变化</span></span><br><span class="line">                            <span class="title function_">handleChangeElement</span>(newEle, oldEle, comment, subscribe, unsubscribe);</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">// Promise</span></span><br><span class="line">                <span class="keyword">if</span> (child.<span class="property">value</span> <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">                    <span class="comment">// 注释</span></span><br><span class="line">                    resChildren[i] = &#123; <span class="attr">ele</span>: comment &#125;;</span><br><span class="line">                    <span class="comment">// 异步替换</span></span><br><span class="line">                    child.<span class="property">value</span>.<span class="title function_">then</span>(<span class="function">(<span class="params">childEle</span>) =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (childEle) &#123;</span><br><span class="line">                            <span class="keyword">const</span> &#123; beforeMount, onMounted &#125; = childEle;</span><br><span class="line">                            <span class="keyword">if</span> (beforeMount || onMounted) &#123;</span><br><span class="line">                                subscribe &amp;&amp; <span class="title function_">subscribe</span>(childEle);</span><br><span class="line">                            &#125;</span><br><span class="line">                            comment.<span class="title function_">replaceWith</span>(childEle.<span class="property">ele</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// unPromise</span></span><br><span class="line">                <span class="keyword">if</span> (child.<span class="property">value</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> &#123; beforeMount, onMounted, ele &#125; = child.<span class="property">value</span>;</span><br><span class="line">                    resChildren[i] = &#123; ele, beforeMount, onMounted &#125;;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                resChildren[i] = &#123; <span class="attr">ele</span>: comment &#125;;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Promise</span></span><br><span class="line">            <span class="keyword">if</span> (child <span class="keyword">instanceof</span> <span class="title class_">Promise</span>) &#123;</span><br><span class="line">                <span class="comment">// 注释</span></span><br><span class="line">                <span class="keyword">const</span> comment = <span class="variable language_">document</span>.<span class="title function_">createComment</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">                resChildren[i] = &#123; <span class="attr">ele</span>: comment &#125;;</span><br><span class="line">                <span class="comment">// 异步替换元素</span></span><br><span class="line">                child.<span class="title function_">then</span>(<span class="function">(<span class="params">childEle</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (childEle) &#123;</span><br><span class="line">                        <span class="keyword">const</span> &#123; beforeMount, onMounted &#125; = childEle;</span><br><span class="line">                        <span class="keyword">if</span> (beforeMount || onMounted) &#123;</span><br><span class="line">                            subscribe &amp;&amp; <span class="title function_">subscribe</span>(childEle);</span><br><span class="line">                        &#125;</span><br><span class="line">                        comment.<span class="title function_">replaceWith</span>(childEle.<span class="property">ele</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 普通元素</span></span><br><span class="line">            <span class="keyword">if</span> (child) &#123;</span><br><span class="line">                <span class="keyword">const</span> &#123; beforeMount, onMounted, ele &#125; = child;</span><br><span class="line">                resChildren[i] = &#123; ele, beforeMount, onMounted &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> eles = resChildren.<span class="title function_">map</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (v.<span class="property">beforeMount</span> || v.<span class="property">onMounted</span>) &#123;</span><br><span class="line">                subscribe &amp;&amp; <span class="title function_">subscribe</span>(v);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> v.<span class="property">ele</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 插入元素</span></span><br><span class="line">        ele.<span class="title function_">appendChild</span>(<span class="title function_">createElementBlock</span>(eles));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 普通元素</span></span><br><span class="line">    <span class="keyword">if</span> (children) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; beforeMount, onMounted &#125; = children;</span><br><span class="line">        <span class="keyword">if</span> (beforeMount || onMounted) &#123;</span><br><span class="line">            subscribe &amp;&amp; <span class="title function_">subscribe</span>(children);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 插入元素</span></span><br><span class="line">        ele.<span class="title function_">appendChild</span>(children.<span class="property">ele</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 元素变化</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">newEle</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">oldEle</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">comment</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleChangeElement</span>(<span class="params">newEle, oldEle, comment, subscribe, unsubscribe</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (newEle &amp;&amp; oldEle) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; beforeMount, onMounted &#125; = newEle;</span><br><span class="line">        <span class="keyword">if</span> (beforeMount || onMounted) &#123;</span><br><span class="line">            subscribe &amp;&amp; <span class="title function_">subscribe</span>(newEle);</span><br><span class="line">        &#125;</span><br><span class="line">        oldEle.<span class="property">ele</span>.<span class="title function_">replaceWith</span>(newEle.<span class="property">ele</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (newEle &amp;&amp; !oldEle) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; beforeMount, onMounted &#125; = newEle;</span><br><span class="line">        <span class="keyword">if</span> (beforeMount || onMounted) &#123;</span><br><span class="line">            subscribe &amp;&amp; <span class="title function_">subscribe</span>(newEle);</span><br><span class="line">        &#125;</span><br><span class="line">        comment.<span class="title function_">replaceWith</span>(newEle.<span class="property">ele</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!newEle &amp;&amp; oldEle) &#123;</span><br><span class="line">        unsubscribe &amp;&amp; <span class="title function_">unsubscribe</span>(oldEle);</span><br><span class="line">        oldEle.<span class="property">ele</span>.<span class="title function_">replaceWith</span>(comment);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 创建文字节点</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">text</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createTextNode</span>(<span class="params">text, options</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; onCreated, beforeCreat, onMounted, beforeMount &#125; = options || &#123;&#125;;</span><br><span class="line">    <span class="comment">// 创建元素前</span></span><br><span class="line">    beforeCreat &amp;&amp; <span class="title function_">beforeCreat</span>();</span><br><span class="line">    <span class="comment">// Ref</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">isRef</span>(text)) &#123;</span><br><span class="line">        <span class="comment">// ref</span></span><br><span class="line">        <span class="keyword">const</span> refVal = text;</span><br><span class="line">        <span class="comment">// 元素</span></span><br><span class="line">        <span class="keyword">const</span> ele = <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="comment">// 订阅变化</span></span><br><span class="line">        <span class="title function_">watchEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            ele.<span class="property">data</span> = refVal.<span class="property">value</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 创建元素后</span></span><br><span class="line">        onCreated &amp;&amp; <span class="title function_">onCreated</span>();</span><br><span class="line">        <span class="keyword">return</span> &#123; ele, beforeMount, onMounted &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 创建元素后</span></span><br><span class="line">    onCreated &amp;&amp; <span class="title function_">onCreated</span>();</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">ele</span>: <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="title class_">String</span>(text)), beforeMount, onMounted &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 挂载元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">eleOptions</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">parent</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">mountElement</span>(<span class="params">eleOptions, parent = <span class="variable language_">document</span>.body</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ele, beforeMount, onMounted &#125; = eleOptions;</span><br><span class="line">    <span class="keyword">if</span> (ele) &#123;</span><br><span class="line">        <span class="comment">// 触发挂载前事件</span></span><br><span class="line">        beforeMount &amp;&amp; <span class="title function_">beforeMount</span>();</span><br><span class="line">        parent.<span class="title function_">appendChild</span>(ele);</span><br><span class="line">        <span class="comment">// 挂在后</span></span><br><span class="line">        onMounted &amp;&amp; <span class="title function_">onMounted</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 选择器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">selector</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">$$</span>(<span class="params">selector, parent = <span class="variable language_">document</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Array</span>.<span class="title function_">from</span>(parent.<span class="title function_">querySelectorAll</span>(selector));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 异步选择器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">selector</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">$_</span>(<span class="params">selector, parent = <span class="variable language_">document</span>, timeout</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> selectors = <span class="title class_">Array</span>.<span class="title function_">from</span>(parent.<span class="title function_">querySelectorAll</span>(selector));</span><br><span class="line">            <span class="comment">// 存在元素</span></span><br><span class="line">            <span class="keyword">if</span> (selectors.<span class="property">length</span>) &#123;</span><br><span class="line">                <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">                <span class="title function_">resolve</span>(selectors);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">10</span>);</span><br><span class="line">        <span class="comment">// 超时</span></span><br><span class="line">        <span class="keyword">if</span> (timeout) &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">                <span class="title function_">resolve</span>([]);</span><br><span class="line">            &#125;, timeout);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 创建元素块</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">eles</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createElementBlock</span>(<span class="params">eles</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> fragment = <span class="variable language_">document</span>.<span class="title function_">createDocumentFragment</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> eles) &#123;</span><br><span class="line">        fragment.<span class="title function_">appendChild</span>(eles[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fragment;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 打印日志</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">text</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">log</span>(<span class="params">...text</span>) &#123;</span><br><span class="line">    <span class="title function_">printColor</span>(<span class="string">&#x27;dodgerblue&#x27;</span>, ...text);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 打印错误</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">text</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">error</span>(<span class="params">...text</span>) &#123;</span><br><span class="line">    <span class="title function_">printColor</span>(<span class="string">&#x27;red&#x27;</span>, ...text);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 打印信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">text</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">info</span>(<span class="params">...text</span>) &#123;</span><br><span class="line">    <span class="title function_">printColor</span>(<span class="string">&#x27;yellow&#x27;</span>, ...text);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 打印颜色</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">text</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">color</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">printColor</span>(<span class="params">color, ...text</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> textFormatted = text</span><br><span class="line">        .<span class="title function_">map</span>(<span class="function">(<span class="params">t</span>) =&gt;</span> (<span class="keyword">typeof</span> t === <span class="string">&#x27;object&#x27;</span> ? <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(t) : <span class="title class_">String</span>(t)))</span><br><span class="line">        .<span class="title function_">join</span>(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`%c[<span class="subst">$&#123;formatDateTime()&#125;</span>] %c<span class="subst">$&#123;textFormatted&#125;</span>`</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">`color: <span class="subst">$&#123;color&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> html进度条</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">title</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">percent</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getProgressHTML</span>(<span class="params">title, percent</span>) &#123;</span><br><span class="line">    <span class="comment">// html</span></span><br><span class="line">    <span class="keyword">const</span> progressHTML = <span class="string">`&lt;div</span></span><br><span class="line"><span class="string">    style=&quot;</span></span><br><span class="line"><span class="string">      display: flex;</span></span><br><span class="line"><span class="string">      align-items: center;</span></span><br><span class="line"><span class="string">      justify-content: space-between;</span></span><br><span class="line"><span class="string">      padding: 1px 0;</span></span><br><span class="line"><span class="string">    &quot;</span></span><br><span class="line"><span class="string">  &gt;</span></span><br><span class="line"><span class="string">    &lt;span&gt;<span class="subst">$&#123;title&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;span&gt;<span class="subst">$&#123;getHighlightHTML(percent)&#125;</span> %&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;div</span></span><br><span class="line"><span class="string">    style=&quot;</span></span><br><span class="line"><span class="string">      background: white;</span></span><br><span class="line"><span class="string">      border-radius: 10px;</span></span><br><span class="line"><span class="string">      height: 10px;</span></span><br><span class="line"><span class="string">      border: 1px solid #eee;</span></span><br><span class="line"><span class="string">      flex-shrink: 1;</span></span><br><span class="line"><span class="string">    &quot;</span></span><br><span class="line"><span class="string">  &gt;</span></span><br><span class="line"><span class="string">    &lt;div</span></span><br><span class="line"><span class="string">      style=&quot;</span></span><br><span class="line"><span class="string">        background: linear-gradient(to left, #188fff80, #1890ff);</span></span><br><span class="line"><span class="string">        height: 100%;</span></span><br><span class="line"><span class="string">        width: <span class="subst">$&#123;percent&#125;</span>%;</span></span><br><span class="line"><span class="string">        border-radius: 10px;</span></span><br><span class="line"><span class="string">      &quot;</span></span><br><span class="line"><span class="string">    &gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;`</span>;</span><br><span class="line">    <span class="keyword">return</span> progressHTML;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> html高亮文本</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">text</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getHighlightHTML</span>(<span class="params">text</span>) &#123;</span><br><span class="line">    <span class="comment">// html</span></span><br><span class="line">    <span class="keyword">const</span> highlightHTML = <span class="string">`&lt;span style=&quot;color: #1890ff&quot;&gt;<span class="subst">$&#123;text&#125;</span>&lt;/span&gt;`</span>;</span><br><span class="line">    <span class="keyword">return</span> highlightHTML;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 二维码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">src</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getImgHTML</span>(<span class="params">src</span>) &#123;</span><br><span class="line">    <span class="comment">// 图片</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">     &lt;div style=&quot;padding: 10px 0&quot;&gt;</span></span><br><span class="line"><span class="string">     &lt;div</span></span><br><span class="line"><span class="string">       style=&quot;</span></span><br><span class="line"><span class="string">         display: flex;</span></span><br><span class="line"><span class="string">         justify-content: center;</span></span><br><span class="line"><span class="string">         align-items: center;</span></span><br><span class="line"><span class="string">         padding: 20px;</span></span><br><span class="line"><span class="string">         background: #f7f7f7;</span></span><br><span class="line"><span class="string">         border-radius: 10px;</span></span><br><span class="line"><span class="string">       &quot;</span></span><br><span class="line"><span class="string">     &gt;</span></span><br><span class="line"><span class="string">         &lt;img src=&quot;<span class="subst">$&#123;src&#125;</span>&quot; style=&quot;width:200px;height:200px;&quot; /&gt;</span></span><br><span class="line"><span class="string">       &lt;/div&gt;</span></span><br><span class="line"><span class="string">     &lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 创建模态框</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> options 选项</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createModal</span>(<span class="params">options</span>) &#123;</span><br><span class="line">    <span class="comment">// 配置</span></span><br><span class="line">    <span class="keyword">const</span> &#123; title, subTitle = <span class="string">&#x27;&#x27;</span>, to = <span class="string">&#x27;用户&#x27;</span>, content, type, <span class="keyword">from</span> = <span class="string">&#x27;tech-study.js&#x27;</span>, &#125; = options;</span><br><span class="line">    <span class="comment">// 内容文本</span></span><br><span class="line">    <span class="keyword">let</span> contentText = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(content)) &#123;</span><br><span class="line">        contentText = content.<span class="title function_">map</span>(<span class="function">(<span class="params">ct</span>) =&gt;</span> <span class="string">`&lt;div&gt;<span class="subst">$&#123;ct&#125;</span>&lt;/div&gt;`</span>).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        contentText = content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 日期</span></span><br><span class="line">    <span class="keyword">const</span> dateTime = <span class="title function_">formatDateTime</span>();</span><br><span class="line">    <span class="comment">// 类型html</span></span><br><span class="line">    <span class="keyword">let</span> typeHTML = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (type &amp;&amp; type.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (type === <span class="string">&#x27;info&#x27;</span>) &#123;</span><br><span class="line">            typeHTML = <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;svg</span></span><br><span class="line"><span class="string">       viewBox=&quot;64 64 896 896&quot;</span></span><br><span class="line"><span class="string">       style=&quot;color: #1890ff; width: 18px; height: 18px&quot;</span></span><br><span class="line"><span class="string">       fill=&quot;currentColor&quot;</span></span><br><span class="line"><span class="string">       aria-hidden=&quot;true&quot;</span></span><br><span class="line"><span class="string">     &gt;</span></span><br><span class="line"><span class="string">       &lt;path</span></span><br><span class="line"><span class="string">         d=&quot;M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z&quot;</span></span><br><span class="line"><span class="string">       &gt;&lt;/path&gt;</span></span><br><span class="line"><span class="string">     &lt;/svg&gt;`</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (type === <span class="string">&#x27;warn&#x27;</span>) &#123;</span><br><span class="line">            typeHTML = <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;svg</span></span><br><span class="line"><span class="string">        viewBox=&quot;64 64 896 896&quot;</span></span><br><span class="line"><span class="string">        style=&quot;color: #faad14; width: 18px; height: 18px&quot;</span></span><br><span class="line"><span class="string">        fill=&quot;currentColor&quot;</span></span><br><span class="line"><span class="string">        aria-hidden=&quot;true&quot;</span></span><br><span class="line"><span class="string">      &gt;</span></span><br><span class="line"><span class="string">        &lt;path</span></span><br><span class="line"><span class="string">          d=&quot;M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z&quot;</span></span><br><span class="line"><span class="string">        &gt;&lt;/path&gt;</span></span><br><span class="line"><span class="string">      &lt;/svg&gt;</span></span><br><span class="line"><span class="string">      `</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (type === <span class="string">&#x27;success&#x27;</span>) &#123;</span><br><span class="line">            typeHTML = <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;svg</span></span><br><span class="line"><span class="string">        viewBox=&quot;64 64 896 896&quot;</span></span><br><span class="line"><span class="string">        style=&quot;color: #52c41a; width: 18px; height: 18px&quot;</span></span><br><span class="line"><span class="string">        fill=&quot;currentColor&quot;</span></span><br><span class="line"><span class="string">        aria-hidden=&quot;true&quot;</span></span><br><span class="line"><span class="string">      &gt;</span></span><br><span class="line"><span class="string">        &lt;path</span></span><br><span class="line"><span class="string">          d=&quot;M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z&quot;</span></span><br><span class="line"><span class="string">        &gt;&lt;/path&gt;</span></span><br><span class="line"><span class="string">      &lt;/svg&gt;</span></span><br><span class="line"><span class="string">      `</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (type === <span class="string">&#x27;fail&#x27;</span>) &#123;</span><br><span class="line">            typeHTML = <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;svg</span></span><br><span class="line"><span class="string">        viewBox=&quot;64 64 896 896&quot;</span></span><br><span class="line"><span class="string">        style=&quot;color: #ff4d4f; width: 18px; height: 18px&quot;</span></span><br><span class="line"><span class="string">        fill=&quot;currentColor&quot;</span></span><br><span class="line"><span class="string">        aria-hidden=&quot;true&quot;</span></span><br><span class="line"><span class="string">      &gt;</span></span><br><span class="line"><span class="string">        &lt;path</span></span><br><span class="line"><span class="string">          d=&quot;M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z&quot;</span></span><br><span class="line"><span class="string">        &gt;&lt;/path&gt;</span></span><br><span class="line"><span class="string">      &lt;/svg&gt;</span></span><br><span class="line"><span class="string">      `</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 类型</span></span><br><span class="line">    <span class="keyword">const</span> typeWrap = <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;span</span></span><br><span class="line"><span class="string">    style=&quot;</span></span><br><span class="line"><span class="string">      padding-right: 5px;</span></span><br><span class="line"><span class="string">      display: flex;</span></span><br><span class="line"><span class="string">      justify-content: center;</span></span><br><span class="line"><span class="string">      align-items: center;</span></span><br><span class="line"><span class="string">    &quot;</span></span><br><span class="line"><span class="string">  &gt;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;typeHTML&#125;</span></span></span><br><span class="line"><span class="string">  &lt;/span&gt;</span></span><br><span class="line"><span class="string">  `</span>;</span><br><span class="line">    <span class="comment">// 基础html</span></span><br><span class="line">    <span class="keyword">const</span> baseHTML = <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;div</span></span><br><span class="line"><span class="string">  style=&quot;</span></span><br><span class="line"><span class="string">    padding: 5px;</span></span><br><span class="line"><span class="string">    display: flex;</span></span><br><span class="line"><span class="string">    justify-content: center;</span></span><br><span class="line"><span class="string">    align-items: center;</span></span><br><span class="line"><span class="string">  &quot;</span></span><br><span class="line"><span class="string">&gt;</span></span><br><span class="line"><span class="string">  &lt;div</span></span><br><span class="line"><span class="string">    style=&quot;</span></span><br><span class="line"><span class="string">      background: #ffffff;</span></span><br><span class="line"><span class="string">      box-shadow: 1px 1px 8px -1px #dadada;</span></span><br><span class="line"><span class="string">      padding: 5px 10px;</span></span><br><span class="line"><span class="string">      border-radius: 5px;</span></span><br><span class="line"><span class="string">      width: 100%;</span></span><br><span class="line"><span class="string">    &quot;</span></span><br><span class="line"><span class="string">  &gt;</span></span><br><span class="line"><span class="string">    &lt;div</span></span><br><span class="line"><span class="string">      style=&quot;</span></span><br><span class="line"><span class="string">        display: flex;</span></span><br><span class="line"><span class="string">        justify-content: space-between;</span></span><br><span class="line"><span class="string">        padding: 5px;</span></span><br><span class="line"><span class="string">        border-bottom: 1px solid #eee;</span></span><br><span class="line"><span class="string">      &quot;</span></span><br><span class="line"><span class="string">    &gt;</span></span><br><span class="line"><span class="string">      &lt;div style=&quot;display: flex; justify-content: center; align-items: center&quot;&gt;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;typeWrap&#125;</span></span></span><br><span class="line"><span class="string">        &lt;span style=&quot;padding-left: 5px; font-size: 18px&quot;&gt;<span class="subst">$&#123;title&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;div style=&quot;font-size: 16px; color: #999&quot;&gt;<span class="subst">$&#123;subTitle&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div style=&quot;padding:10px 5px; font-size: 16px; min-height: 80px&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;div&gt;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;getHighlightHTML(to)&#125;</span>, 你好!</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;div style=&quot;line-height: 28px;&quot;&gt;<span class="subst">$&#123;contentText&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div</span></span><br><span class="line"><span class="string">      style=&quot;</span></span><br><span class="line"><span class="string">        font-size: 14px;</span></span><br><span class="line"><span class="string">        padding: 5px;</span></span><br><span class="line"><span class="string">        border-top: 1px solid #eee;</span></span><br><span class="line"><span class="string">        display: flex;</span></span><br><span class="line"><span class="string">        justify-content: space-between;</span></span><br><span class="line"><span class="string">        align-items: center;</span></span><br><span class="line"><span class="string">      &quot;</span></span><br><span class="line"><span class="string">    &gt;</span></span><br><span class="line"><span class="string">      &lt;div style=&quot;color: #999&quot;&gt;<span class="subst">$&#123;dateTime&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;div&gt;</span></span><br><span class="line"><span class="string">        &lt;span&gt;来自&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;span style=&quot;color: #1890ff; padding-left: 1px&quot;&gt;<span class="subst">$&#123;<span class="keyword">from</span>&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">  `</span>;</span><br><span class="line">    <span class="keyword">return</span> baseHTML;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 推送消息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">pushMessage</span>(<span class="params">options</span>) &#123;</span><br><span class="line">    <span class="comment">// 选项</span></span><br><span class="line">    <span class="keyword">const</span> &#123; title, content, template, fromToken, toToken &#125; = options;</span><br><span class="line">    <span class="comment">// 推送</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">pushPlus</span>(fromToken, title, content, template, toToken);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 推送模态框</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">pushModal</span>(<span class="params">options, fromToken, toToken</span>) &#123;</span><br><span class="line">    <span class="comment">// html</span></span><br><span class="line">    <span class="keyword">const</span> html = <span class="title function_">createModal</span>(options);</span><br><span class="line">    <span class="comment">// 推送</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">pushMessage</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;消息提示&#x27;</span>,</span><br><span class="line">        <span class="attr">content</span>: html,</span><br><span class="line">        fromToken,</span><br><span class="line">        toToken,</span><br><span class="line">        <span class="attr">template</span>: <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span> (res &amp;&amp; res.<span class="property">code</span> === <span class="number">200</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 创建随机点</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bounds 范围</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createRandomPoint</span>(<span class="params">bounds</span>) &#123;</span><br><span class="line">    <span class="comment">// 范围</span></span><br><span class="line">    <span class="keyword">const</span> &#123; x, y, width, height &#125; = bounds;</span><br><span class="line">    <span class="comment">// 横坐标</span></span><br><span class="line">    <span class="keyword">const</span> randX = x + <span class="title class_">Math</span>.<span class="title function_">random</span>() * width * <span class="number">0.5</span> + width * <span class="number">0.25</span>;</span><br><span class="line">    <span class="comment">// 纵坐标</span></span><br><span class="line">    <span class="keyword">const</span> randY = y + <span class="title class_">Math</span>.<span class="title function_">random</span>() * height * <span class="number">0.5</span> + height * <span class="number">0.25</span>;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">x</span>: randX,</span><br><span class="line">        <span class="attr">y</span>: randY,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 生成随机路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">start</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">end</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">steps</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createRandomPath</span>(<span class="params">start, end, steps</span>) &#123;</span><br><span class="line">    <span class="comment">// 最小水平增量</span></span><br><span class="line">    <span class="keyword">const</span> minDeltaX = (end.<span class="property">x</span> - start.<span class="property">x</span>) / steps;</span><br><span class="line">    <span class="comment">// 最大垂直增量</span></span><br><span class="line">    <span class="keyword">const</span> maxDeltaY = (end.<span class="property">y</span> - start.<span class="property">y</span>) / steps;</span><br><span class="line">    <span class="keyword">const</span> path = [];</span><br><span class="line">    <span class="comment">// 开始节点</span></span><br><span class="line">    path.<span class="title function_">push</span>(start);</span><br><span class="line">    <span class="comment">// 插入点</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; steps; i++) &#123;</span><br><span class="line">        <span class="comment">// 横坐标</span></span><br><span class="line">        <span class="keyword">const</span> x = path[i].<span class="property">x</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span> + minDeltaX;</span><br><span class="line">        <span class="comment">// 纵坐标</span></span><br><span class="line">        <span class="keyword">const</span> y = path[i].<span class="property">y</span> +</span><br><span class="line">            <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span> * <span class="title class_">Math</span>.<span class="title function_">pow</span>(-<span class="number">1</span>, ~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> + <span class="number">1</span>)) +</span><br><span class="line">            maxDeltaY;</span><br><span class="line">        path.<span class="title function_">push</span>(&#123;</span><br><span class="line">            x,</span><br><span class="line">            y,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 随机数字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateNumAsChar</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>)).<span class="title function_">toString</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 随机大写字母</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateUpperAsChar</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">26</span>) + <span class="number">65</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 随机小写字母</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateLowerAsChar</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">26</span>) + <span class="number">97</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 随机混合字符</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">length</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateMix</span>(<span class="params">length = <span class="number">6</span></span>) &#123;</span><br><span class="line">    <span class="comment">// 随机字符串</span></span><br><span class="line">    <span class="keyword">const</span> randomText = [];</span><br><span class="line">    <span class="comment">// 生成器</span></span><br><span class="line">    <span class="keyword">const</span> typeGenerator = [</span><br><span class="line">        generateNumAsChar,</span><br><span class="line">        generateUpperAsChar,</span><br><span class="line">        generateLowerAsChar,</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">if</span> (length) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">            <span class="comment">// 随机位置</span></span><br><span class="line">            <span class="keyword">const</span> randomIndex = ~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * typeGenerator.<span class="property">length</span>);</span><br><span class="line">            randomText.<span class="title function_">push</span>(typeGenerator[randomIndex]());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> randomText.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 格式化日期时间数字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">num</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">formatDateNum</span>(<span class="params">num</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> num &lt; <span class="number">10</span> ? <span class="string">`0<span class="subst">$&#123;num&#125;</span>`</span> : <span class="string">`<span class="subst">$&#123;num&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 格式化日期时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">time</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span></span></span><br><span class="line"><span class="comment"> * formatDateTime() -&gt; &quot;2022-09-01 08:00:00&quot;</span></span><br><span class="line"><span class="comment"> * formatDateTime(new Date()) -&gt; &quot;2022-09-01 08:00:00&quot;</span></span><br><span class="line"><span class="comment"> * formatDateTime(Date.now()) -&gt; &quot;2022-09-01 08:00:00&quot;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">formatDateTime</span>(<span class="params">time = <span class="built_in">Date</span>.now()</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>(time);</span><br><span class="line">    <span class="keyword">const</span> s = date.<span class="title function_">getSeconds</span>();</span><br><span class="line">    <span class="keyword">const</span> min = date.<span class="title function_">getMinutes</span>();</span><br><span class="line">    <span class="keyword">const</span> h = date.<span class="title function_">getHours</span>();</span><br><span class="line">    <span class="keyword">const</span> d = date.<span class="title function_">getDate</span>();</span><br><span class="line">    <span class="keyword">const</span> m = date.<span class="title function_">getMonth</span>() + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> y = date.<span class="title function_">getFullYear</span>();</span><br><span class="line">    <span class="comment">// 日期</span></span><br><span class="line">    <span class="keyword">const</span> dateText = [y, m, d].<span class="title function_">map</span>(formatDateNum).<span class="title function_">join</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    <span class="comment">// 时间</span></span><br><span class="line">    <span class="keyword">const</span> timeText = [h, min, s].<span class="title function_">map</span>(formatDateNum).<span class="title function_">join</span>(<span class="string">&#x27;:&#x27;</span>);</span><br><span class="line">    <span class="comment">// 日期时间</span></span><br><span class="line">    <span class="keyword">const</span> dateTimeText = <span class="string">`<span class="subst">$&#123;dateText&#125;</span> <span class="subst">$&#123;timeText&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">return</span> dateTimeText;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 格式化时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">time</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span></span></span><br><span class="line"><span class="comment"> * formatTime() -&gt; &quot;08:00:00&quot;</span></span><br><span class="line"><span class="comment"> * formatTime(new Date()) -&gt; &quot;08:00:00&quot;</span></span><br><span class="line"><span class="comment"> * formatTime(Date.now()) -&gt; &quot;08:00:00&quot;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">formatTime</span> = (<span class="params">time = <span class="built_in">Date</span>.now()</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>(time);</span><br><span class="line">    <span class="keyword">const</span> s = date.<span class="title function_">getSeconds</span>();</span><br><span class="line">    <span class="keyword">const</span> min = date.<span class="title function_">getMinutes</span>();</span><br><span class="line">    <span class="keyword">const</span> h = date.<span class="title function_">getHours</span>();</span><br><span class="line">    <span class="comment">// 时间</span></span><br><span class="line">    <span class="keyword">const</span> timeText = [h, min, s].<span class="title function_">map</span>(formatDateNum).<span class="title function_">join</span>(<span class="string">&#x27;:&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> timeText;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 时间已过</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">hour</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">minute</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isLate</span>(<span class="params">&#123; hour, minute &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="keyword">const</span> h = date.<span class="title function_">getHours</span>();</span><br><span class="line">    <span class="keyword">const</span> min = date.<span class="title function_">getMinutes</span>();</span><br><span class="line">    <span class="keyword">return</span> h &gt; hour || (h === hour &amp;&amp; min &gt;= minute);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 时间已过</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">hour</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">minute</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isNow</span>(<span class="params">&#123; hour, minute &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="keyword">const</span> h = date.<span class="title function_">getHours</span>();</span><br><span class="line">    <span class="keyword">const</span> min = date.<span class="title function_">getMinutes</span>();</span><br><span class="line">    <span class="keyword">const</span> s = date.<span class="title function_">getSeconds</span>();</span><br><span class="line">    <span class="keyword">return</span> h === hour &amp;&amp; min === minute &amp;&amp; s === <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 工具函数 */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 设置cookie</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">name</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">value</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">expires</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setCookie</span>(<span class="params">name, value, expires, domain</span>) &#123;</span><br><span class="line">    <span class="comment">// 当前日期</span></span><br><span class="line">    <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="comment">// 过期日期</span></span><br><span class="line">    date.<span class="title function_">setTime</span>(date.<span class="title function_">getTime</span>() + expires);</span><br><span class="line">    <span class="comment">// 设置cookie</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">cookie</span> = <span class="string">`<span class="subst">$&#123;name&#125;</span>=<span class="subst">$&#123;value&#125;</span>;expires=<span class="subst">$&#123;date.toUTCString()&#125;</span>;path=/;domain=<span class="subst">$&#123;domain&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 获取cookie</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">name</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getCookie</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="comment">// 获取当前所有cookie</span></span><br><span class="line">    <span class="keyword">const</span> strCookies = <span class="variable language_">document</span>.<span class="property">cookie</span>;</span><br><span class="line">    <span class="comment">// 截取变成cookie数组</span></span><br><span class="line">    <span class="keyword">const</span> cookieText = strCookies.<span class="title function_">split</span>(<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">    <span class="comment">// 循环每个cookie</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> cookieText) &#123;</span><br><span class="line">        <span class="comment">// 将cookie截取成两部分</span></span><br><span class="line">        <span class="keyword">const</span> item = cookieText[i].<span class="title function_">split</span>(<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">        <span class="comment">// 判断cookie的name 是否相等</span></span><br><span class="line">        <span class="keyword">if</span> (item[<span class="number">0</span>].<span class="title function_">trim</span>() === name) &#123;</span><br><span class="line">            <span class="keyword">return</span> item[<span class="number">1</span>].<span class="title function_">trim</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 删除cookie</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">name</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">delCookie</span>(<span class="params">name, domain</span>) &#123;</span><br><span class="line">    <span class="comment">// 存在cookie</span></span><br><span class="line">    <span class="keyword">const</span> value = <span class="title function_">getCookie</span>(name);</span><br><span class="line">    <span class="keyword">if</span> (value !== <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="title function_">setCookie</span>(name, <span class="string">&#x27;&#x27;</span>, -<span class="number">1</span>, domain);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 防抖</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">callback</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">delay</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">callback, delay</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> timer = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">...args</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (timer !== -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">        &#125;</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            callback.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args);</span><br><span class="line">        &#125;, delay);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 判断是否为移动端</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hasMobile</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> isMobile = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i</span>)) &#123;</span><br><span class="line">        <span class="title function_">log</span>(<span class="string">&#x27;移动端&#x27;</span>);</span><br><span class="line">        isMobile = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientWidth</span> &lt; <span class="number">800</span>) &#123;</span><br><span class="line">        <span class="title function_">log</span>(<span class="string">&#x27;小尺寸设备端&#x27;</span>);</span><br><span class="line">        isMobile = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isMobile;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 等待时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">time</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sleep</span>(<span class="params">time</span>) &#123;</span><br><span class="line">    <span class="comment">// 延时</span></span><br><span class="line">    <span class="keyword">let</span> timeDelay = <span class="title class_">Number</span>(time);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title class_">Number</span>.<span class="title function_">isInteger</span>(timeDelay)) &#123;</span><br><span class="line">        timeDelay = <span class="number">1000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    timeDelay += <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">500</span> - <span class="number">250</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">resolve</span>(<span class="literal">undefined</span>);</span><br><span class="line">        &#125;, timeDelay);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 暂停学习锁</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">studyPauseLock</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 暂停</span></span><br><span class="line">        <span class="keyword">const</span> pauseStudy = <span class="title function_">GM_getValue</span>(<span class="string">&#x27;pauseStudy&#x27;</span>) || <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (pauseStudy) &#123;</span><br><span class="line">            <span class="keyword">const</span> doing = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// 暂停</span></span><br><span class="line">                <span class="keyword">const</span> pauseStudy = <span class="title function_">GM_getValue</span>(<span class="string">&#x27;pauseStudy&#x27;</span>) || <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">if</span> (!pauseStudy) &#123;</span><br><span class="line">                    <span class="comment">// 停止定时器</span></span><br><span class="line">                    <span class="built_in">clearInterval</span>(doing);</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">&#x27;学习等待结束!&#x27;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (callback &amp;&amp; callback <span class="keyword">instanceof</span> <span class="title class_">Function</span>) &#123;</span><br><span class="line">                        <span class="title function_">callback</span>(<span class="literal">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="title function_">resolve</span>(<span class="literal">true</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (callback &amp;&amp; callback <span class="keyword">instanceof</span> <span class="title class_">Function</span>) &#123;</span><br><span class="line">                    <span class="title function_">callback</span>(<span class="literal">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">&#x27;学习等待...&#x27;</span>);</span><br><span class="line">            &#125;, <span class="number">500</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="literal">true</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 加载</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">match</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">callback</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">load</span>(<span class="params">match, callback</span>) &#123;</span><br><span class="line">    <span class="comment">// 链接</span></span><br><span class="line">    <span class="keyword">const</span> &#123; href &#125; = <span class="variable language_">window</span>.<span class="property">location</span>;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 函数</span></span><br><span class="line">        <span class="keyword">if</span> (match <span class="keyword">instanceof</span> <span class="title class_">Function</span>) &#123;</span><br><span class="line">            <span class="title function_">match</span>(href) &amp;&amp; <span class="title function_">callback</span>();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 布尔</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> match === <span class="string">&#x27;boolean&#x27;</span>) &#123;</span><br><span class="line">            match &amp;&amp; <span class="title function_">callback</span>();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 字符正则</span></span><br><span class="line">        <span class="keyword">if</span> (href.<span class="title function_">match</span>(match)) &#123;</span><br><span class="line">            <span class="title function_">callback</span>();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 变量 */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 链接</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> href = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 任务配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> taskConfig = <span class="title function_">reactive</span>([</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;登录&#x27;</span>,</span><br><span class="line">        <span class="attr">currentScore</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">dayMaxScore</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">need</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">status</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">tip</span>: <span class="string">&#x27;每日首次登录积1分。&#x27;</span>,</span><br><span class="line">        <span class="attr">percent</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">score</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">active</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">immutable</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">TaskType</span>.<span class="property">LOGIN</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;文章选读&#x27;</span>,</span><br><span class="line">        <span class="attr">currentScore</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">dayMaxScore</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">need</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">status</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">tip</span>: <span class="string">&#x27;每有效阅读一篇文章积1分，上限6分。有效阅读文章累计1分钟积1分，上限6分。每日上限积12分。&#x27;</span>,</span><br><span class="line">        <span class="attr">percent</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">score</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">active</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">immutable</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">TaskType</span>.<span class="property">READ</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;视听学习&#x27;</span>,</span><br><span class="line">        <span class="attr">currentScore</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">dayMaxScore</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">need</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">status</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">tip</span>: <span class="string">&#x27;每有效一个音频或观看一个视频积1分，上限6分。有效收听音频或观看视频累计1分钟积1分，上限6分。每日上限积12分。&#x27;</span>,</span><br><span class="line">        <span class="attr">percent</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">score</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">active</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">immutable</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">TaskType</span>.<span class="property">WATCH</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;每日答题&#x27;</span>,</span><br><span class="line">        <span class="attr">currentScore</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">dayMaxScore</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">need</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">status</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">tip</span>: <span class="string">&#x27;每组答题每答对1道积1分。每日上限积5分。&#x27;</span>,</span><br><span class="line">        <span class="attr">percent</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">score</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">active</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">immutable</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">TaskType</span>.<span class="property">PRACTICE</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">]);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 设置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> settings = <span class="title function_">reactive</span>([<span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>]);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 总分</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> totalScore = <span class="title function_">ref</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 当天分数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> todayScore = <span class="title function_">ref</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 用户信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> userinfo = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">    <span class="attr">nick</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">avatar</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 进度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> taskStatus = <span class="title function_">ref</span>(<span class="title class_">TaskStatusType</span>.<span class="property">LOADING</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 答题暂停</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> examPause = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> login = <span class="title function_">ref</span>(!!<span class="title function_">getCookie</span>(<span class="string">&#x27;token&#x27;</span>));</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 窗口id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> id = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 定时刷新列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> scheduleList = <span class="title function_">shallowReactive</span>([]);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 推送token</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> pushToken = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 刷新次数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> refreshCount = <span class="title function_">ref</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 窗口关闭</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> frame = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">exist</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">closed</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">ele</span>: <span class="literal">undefined</span>,</span><br><span class="line">    <span class="attr">src</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> page = <span class="title function_">ref</span>(<span class="literal">undefined</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 开始登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> loginQRCodeShow = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 最大选读时长</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> maxRead = <span class="title function_">ref</span>(<span class="number">100</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 最大视听时长</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> maxWatch = <span class="title function_">ref</span>(<span class="number">120</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 运行其他任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> running = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 主题色</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> themeColor = <span class="title function_">ref</span>(<span class="string">&#x27;#fa3333&#x27;</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>  考试类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">ExamType</span>;</span><br><span class="line">(<span class="keyword">function</span> (<span class="params">ExamType</span>) &#123;</span><br><span class="line">    <span class="title class_">ExamType</span>[<span class="title class_">ExamType</span>[<span class="string">&quot;PRACTICE&quot;</span>] = <span class="number">0</span>] = <span class="string">&quot;PRACTICE&quot;</span>;</span><br><span class="line">    <span class="title class_">ExamType</span>[<span class="title class_">ExamType</span>[<span class="string">&quot;PAPER&quot;</span>] = <span class="number">1</span>] = <span class="string">&quot;PAPER&quot;</span>;</span><br><span class="line">&#125;)(<span class="title class_">ExamType</span> || (<span class="title class_">ExamType</span> = &#123;&#125;));</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 获取答题按钮</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getNextButton</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 答题按钮</span></span><br><span class="line">            <span class="keyword">const</span> nextAll = $$(<span class="string">&#x27;.ant-btn&#x27;</span>).<span class="title function_">filter</span>(<span class="function">(<span class="params">next</span>) =&gt;</span> next.<span class="property">innerText</span>);</span><br><span class="line">            <span class="keyword">if</span> (nextAll.<span class="property">length</span>) &#123;</span><br><span class="line">                <span class="comment">// 停止定时器</span></span><br><span class="line">                <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">                <span class="keyword">if</span> (nextAll.<span class="property">length</span> === <span class="number">2</span>) &#123;</span><br><span class="line">                    <span class="title function_">resolve</span>(nextAll[<span class="number">1</span>]);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_">resolve</span>(nextAll[<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">500</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 处理滑动验证</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleSlideVerify</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">async</span> (resolve) =&gt; &#123;</span><br><span class="line">        <span class="comment">// 滑动验证</span></span><br><span class="line">        <span class="keyword">const</span> mask = $$(<span class="string">&#x27;#nc_mask&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span> (mask &amp;&amp; <span class="title function_">getComputedStyle</span>(mask).<span class="property">display</span> !== <span class="string">&#x27;none&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// 创建提示</span></span><br><span class="line">            <span class="title function_">createTip</span>(<span class="string">&#x27;等待滑动验证&#x27;</span>);</span><br><span class="line">            <span class="comment">// 提高层级</span></span><br><span class="line">            mask.<span class="property">style</span>.<span class="property">zIndex</span> = <span class="string">&#x27;999&#x27;</span>;</span><br><span class="line">            <span class="comment">// 轨道</span></span><br><span class="line">            <span class="keyword">const</span> track = (<span class="keyword">await</span> $_(<span class="string">&#x27;.nc_scale&#x27;</span>, <span class="literal">undefined</span>, <span class="number">3000</span>))[<span class="number">0</span>];</span><br><span class="line">            <span class="comment">// 滑块</span></span><br><span class="line">            <span class="keyword">const</span> slide = (<span class="keyword">await</span> $_(<span class="string">&#x27;.btn_slide&#x27;</span>, <span class="literal">undefined</span>, <span class="number">3000</span>))[<span class="number">0</span>];</span><br><span class="line">            <span class="comment">// 延时</span></span><br><span class="line">            <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">2000</span>);</span><br><span class="line">            <span class="comment">// 矩形范围</span></span><br><span class="line">            <span class="keyword">const</span> rectTrack = track.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line">            <span class="comment">// 矩形范围</span></span><br><span class="line">            <span class="keyword">const</span> rectSlide = slide.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line">            <span class="comment">// 窗口</span></span><br><span class="line">            <span class="keyword">const</span> <span class="variable language_">window</span> = unsafeWindow;</span><br><span class="line">            <span class="comment">// 范围内随机起点</span></span><br><span class="line">            <span class="keyword">const</span> start = <span class="title function_">createRandomPoint</span>(rectSlide);</span><br><span class="line">            <span class="comment">// 终点</span></span><br><span class="line">            <span class="keyword">const</span> end = &#123;</span><br><span class="line">                <span class="attr">x</span>: rectTrack.<span class="property">x</span> + rectTrack.<span class="property">width</span>,</span><br><span class="line">                <span class="attr">y</span>: rectTrack.<span class="property">y</span> + rectTrack.<span class="property">height</span> / <span class="number">2</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// 路径</span></span><br><span class="line">            <span class="keyword">const</span> path = <span class="title function_">createRandomPath</span>(start, end, <span class="number">10</span>);</span><br><span class="line">            <span class="comment">// 移动端</span></span><br><span class="line">            <span class="keyword">const</span> mobile = <span class="title function_">hasMobile</span>();</span><br><span class="line">            <span class="keyword">if</span> (mobile) &#123;</span><br><span class="line">                slide.<span class="property">style</span>.<span class="property">touchAction</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">                <span class="keyword">const</span> touchstartTouch = <span class="keyword">new</span> <span class="title class_">Touch</span>(&#123;</span><br><span class="line">                    <span class="attr">identifier</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">target</span>: slide,</span><br><span class="line">                    <span class="attr">clientX</span>: path[<span class="number">0</span>].<span class="property">x</span>,</span><br><span class="line">                    <span class="attr">clientY</span>: path[<span class="number">0</span>].<span class="property">y</span>,</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="keyword">const</span> touchstartList = [touchstartTouch];</span><br><span class="line">                <span class="comment">// 开始触摸</span></span><br><span class="line">                <span class="keyword">const</span> touchstart = <span class="keyword">new</span> <span class="title class_">TouchEvent</span>(<span class="string">&#x27;touchstart&#x27;</span>, &#123;</span><br><span class="line">                    <span class="attr">targetTouches</span>: touchstartList,</span><br><span class="line">                    <span class="attr">touches</span>: touchstartList,</span><br><span class="line">                    <span class="attr">changedTouches</span>: touchstartList,</span><br><span class="line">                    <span class="attr">view</span>: <span class="variable language_">window</span>,</span><br><span class="line">                    <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">                &#125;);</span><br><span class="line">                slide.<span class="title function_">dispatchEvent</span>(touchstart);</span><br><span class="line">                <span class="comment">// 触摸滑动</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> path) &#123;</span><br><span class="line">                    <span class="keyword">const</span> touchmoveTouch = <span class="keyword">new</span> <span class="title class_">Touch</span>(&#123;</span><br><span class="line">                        <span class="attr">identifier</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">target</span>: slide,</span><br><span class="line">                        <span class="attr">clientX</span>: path[i].<span class="property">x</span>,</span><br><span class="line">                        <span class="attr">clientY</span>: path[i].<span class="property">y</span>,</span><br><span class="line">                    &#125;);</span><br><span class="line">                    <span class="keyword">const</span> touchmoveList = [touchmoveTouch];</span><br><span class="line">                    <span class="keyword">const</span> touchmove = <span class="keyword">new</span> <span class="title class_">TouchEvent</span>(<span class="string">&#x27;touchmove&#x27;</span>, &#123;</span><br><span class="line">                        <span class="attr">targetTouches</span>: touchmoveList,</span><br><span class="line">                        <span class="attr">touches</span>: touchmoveList,</span><br><span class="line">                        <span class="attr">changedTouches</span>: touchmoveList,</span><br><span class="line">                        <span class="attr">view</span>: <span class="variable language_">window</span>,</span><br><span class="line">                        <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">                    &#125;);</span><br><span class="line">                    slide.<span class="title function_">dispatchEvent</span>(touchmove);</span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">10</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">const</span> touchendTouch = <span class="keyword">new</span> <span class="title class_">Touch</span>(&#123;</span><br><span class="line">                    <span class="attr">identifier</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">target</span>: slide,</span><br><span class="line">                    <span class="attr">clientX</span>: path[path.<span class="property">length</span> - <span class="number">1</span>].<span class="property">x</span>,</span><br><span class="line">                    <span class="attr">clientY</span>: path[path.<span class="property">length</span> - <span class="number">1</span>].<span class="property">y</span>,</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">// 触摸结束</span></span><br><span class="line">                <span class="keyword">const</span> touchendList = [touchendTouch];</span><br><span class="line">                <span class="comment">// 开始触摸</span></span><br><span class="line">                <span class="keyword">const</span> touchend = <span class="keyword">new</span> <span class="title class_">TouchEvent</span>(<span class="string">&#x27;touchend&#x27;</span>, &#123;</span><br><span class="line">                    <span class="attr">targetTouches</span>: [],</span><br><span class="line">                    <span class="attr">touches</span>: [],</span><br><span class="line">                    <span class="attr">changedTouches</span>: touchendList,</span><br><span class="line">                    <span class="attr">view</span>: <span class="variable language_">window</span>,</span><br><span class="line">                    <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">                &#125;);</span><br><span class="line">                slide.<span class="title function_">dispatchEvent</span>(touchend);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 鼠标按下</span></span><br><span class="line">                <span class="keyword">const</span> mousedown = <span class="keyword">new</span> <span class="title class_">MouseEvent</span>(<span class="string">&#x27;mousedown&#x27;</span>, &#123;</span><br><span class="line">                    <span class="attr">clientX</span>: path[<span class="number">0</span>].<span class="property">x</span>,</span><br><span class="line">                    <span class="attr">clientY</span>: path[<span class="number">0</span>].<span class="property">y</span>,</span><br><span class="line">                    <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">view</span>: <span class="variable language_">window</span>,</span><br><span class="line">                &#125;);</span><br><span class="line">                slide.<span class="title function_">dispatchEvent</span>(mousedown);</span><br><span class="line">                <span class="comment">// 鼠标滑动</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> path) &#123;</span><br><span class="line">                    <span class="keyword">const</span> mousemove = <span class="keyword">new</span> <span class="title class_">MouseEvent</span>(<span class="string">&#x27;mousemove&#x27;</span>, &#123;</span><br><span class="line">                        <span class="attr">clientX</span>: path[i].<span class="property">x</span>,</span><br><span class="line">                        <span class="attr">clientY</span>: path[i].<span class="property">y</span>,</span><br><span class="line">                        <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">                        <span class="attr">view</span>: <span class="variable language_">window</span>,</span><br><span class="line">                    &#125;);</span><br><span class="line">                    slide.<span class="title function_">dispatchEvent</span>(mousemove);</span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">10</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 鼠标抬起</span></span><br><span class="line">                <span class="keyword">const</span> mouseup = <span class="keyword">new</span> <span class="title class_">MouseEvent</span>(<span class="string">&#x27;mouseup&#x27;</span>, &#123;</span><br><span class="line">                    <span class="attr">clientX</span>: path[path.<span class="property">length</span> - <span class="number">1</span>].<span class="property">x</span>,</span><br><span class="line">                    <span class="attr">clientY</span>: path[path.<span class="property">length</span> - <span class="number">1</span>].<span class="property">y</span>,</span><br><span class="line">                    <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">view</span>: <span class="variable language_">window</span>,</span><br><span class="line">                &#125;);</span><br><span class="line">                slide.<span class="title function_">dispatchEvent</span>(mouseup);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 创建提示</span></span><br><span class="line">            <span class="title function_">createTip</span>(<span class="string">&#x27;滑动验证完成!&#x27;</span>);</span><br><span class="line">            <span class="comment">// 定时器</span></span><br><span class="line">            <span class="keyword">const</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// 滑动验证</span></span><br><span class="line">                <span class="keyword">const</span> mask = $$(<span class="string">&#x27;#nc_mask&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">if</span> (!mask || <span class="title function_">getComputedStyle</span>(mask).<span class="property">display</span> === <span class="string">&#x27;none&#x27;</span>) &#123;</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">&#x27;滑动验证成功!&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 创建提示</span></span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">&#x27;滑动验证成功!&#x27;</span>);</span><br><span class="line">                    <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">                    <span class="title function_">resolve</span>(<span class="literal">true</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_">resolve</span>(<span class="literal">false</span>);</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">&#x27;滑动验证失败!&#x27;</span>);</span><br><span class="line">                <span class="comment">// 创建提示</span></span><br><span class="line">                <span class="title function_">createTip</span>(<span class="string">&#x27;滑动验证失败!&#x27;</span>);</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="literal">true</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 处理选项</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleChoiceBtn</span>(<span class="params">answers</span>) &#123;</span><br><span class="line">    <span class="comment">// 选项按钮</span></span><br><span class="line">    <span class="keyword">const</span> allBtns = $$(<span class="string">&#x27;.q-answer&#x27;</span>);</span><br><span class="line">    <span class="comment">// 答案存在</span></span><br><span class="line">    <span class="keyword">if</span> (answers.<span class="property">length</span> &amp;&amp; allBtns.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="comment">// 作答</span></span><br><span class="line">        <span class="keyword">return</span> answers.<span class="title function_">every</span>(<span class="function">(<span class="params">answer</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 答案存在</span></span><br><span class="line">            <span class="keyword">if</span> (answer &amp;&amp; answer.<span class="property">length</span>) &#123;</span><br><span class="line">                <span class="comment">// 包含答案最短长度选项</span></span><br><span class="line">                <span class="keyword">let</span> minLengthChoice;</span><br><span class="line">                <span class="comment">// 遍历</span></span><br><span class="line">                allBtns.<span class="title function_">forEach</span>(<span class="function">(<span class="params">choice</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// 选项文本</span></span><br><span class="line">                    <span class="keyword">const</span> choiceText = choice.<span class="property">innerText</span>.<span class="title function_">trim</span>();</span><br><span class="line">                    <span class="comment">// 无符号选项文本</span></span><br><span class="line">                    <span class="keyword">const</span> unsignedChoiceText = choiceText.<span class="title function_">replaceAll</span>(<span class="regexp">/[、，,。 ]/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 无符号答案</span></span><br><span class="line">                    <span class="keyword">const</span> unsignedAnswer = answer.<span class="title function_">replaceAll</span>(<span class="regexp">/[、，,。 ]/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 包含答案</span></span><br><span class="line">                    <span class="keyword">if</span> (choiceText === answer ||</span><br><span class="line">                        choiceText.<span class="title function_">includes</span>(answer) ||</span><br><span class="line">                        answer.<span class="title function_">includes</span>(choiceText) ||</span><br><span class="line">                        unsignedChoiceText.<span class="title function_">includes</span>(unsignedAnswer)) &#123;</span><br><span class="line">                        <span class="comment">// 最小长度选项有值</span></span><br><span class="line">                        <span class="keyword">if</span> (minLengthChoice) &#123;</span><br><span class="line">                            <span class="comment">// 最短长度选项与当前选项比较长度</span></span><br><span class="line">                            <span class="keyword">if</span> (minLengthChoice.<span class="property">innerText</span>.<span class="property">length</span> &gt; choiceText.<span class="property">length</span>) &#123;</span><br><span class="line">                                minLengthChoice = choice;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="comment">// 最小长度选项赋值</span></span><br><span class="line">                            minLengthChoice = choice;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">// 存在选项</span></span><br><span class="line">                <span class="keyword">if</span> (minLengthChoice) &#123;</span><br><span class="line">                    <span class="comment">// 选择</span></span><br><span class="line">                    <span class="keyword">if</span> (!minLengthChoice.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;chosen&#x27;</span>)) &#123;</span><br><span class="line">                        minLengthChoice.<span class="title function_">click</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 随机处理单选</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleSingleChoiceRand</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 选项按钮</span></span><br><span class="line">    <span class="keyword">const</span> allBtns = $$(<span class="string">&#x27;.q-answer&#x27;</span>);</span><br><span class="line">    <span class="comment">// 按钮存在</span></span><br><span class="line">    <span class="keyword">if</span> (allBtns.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> index = ~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * allBtns.<span class="property">length</span>);</span><br><span class="line">        <span class="keyword">const</span> randBtn = allBtns[index];</span><br><span class="line">        <span class="comment">// 选择</span></span><br><span class="line">        <span class="keyword">if</span> (!randBtn.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;chosen&#x27;</span>)) &#123;</span><br><span class="line">            randBtn.<span class="title function_">click</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 随机处理多选</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleMutiplyChoiceRand</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 选项按钮</span></span><br><span class="line">    <span class="keyword">const</span> allBtns = $$(<span class="string">&#x27;.q-answer&#x27;</span>);</span><br><span class="line">    <span class="comment">// 按钮存在</span></span><br><span class="line">    <span class="keyword">if</span> (allBtns.<span class="property">length</span>) &#123;</span><br><span class="line">        allBtns.<span class="title function_">forEach</span>(<span class="function">(<span class="params">allBtn</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 选择</span></span><br><span class="line">            <span class="keyword">if</span> (!allBtn.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;chosen&#x27;</span>)) &#123;</span><br><span class="line">                allBtn.<span class="title function_">click</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 处理填空</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleBlankInput</span> = (<span class="params">answers</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 所有填空</span></span><br><span class="line">    <span class="keyword">const</span> blanks = $$(<span class="string">&#x27;.blank&#x27;</span>);</span><br><span class="line">    <span class="comment">// 答案存在</span></span><br><span class="line">    <span class="keyword">if</span> (blanks.<span class="property">length</span> &amp;&amp; answers.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="comment">// 填空数量和答案数量一致</span></span><br><span class="line">        <span class="keyword">if</span> (answers.<span class="property">length</span> === blanks.<span class="property">length</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> answers.<span class="title function_">every</span>(<span class="function">(<span class="params">answer, i</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// 答案存在</span></span><br><span class="line">                <span class="keyword">if</span> (answer &amp;&amp; answer.<span class="property">length</span>) &#123;</span><br><span class="line">                    <span class="comment">// 输入事件</span></span><br><span class="line">                    <span class="keyword">const</span> inputEvent = <span class="keyword">new</span> <span class="title class_">Event</span>(<span class="string">&#x27;input&#x27;</span>, &#123;</span><br><span class="line">                        <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">                    &#125;);</span><br><span class="line">                    <span class="comment">// 设置答案</span></span><br><span class="line">                    blanks[i].<span class="title function_">setAttribute</span>(<span class="string">&#x27;value&#x27;</span>, answer);</span><br><span class="line">                    <span class="comment">// 触发输入input</span></span><br><span class="line">                    blanks[i].<span class="title function_">dispatchEvent</span>(inputEvent);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 填空数量为1和提示数量大于1</span></span><br><span class="line">        <span class="keyword">if</span> (blanks.<span class="property">length</span> === <span class="number">1</span> &amp;&amp; answers.<span class="property">length</span> &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 直接将所有答案整合填进去</span></span><br><span class="line">            <span class="keyword">const</span> answer = answers.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">            <span class="comment">// 答案存在</span></span><br><span class="line">            <span class="keyword">if</span> (answer &amp;&amp; answer.<span class="property">length</span>) &#123;</span><br><span class="line">                <span class="comment">// 输入事件</span></span><br><span class="line">                <span class="keyword">const</span> inputEvent = <span class="keyword">new</span> <span class="title class_">Event</span>(<span class="string">&#x27;input&#x27;</span>, &#123;</span><br><span class="line">                    <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">// 设置答案</span></span><br><span class="line">                blanks[<span class="number">0</span>].<span class="title function_">setAttribute</span>(<span class="string">&#x27;value&#x27;</span>, answer);</span><br><span class="line">                <span class="comment">// 触发输入input</span></span><br><span class="line">                blanks[<span class="number">0</span>].<span class="title function_">dispatchEvent</span>(inputEvent);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 处理填空随机</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleBlankInputRand</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 所有填空</span></span><br><span class="line">    <span class="keyword">const</span> blanks = $$(<span class="string">&#x27;.blank&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (blanks.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="comment">// 输入事件</span></span><br><span class="line">        <span class="keyword">const</span> inputEvent = <span class="keyword">new</span> <span class="title class_">Event</span>(<span class="string">&#x27;input&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        blanks.<span class="title function_">forEach</span>(<span class="function">(<span class="params">blank</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 设置答案</span></span><br><span class="line">            blank.<span class="title function_">setAttribute</span>(<span class="string">&#x27;value&#x27;</span>, <span class="string">&#x27;答案&#x27;</span>);</span><br><span class="line">            <span class="comment">// 触发输入input</span></span><br><span class="line">            blank.<span class="title function_">dispatchEvent</span>(inputEvent);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 暂停锁</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">examPauseLock</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 学习暂停</span></span><br><span class="line">        <span class="keyword">const</span> pauseStudy = (<span class="title function_">GM_getValue</span>(<span class="string">&#x27;pauseStudy&#x27;</span>) || <span class="literal">false</span>);</span><br><span class="line">        <span class="comment">// 全局暂停</span></span><br><span class="line">        <span class="keyword">if</span> (pauseStudy) &#123;</span><br><span class="line">            examPause.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 暂停</span></span><br><span class="line">        <span class="keyword">if</span> (examPause.<span class="property">value</span>) &#123;</span><br><span class="line">            <span class="comment">// 创建提示</span></span><br><span class="line">            <span class="title function_">createTip</span>(<span class="string">&#x27;已暂停, 手动开启自动答题! &#x27;</span>, <span class="number">10</span>);</span><br><span class="line">            <span class="keyword">const</span> doing = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!examPause.<span class="property">value</span>) &#123;</span><br><span class="line">                    <span class="comment">// 停止定时器</span></span><br><span class="line">                    <span class="built_in">clearInterval</span>(doing);</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">&#x27;答题等待结束!&#x27;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (callback &amp;&amp; callback <span class="keyword">instanceof</span> <span class="title class_">Function</span>) &#123;</span><br><span class="line">                        <span class="comment">// 创建提示</span></span><br><span class="line">                        <span class="title function_">createTip</span>(<span class="string">&#x27;已开启, 自动答题!&#x27;</span>);</span><br><span class="line">                        <span class="title function_">callback</span>(<span class="literal">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="title function_">resolve</span>(<span class="literal">true</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (callback &amp;&amp; callback <span class="keyword">instanceof</span> <span class="title class_">Function</span>) &#123;</span><br><span class="line">                    <span class="title function_">callback</span>(<span class="literal">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">&#x27;答题等待...&#x27;</span>);</span><br><span class="line">            &#125;, <span class="number">500</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="literal">true</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 答题</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">doingExam</span>(<span class="params">type</span>) &#123;</span><br><span class="line">    <span class="comment">// 下一个按钮</span></span><br><span class="line">    <span class="keyword">let</span> nextButton;</span><br><span class="line">    <span class="comment">// 下一个文本</span></span><br><span class="line">    <span class="keyword">let</span> nextText;</span><br><span class="line">    <span class="comment">// 保存答案</span></span><br><span class="line">    <span class="keyword">let</span> shouldSaveAnswer = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="comment">// 先等等再开始做题</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">2500</span>);</span><br><span class="line">        <span class="comment">// 暂停</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">examPauseLock</span>();</span><br><span class="line">        <span class="comment">// 获取下一个按钮</span></span><br><span class="line">        nextButton = <span class="keyword">await</span> <span class="title function_">getNextButton</span>();</span><br><span class="line">        <span class="comment">// 下一个文本</span></span><br><span class="line">        nextText = nextButton.<span class="property">innerText</span>.<span class="title function_">replaceAll</span>(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="comment">// 结束</span></span><br><span class="line">        <span class="keyword">const</span> finish = [<span class="string">&#x27;再练一次&#x27;</span>, <span class="string">&#x27;再来一组&#x27;</span>, <span class="string">&#x27;查看解析&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (finish.<span class="title function_">includes</span>(nextButton.<span class="property">innerText</span>)) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 点击提示</span></span><br><span class="line">        $$(<span class="string">&#x27;.tips&#x27;</span>)[<span class="number">0</span>]?.<span class="title function_">click</span>();</span><br><span class="line">        <span class="comment">// 所有提示</span></span><br><span class="line">        <span class="keyword">const</span> allTips = $$(<span class="string">&#x27;.line-feed font[color]&#x27;</span>);</span><br><span class="line">        <span class="comment">// 答案</span></span><br><span class="line">        <span class="keyword">const</span> answers = allTips.<span class="title function_">map</span>(<span class="function">(<span class="params">tip</span>) =&gt;</span> tip.<span class="property">innerText</span>.<span class="title function_">trim</span>());</span><br><span class="line">        <span class="comment">// 获取题目的文本内容</span></span><br><span class="line">        <span class="keyword">const</span> question = $$(<span class="string">&#x27;.q-body&#x27;</span>)[<span class="number">0</span>].<span class="property">innerText</span>;</span><br><span class="line">        <span class="comment">// 等待一段时间</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">1500</span>);</span><br><span class="line">        <span class="comment">// 暂停</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">examPauseLock</span>();</span><br><span class="line">        <span class="comment">// 选项按钮</span></span><br><span class="line">        <span class="keyword">const</span> allBtns = $$(<span class="string">&#x27;.q-answer&#x27;</span>);</span><br><span class="line">        <span class="comment">// 所有填空</span></span><br><span class="line">        <span class="keyword">const</span> blanks = $$(<span class="string">&#x27;input[type=text][class=blank]&#x27;</span>);</span><br><span class="line">        <span class="comment">// 问题类型</span></span><br><span class="line">        <span class="keyword">const</span> questionType = ($$(<span class="string">&#x27;.q-header&#x27;</span>)[<span class="number">0</span>].<span class="property">innerText</span>.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">3</span>));</span><br><span class="line">        <span class="comment">// 暂停</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">examPauseLock</span>();</span><br><span class="line">        <span class="comment">// 题型分类作答</span></span><br><span class="line">        <span class="keyword">switch</span> (questionType) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;填空题&#x27;</span>: &#123;</span><br><span class="line">                <span class="comment">// 根据提示作答</span></span><br><span class="line">                <span class="keyword">if</span> (answers.<span class="property">length</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> res = <span class="title function_">handleBlankInput</span>(answers);</span><br><span class="line">                    <span class="comment">// 成功</span></span><br><span class="line">                    <span class="keyword">if</span> (res) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 创建提示</span></span><br><span class="line">                <span class="title function_">createTip</span>(<span class="string">&#x27;答案异常, 尝试网络题库获取!&#x27;</span>);</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">&#x27;正在获取答案...&#x27;</span>);</span><br><span class="line">                <span class="comment">// 尝试题库获取</span></span><br><span class="line">                <span class="keyword">const</span> answersNetwork = <span class="keyword">await</span> <span class="title function_">getAnswer</span>(question);</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">`获取答案<span class="subst">$&#123;answersNetwork.length ? <span class="string">&#x27;成功&#x27;</span> : <span class="string">&#x27;失败&#x27;</span>&#125;</span>!`</span>, &#123;</span><br><span class="line">                    question,</span><br><span class="line">                    answersNetwork,</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">// 根据题库作答</span></span><br><span class="line">                <span class="keyword">if</span> (answersNetwork.<span class="property">length</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> res = <span class="title function_">handleBlankInput</span>(answersNetwork);</span><br><span class="line">                    <span class="comment">// 成功</span></span><br><span class="line">                    <span class="keyword">if</span> (res) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 随机作答</span></span><br><span class="line">                <span class="keyword">if</span> (type === <span class="title class_">ExamType</span>.<span class="property">PRACTICE</span> || settings[<span class="title class_">SettingType</span>.<span class="property">RANDOM_EXAM</span>]) &#123;</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">&#x27;答案不存在, 随机作答!&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 创建提示</span></span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">&#x27;答案不存在, 随机作答!&#x27;</span>);</span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">handleBlankInputRand</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 推送</span></span><br><span class="line">                    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">pushModal</span>(&#123;</span><br><span class="line">                        <span class="attr">title</span>: <span class="string">&#x27;学习推送&#x27;</span>,</span><br><span class="line">                        <span class="attr">to</span>: userinfo.<span class="property">nick</span>,</span><br><span class="line">                        <span class="attr">content</span>: <span class="string">&#x27;答题存在异常, 已暂停答题!&#x27;</span>,</span><br><span class="line">                        <span class="attr">type</span>: <span class="string">&#x27;fail&#x27;</span>,</span><br><span class="line">                    &#125;, pushToken.<span class="property">value</span>);</span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">`学习推送<span class="subst">$&#123;res ? <span class="string">&#x27;成功&#x27;</span> : <span class="string">&#x27;失败&#x27;</span>&#125;</span>!`</span>);</span><br><span class="line">                    <span class="comment">// 暂停</span></span><br><span class="line">                    examPause.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">                    <span class="comment">// 提交答案</span></span><br><span class="line">                    shouldSaveAnswer = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;多选题&#x27;</span>: &#123;</span><br><span class="line">                <span class="comment">// 根据提示作答</span></span><br><span class="line">                <span class="keyword">if</span> (answers.<span class="property">length</span>) &#123;</span><br><span class="line">                    <span class="comment">// 选项文本</span></span><br><span class="line">                    <span class="keyword">const</span> choicesText = allBtns.<span class="title function_">map</span>(<span class="function">(<span class="params">btn</span>) =&gt;</span> btn.<span class="property">innerText</span>);</span><br><span class="line">                    <span class="comment">// 选项内容</span></span><br><span class="line">                    <span class="keyword">const</span> choicesContent = choicesText</span><br><span class="line">                        .<span class="title function_">map</span>(<span class="function">(<span class="params">choiceText</span>) =&gt;</span> choiceText.<span class="title function_">split</span>(<span class="regexp">/[A-Z]./</span>)[<span class="number">1</span>].<span class="title function_">trim</span>())</span><br><span class="line">                        .<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 空格</span></span><br><span class="line">                    <span class="keyword">const</span> blanks = question.<span class="title function_">match</span>(<span class="regexp">/（）/g</span>);</span><br><span class="line">                    <span class="comment">// 填空数量、选项数量、答案数量相同 | 选项全文等于答案全文</span></span><br><span class="line">                    <span class="keyword">if</span> ((blanks &amp;&amp; allBtns.<span class="property">length</span> === blanks.<span class="property">length</span>) ||</span><br><span class="line">                        question === choicesContent ||</span><br><span class="line">                        allBtns.<span class="property">length</span> === <span class="number">2</span>) &#123;</span><br><span class="line">                        <span class="comment">// 全选</span></span><br><span class="line">                        allBtns.<span class="title function_">forEach</span>(<span class="function">(<span class="params">choice</span>) =&gt;</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (!choice.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;chosen&#x27;</span>)) &#123;</span><br><span class="line">                                choice.<span class="title function_">click</span>();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 选项数量大于等于答案</span></span><br><span class="line">                    <span class="keyword">if</span> (allBtns.<span class="property">length</span> &gt;= answers.<span class="property">length</span>) &#123;</span><br><span class="line">                        <span class="keyword">const</span> res = <span class="title function_">handleChoiceBtn</span>(answers);</span><br><span class="line">                        <span class="comment">// 成功</span></span><br><span class="line">                        <span class="keyword">if</span> (res) &#123;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 创建提示</span></span><br><span class="line">                <span class="title function_">createTip</span>(<span class="string">&#x27;答案异常, 尝试网络题库获取!&#x27;</span>);</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">&#x27;正在获取答案...&#x27;</span>);</span><br><span class="line">                <span class="comment">// 尝试题库获取</span></span><br><span class="line">                <span class="keyword">const</span> answersNetwork = <span class="keyword">await</span> <span class="title function_">getAnswer</span>(question);</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">`获取答案<span class="subst">$&#123;answersNetwork.length ? <span class="string">&#x27;成功&#x27;</span> : <span class="string">&#x27;失败&#x27;</span>&#125;</span>!`</span>, &#123;</span><br><span class="line">                    question,</span><br><span class="line">                    answersNetwork,</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">// 答案存在</span></span><br><span class="line">                <span class="keyword">if</span> (answersNetwork.<span class="property">length</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> res = <span class="title function_">handleChoiceBtn</span>(answersNetwork);</span><br><span class="line">                    <span class="comment">// 成功</span></span><br><span class="line">                    <span class="keyword">if</span> (res) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 随机作答</span></span><br><span class="line">                <span class="keyword">if</span> (type === <span class="title class_">ExamType</span>.<span class="property">PRACTICE</span> || settings[<span class="title class_">SettingType</span>.<span class="property">RANDOM_EXAM</span>]) &#123;</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">&#x27;答案不存在, 随机作答!&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 创建提示</span></span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">&#x27;答案不存在, 随机作答!&#x27;</span>);</span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">handleMutiplyChoiceRand</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 推送</span></span><br><span class="line">                    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">pushModal</span>(&#123;</span><br><span class="line">                        <span class="attr">title</span>: <span class="string">&#x27;学习推送&#x27;</span>,</span><br><span class="line">                        <span class="attr">to</span>: userinfo.<span class="property">nick</span>,</span><br><span class="line">                        <span class="attr">content</span>: <span class="string">&#x27;答题存在异常, 已暂停答题!&#x27;</span>,</span><br><span class="line">                        <span class="attr">type</span>: <span class="string">&#x27;fail&#x27;</span>,</span><br><span class="line">                    &#125;, pushToken.<span class="property">value</span>);</span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">`学习推送<span class="subst">$&#123;res ? <span class="string">&#x27;成功&#x27;</span> : <span class="string">&#x27;失败&#x27;</span>&#125;</span>!`</span>);</span><br><span class="line">                    <span class="comment">// 暂停</span></span><br><span class="line">                    examPause.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">                    <span class="comment">// 提交答案</span></span><br><span class="line">                    shouldSaveAnswer = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;单选题&#x27;</span>: &#123;</span><br><span class="line">                <span class="comment">// 根据提示作答</span></span><br><span class="line">                <span class="keyword">if</span> (answers.<span class="property">length</span>) &#123;</span><br><span class="line">                    <span class="comment">// 创建提示为1</span></span><br><span class="line">                    <span class="keyword">if</span> (answers.<span class="property">length</span> === <span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="keyword">const</span> res = <span class="title function_">handleChoiceBtn</span>(answers);</span><br><span class="line">                        <span class="comment">// 成功</span></span><br><span class="line">                        <span class="keyword">if</span> (res) &#123;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">// 可能的分隔符</span></span><br><span class="line">                        <span class="keyword">const</span> seperator = [</span><br><span class="line">                            <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                            <span class="string">&#x27; &#x27;</span>,</span><br><span class="line">                            <span class="string">&#x27;,&#x27;</span>,</span><br><span class="line">                            <span class="string">&#x27;;&#x27;</span>,</span><br><span class="line">                            <span class="string">&#x27;,&#x27;</span>,</span><br><span class="line">                            <span class="string">&#x27;、&#x27;</span>,</span><br><span class="line">                            <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">                            <span class="string">&#x27;|&#x27;</span>,</span><br><span class="line">                            <span class="string">&#x27;+&#x27;</span>,</span><br><span class="line">                            <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">                        ];</span><br><span class="line">                        <span class="comment">// 可能的答案</span></span><br><span class="line">                        <span class="keyword">const</span> answersLike = seperator</span><br><span class="line">                            .<span class="title function_">map</span>(<span class="function">(<span class="params">s</span>) =&gt;</span> answers.<span class="title function_">join</span>(s).<span class="title function_">trim</span>())</span><br><span class="line">                            .<span class="title function_">filter</span>(<span class="function">(<span class="params">answer</span>) =&gt;</span> answer.<span class="property">length</span>);</span><br><span class="line">                        <span class="comment">// 答案存在</span></span><br><span class="line">                        <span class="keyword">if</span> (answersLike.<span class="property">length</span>) &#123;</span><br><span class="line">                            <span class="comment">// 可能答案是否正确</span></span><br><span class="line">                            <span class="keyword">const</span> res = answersLike.<span class="title function_">some</span>(<span class="function">(<span class="params">answer</span>) =&gt;</span> &#123;</span><br><span class="line">                                <span class="comment">// 尝试查找点击</span></span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">handleChoiceBtn</span>([answer]);</span><br><span class="line">                            &#125;);</span><br><span class="line">                            <span class="keyword">if</span> (res) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 创建提示</span></span><br><span class="line">                <span class="title function_">createTip</span>(<span class="string">&#x27;答案异常, 尝试网络题库获取!&#x27;</span>);</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">&#x27;正在获取答案...&#x27;</span>);</span><br><span class="line">                <span class="comment">// 尝试题库获取</span></span><br><span class="line">                <span class="keyword">const</span> answersNetwork = <span class="keyword">await</span> <span class="title function_">getAnswer</span>(question);</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">`获取答案<span class="subst">$&#123;answersNetwork.length ? <span class="string">&#x27;成功&#x27;</span> : <span class="string">&#x27;失败&#x27;</span>&#125;</span>!`</span>, &#123;</span><br><span class="line">                    question,</span><br><span class="line">                    answersNetwork,</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">// 存在答案</span></span><br><span class="line">                <span class="keyword">if</span> (answersNetwork.<span class="property">length</span>) &#123;</span><br><span class="line">                    <span class="comment">// 单答案单选项</span></span><br><span class="line">                    <span class="keyword">if</span> (answersNetwork.<span class="property">length</span> === <span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="comment">// 尝试查找点击</span></span><br><span class="line">                        <span class="keyword">const</span> res = <span class="title function_">handleChoiceBtn</span>(answersNetwork);</span><br><span class="line">                        <span class="keyword">if</span> (res) &#123;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">// 多答案单选项 选项意外拆分</span></span><br><span class="line">                        <span class="comment">// 可能分隔符</span></span><br><span class="line">                        <span class="keyword">const</span> seperator = [<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27; &#x27;</span>];</span><br><span class="line">                        <span class="comment">// 可能答案</span></span><br><span class="line">                        <span class="keyword">const</span> answersLike = seperator.<span class="title function_">map</span>(<span class="function">(<span class="params">s</span>) =&gt;</span> answers.<span class="title function_">join</span>(s));</span><br><span class="line">                        <span class="comment">// 答案存在</span></span><br><span class="line">                        <span class="keyword">if</span> (answersLike.<span class="title function_">every</span>(<span class="function">(<span class="params">answer</span>) =&gt;</span> answer.<span class="property">length</span>)) &#123;</span><br><span class="line">                            <span class="comment">// 可能答案是否正确</span></span><br><span class="line">                            <span class="keyword">const</span> res = answersLike.<span class="title function_">some</span>(<span class="function">(<span class="params">answer</span>) =&gt;</span> &#123;</span><br><span class="line">                                <span class="comment">// 尝试查找点击</span></span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">handleChoiceBtn</span>([answer]);</span><br><span class="line">                            &#125;);</span><br><span class="line">                            <span class="keyword">if</span> (res) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 随机作答</span></span><br><span class="line">                <span class="keyword">if</span> (type === <span class="title class_">ExamType</span>.<span class="property">PRACTICE</span> || settings[<span class="title class_">SettingType</span>.<span class="property">RANDOM_EXAM</span>]) &#123;</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">&#x27;答案不存在, 随机作答!&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 创建提示</span></span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">&#x27;答案不存在, 随机作答!&#x27;</span>);</span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">handleSingleChoiceRand</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 推送</span></span><br><span class="line">                    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">pushModal</span>(&#123;</span><br><span class="line">                        <span class="attr">title</span>: <span class="string">&#x27;学习推送&#x27;</span>,</span><br><span class="line">                        <span class="attr">to</span>: userinfo.<span class="property">nick</span>,</span><br><span class="line">                        <span class="attr">content</span>: <span class="string">&#x27;答题存在异常, 已暂停答题!&#x27;</span>,</span><br><span class="line">                        <span class="attr">type</span>: <span class="string">&#x27;fail&#x27;</span>,</span><br><span class="line">                    &#125;, pushToken.<span class="property">value</span>);</span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">`学习推送<span class="subst">$&#123;res ? <span class="string">&#x27;成功&#x27;</span> : <span class="string">&#x27;失败&#x27;</span>&#125;</span>!`</span>);</span><br><span class="line">                    <span class="comment">// 暂停</span></span><br><span class="line">                    examPause.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">                    <span class="comment">// 提交答案</span></span><br><span class="line">                    shouldSaveAnswer = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 暂停</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">examPauseLock</span>();</span><br><span class="line">        <span class="comment">// 获取下一个按钮</span></span><br><span class="line">        nextButton = <span class="keyword">await</span> <span class="title function_">getNextButton</span>();</span><br><span class="line">        <span class="comment">// 下一个文本</span></span><br><span class="line">        nextText = nextButton.<span class="property">innerText</span>.<span class="title function_">replaceAll</span>(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="comment">// 需要提交答案</span></span><br><span class="line">        <span class="keyword">if</span> (shouldSaveAnswer) &#123;</span><br><span class="line">            <span class="comment">// 答案</span></span><br><span class="line">            <span class="keyword">const</span> answers = [];</span><br><span class="line">            <span class="keyword">if</span> (questionType === <span class="string">&#x27;填空题&#x27;</span>) &#123;</span><br><span class="line">                blanks.<span class="title function_">forEach</span>(<span class="function">(<span class="params">blank</span>) =&gt;</span> &#123;</span><br><span class="line">                    answers.<span class="title function_">push</span>(blank.<span class="property">value</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (questionType === <span class="string">&#x27;单选题&#x27;</span> || questionType === <span class="string">&#x27;多选题&#x27;</span>) &#123;</span><br><span class="line">                allBtns.<span class="title function_">forEach</span>(<span class="function">(<span class="params">choice</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (choice.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;chosen&#x27;</span>)) &#123;</span><br><span class="line">                        <span class="comment">// 带字母的选项</span></span><br><span class="line">                        <span class="keyword">const</span> answerTemp = choice.<span class="property">innerText</span>;</span><br><span class="line">                        <span class="comment">// 从字符串中拿出答案</span></span><br><span class="line">                        <span class="keyword">const</span> [, answer] = answerTemp.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">                        <span class="keyword">if</span> (answer &amp;&amp; answer.<span class="property">length</span>) &#123;</span><br><span class="line">                            answers.<span class="title function_">push</span>(answer);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 答案</span></span><br><span class="line">            <span class="keyword">const</span> answer = answers.<span class="title function_">join</span>(<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">            <span class="comment">// 存在答案</span></span><br><span class="line">            <span class="keyword">if</span> (answer.<span class="property">length</span>) &#123;</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">&#x27;正在上传答案...&#x27;</span>);</span><br><span class="line">                <span class="comment">// 上传答案</span></span><br><span class="line">                <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">saveAnswer</span>(question, answer);</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">`上传答案<span class="subst">$&#123;res ? <span class="string">&#x27;成功&#x27;</span> : <span class="string">&#x27;失败&#x27;</span>&#125;</span>!`</span>, &#123; question, answer &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 重置</span></span><br><span class="line">            shouldSaveAnswer = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 确定</span></span><br><span class="line">        <span class="keyword">if</span> (nextText === <span class="string">&#x27;确定&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// 确认</span></span><br><span class="line">            nextButton.<span class="title function_">click</span>();</span><br><span class="line">            <span class="comment">// 等待一段时间</span></span><br><span class="line">            <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">2000</span>);</span><br><span class="line">            <span class="comment">// 暂停</span></span><br><span class="line">            <span class="keyword">await</span> <span class="title function_">examPauseLock</span>();</span><br><span class="line">            <span class="comment">// 答案解析</span></span><br><span class="line">            <span class="keyword">const</span> answerBox = $$(<span class="string">&#x27;.answer&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">            <span class="comment">// 答题错误</span></span><br><span class="line">            <span class="keyword">if</span> (answerBox) &#123;</span><br><span class="line">                <span class="keyword">const</span> answerTemp = answerBox.<span class="property">innerText</span>;</span><br><span class="line">                <span class="comment">// 从字符串中拿出答案</span></span><br><span class="line">                <span class="keyword">const</span> [, answerText] = answerTemp.<span class="title function_">split</span>(<span class="string">&#x27;：&#x27;</span>);</span><br><span class="line">                <span class="keyword">if</span> (answerText &amp;&amp; answerText.<span class="property">length</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> answer = answerText.<span class="title function_">replaceAll</span>(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">&#x27;正在上传答案...&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 上传答案</span></span><br><span class="line">                    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">saveAnswer</span>(question, answer);</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">`上传答案<span class="subst">$&#123;res ? <span class="string">&#x27;成功&#x27;</span> : <span class="string">&#x27;失败&#x27;</span>&#125;</span>!`</span>, &#123; question, answer &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取按钮</span></span><br><span class="line">        nextButton = <span class="keyword">await</span> <span class="title function_">getNextButton</span>();</span><br><span class="line">        <span class="comment">// 下一个文本</span></span><br><span class="line">        nextText = nextButton.<span class="property">innerText</span>.<span class="title function_">replaceAll</span>(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (nextText === <span class="string">&#x27;下一题&#x27;</span> || nextText === <span class="string">&#x27;完成&#x27;</span> || nextText === <span class="string">&#x27;交卷&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// 等待一段时间</span></span><br><span class="line">            <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">2500</span>);</span><br><span class="line">            <span class="comment">// 下一题</span></span><br><span class="line">            nextButton.<span class="title function_">click</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 滑动验证</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">handleSlideVerify</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 关闭任务窗口</span></span><br><span class="line">    <span class="title function_">handleCloseTaskWin</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 每日答题</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">doExamPractice</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 暂停</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">studyPauseLock</span>();</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;正在每日答题...&#x27;</span>);</span><br><span class="line">    <span class="comment">// 创建提示</span></span><br><span class="line">    <span class="title function_">createTip</span>(<span class="string">&#x27;正在每日答题&#x27;</span>);</span><br><span class="line">    <span class="comment">// 链接</span></span><br><span class="line">    <span class="keyword">const</span> url = <span class="variable constant_">URL_CONFIG</span>.<span class="property">examPractice</span>;</span><br><span class="line">    <span class="comment">// 等待任务窗口</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">waitTaskWin</span>(url, <span class="string">&#x27;每日答题&#x27;</span>);</span><br><span class="line">    <span class="comment">// 创建提示</span></span><br><span class="line">    <span class="title function_">createTip</span>(<span class="string">&#x27;完成每日答题!&#x27;</span>);</span><br><span class="line">    <span class="comment">// 等待一段时间</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">1500</span>);</span><br><span class="line">    <span class="comment">// 刷新分数数据</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">refreshScoreInfo</span>();</span><br><span class="line">    <span class="comment">// 刷新任务数据</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">refreshTaskList</span>();</span><br><span class="line">    <span class="comment">// 任务完成状况</span></span><br><span class="line">    <span class="keyword">if</span> (taskConfig[<span class="title class_">TaskType</span>.<span class="property">PRACTICE</span>].<span class="property">active</span> &amp;&amp;</span><br><span class="line">        !taskConfig[<span class="title class_">TaskType</span>.<span class="property">PRACTICE</span>].<span class="property">status</span>) &#123;</span><br><span class="line">        <span class="title function_">log</span>(<span class="string">&#x27;任务未完成, 继续每日答题!&#x27;</span>);</span><br><span class="line">        <span class="comment">// 创建提示</span></span><br><span class="line">        <span class="title function_">createTip</span>(<span class="string">&#x27;任务未完成, 继续每日答题!&#x27;</span>);</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">doExamPractice</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 专项练习</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">doExamPaper</span>(<span class="params"></span>) &#123;</span><br><span class="line">    running.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;正在专项练习...&#x27;</span>);</span><br><span class="line">    <span class="comment">// 创建提示</span></span><br><span class="line">    <span class="title function_">createTip</span>(<span class="string">&#x27;正在专项练习&#x27;</span>);</span><br><span class="line">    <span class="comment">// id</span></span><br><span class="line">    <span class="keyword">const</span> examPaperId = <span class="keyword">await</span> <span class="title function_">findExamPaper</span>();</span><br><span class="line">    <span class="keyword">if</span> (examPaperId) &#123;</span><br><span class="line">        <span class="comment">// 链接</span></span><br><span class="line">        <span class="keyword">const</span> url = <span class="string">`<span class="subst">$&#123;URL_CONFIG.examPaper&#125;</span>?id=<span class="subst">$&#123;examPaperId&#125;</span>`</span>;</span><br><span class="line">        <span class="title function_">log</span>(<span class="string">`链接: <span class="subst">$&#123;url&#125;</span>`</span>);</span><br><span class="line">        <span class="comment">// 等待窗口任务</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">waitTaskWin</span>(url, <span class="string">&#x27;专项练习&#x27;</span>);</span><br><span class="line">        <span class="comment">// 创建提示</span></span><br><span class="line">        <span class="title function_">createTip</span>(<span class="string">&#x27;完成专项练习!&#x27;</span>);</span><br><span class="line">        running.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// 同屏任务</span></span><br><span class="line">        <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">SAME_TAB</span>]) &#123;</span><br><span class="line">            <span class="comment">// 窗口不存在</span></span><br><span class="line">            frame.<span class="property">exist</span> = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    running.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 创建提示</span></span><br><span class="line">    <span class="title function_">createTip</span>(<span class="string">&#x27;专项练习均已完成!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 初始化总页数属性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">initExam</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 默认从第一页获取全部页属性</span></span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">getExamPaper</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (data) &#123;</span><br><span class="line">        <span class="comment">// 等待</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">3000</span>);</span><br><span class="line">        <span class="keyword">return</span> data.<span class="property">totalPageCount</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 查询专项练习列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">findExamPaper</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取总页数</span></span><br><span class="line">    <span class="keyword">const</span> total = <span class="keyword">await</span> <span class="title function_">initExam</span>();</span><br><span class="line">    <span class="comment">// 当前页数</span></span><br><span class="line">    <span class="keyword">let</span> current = <span class="number">1</span>;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">`正在寻找的专项练习...`</span>);</span><br><span class="line">    <span class="comment">// 创建提示</span></span><br><span class="line">    <span class="title function_">createTip</span>(<span class="string">`正在寻找的专项练习...`</span>);</span><br><span class="line">    <span class="keyword">while</span> (current &lt;= total &amp;&amp; current) &#123;</span><br><span class="line">        <span class="comment">// 请求数据</span></span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">getExamPaper</span>(current);</span><br><span class="line">        <span class="keyword">if</span> (data) &#123;</span><br><span class="line">            <span class="comment">// 获取专项练习的列表</span></span><br><span class="line">            <span class="keyword">const</span> examPapers = data.<span class="property">list</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> examPapers) &#123;</span><br><span class="line">                <span class="comment">// 遍历查询有没有没做过的</span></span><br><span class="line">                <span class="keyword">if</span> (examPapers[i].<span class="property">status</span> !== <span class="number">2</span>) &#123;</span><br><span class="line">                    <span class="comment">// status： 1 开始答题, 2 已满分/重新答题, 3 继续答题</span></span><br><span class="line">                    <span class="keyword">return</span> examPapers[i].<span class="property">id</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 增加页码</span></span><br><span class="line">            current += <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 等待</span></span><br><span class="line">            <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">3000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 初始化主页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initMainListener</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 监听关闭</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; data &#125; = msg;</span><br><span class="line">        <span class="keyword">if</span> (data.<span class="property">id</span> === id.<span class="property">value</span> &amp;&amp; data.<span class="property">closed</span>) &#123;</span><br><span class="line">            <span class="comment">// 关闭窗口</span></span><br><span class="line">            <span class="title function_">closeFrame</span>();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 初始化子页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initChildListener</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; data &#125; = msg;</span><br><span class="line">        <span class="keyword">if</span> (data.<span class="property">id</span> &amp;&amp; !data.<span class="property">closed</span>) &#123;</span><br><span class="line">            <span class="comment">// 设置窗口id</span></span><br><span class="line">            id.<span class="property">value</span> = data.<span class="property">id</span>;</span><br><span class="line">            <span class="title function_">log</span>(<span class="string">`初始化窗口 ID: <span class="subst">$&#123;id.value&#125;</span>`</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 打开窗口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">url</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">openFrame</span>(<span class="params">url, title</span>) &#123;</span><br><span class="line">    <span class="comment">// 设置 URL</span></span><br><span class="line">    frame.<span class="property">src</span> = url;</span><br><span class="line">    <span class="comment">// 等待元素</span></span><br><span class="line">    <span class="keyword">await</span> $_(<span class="string">&#x27;.egg_frame&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (frame.<span class="property">ele</span>) &#123;</span><br><span class="line">        <span class="comment">// id</span></span><br><span class="line">        id.<span class="property">value</span> = <span class="title function_">generateMix</span>(<span class="number">10</span>);</span><br><span class="line">        <span class="comment">// 打开</span></span><br><span class="line">        frame.<span class="property">closed</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// 设置标题</span></span><br><span class="line">        frame.<span class="property">title</span> = title || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="comment">// 等待页面加载</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">waitFrameLoaded</span>(frame.<span class="property">ele</span>);</span><br><span class="line">        <span class="comment">// 发送窗口 ID</span></span><br><span class="line">        frame.<span class="property">ele</span>.<span class="property">contentWindow</span>?.<span class="title function_">postMessage</span>(&#123; <span class="attr">id</span>: id.<span class="property">value</span>, <span class="attr">closed</span>: <span class="literal">false</span> &#125;, url);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 关闭窗口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">closeFrame</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">`关闭窗口 ID: <span class="subst">$&#123;id.value&#125;</span>`</span>);</span><br><span class="line">    <span class="comment">// 窗口显示</span></span><br><span class="line">    frame.<span class="property">show</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 关闭</span></span><br><span class="line">    frame.<span class="property">closed</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">// 标题</span></span><br><span class="line">    frame.<span class="property">title</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="comment">// src</span></span><br><span class="line">    frame.<span class="property">src</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 关闭 frame</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleCloseFrame</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">parent</span>.<span class="title function_">postMessage</span>(&#123; <span class="attr">id</span>: id.<span class="property">value</span>, <span class="attr">closed</span>: <span class="literal">true</span> &#125;, <span class="variable constant_">URL_CONFIG</span>.<span class="property">homeOrigin</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 等待窗口任务结束</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">id</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">waitFrameClose</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 窗口关闭</span></span><br><span class="line">            <span class="keyword">if</span> (frame.<span class="property">closed</span>) &#123;</span><br><span class="line">                <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">                <span class="title function_">resolve</span>(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">100</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 等待窗口加载</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">waitFrameLoaded</span>(<span class="params">iframe</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        iframe.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">resolve</span>(<span class="literal">true</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 打开新窗口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">openWin</span>(<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">GM_openInTab</span>(url, &#123;</span><br><span class="line">        <span class="attr">active</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">insert</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">setParent</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 关闭窗口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">closeWin</span>(<span class="params"></span>) &#123;</span><br><span class="line">    page.<span class="property">value</span> &amp;&amp; page.<span class="property">value</span>.<span class="title function_">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 关闭子窗口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleCloseWin</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">opener</span> = <span class="variable language_">window</span>;</span><br><span class="line">        <span class="keyword">const</span> win = <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;_self&#x27;</span>);</span><br><span class="line">        win?.<span class="title function_">close</span>();</span><br><span class="line">        top?.<span class="title function_">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 等待窗口关闭</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">newPage</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">waitWinClose</span>(<span class="params">newPage</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        newPage.<span class="property">onclose</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">resolve</span>(<span class="literal">undefined</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 关闭任务窗口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">closeTaskWin</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 同屏任务</span></span><br><span class="line">    <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">SAME_TAB</span>] &amp;&amp; id.<span class="property">value</span>) &#123;</span><br><span class="line">        <span class="title function_">closeFrame</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 非同屏任务</span></span><br><span class="line">    <span class="title function_">closeWin</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 关闭任务窗口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleCloseTaskWin</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 同屏任务</span></span><br><span class="line">    <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">SAME_TAB</span>] &amp;&amp; id.<span class="property">value</span>) &#123;</span><br><span class="line">        <span class="title function_">handleCloseFrame</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 子窗口</span></span><br><span class="line">    <span class="title function_">handleCloseWin</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 打开并等待任务结束</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">waitTaskWin</span>(<span class="params">url, title</span>) &#123;</span><br><span class="line">    <span class="comment">// 同屏任务</span></span><br><span class="line">    <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">SAME_TAB</span>]) &#123;</span><br><span class="line">        <span class="comment">// 窗口存在</span></span><br><span class="line">        frame.<span class="property">exist</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// 显示窗体</span></span><br><span class="line">        frame.<span class="property">show</span> = !settings[<span class="title class_">SettingType</span>.<span class="property">SILENT_RUN</span>];</span><br><span class="line">        <span class="comment">// 新窗口</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">openFrame</span>(url, title);</span><br><span class="line">        <span class="keyword">if</span> (res) &#123;</span><br><span class="line">            <span class="comment">// 等待窗口关闭</span></span><br><span class="line">            <span class="keyword">await</span> <span class="title function_">waitFrameClose</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 子页面任务</span></span><br><span class="line">    page.<span class="property">value</span> = <span class="title function_">openWin</span>(url);</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">waitWinClose</span>(page.<span class="property">value</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 二维码刷新定时器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">let</span> refreshTimer = -<span class="number">1</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 尝试登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">let</span> tryLoginTimer = -<span class="number">1</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 生成二维码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getQRCode</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;正在生成登录二维码...&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> qrCode = <span class="keyword">await</span> <span class="title function_">generateQRCode</span>();</span><br><span class="line">    <span class="keyword">if</span> (qrCode) &#123;</span><br><span class="line">        <span class="title function_">log</span>(<span class="string">&#x27;生成登录二维码成功!&#x27;</span>);</span><br><span class="line">        <span class="comment">// 链接</span></span><br><span class="line">        <span class="keyword">const</span> url = <span class="string">`https://login.xuexi.cn/login/qrcommit?showmenu=false&amp;code=<span class="subst">$&#123;qrCode&#125;</span>&amp;appId=dingoankubyrfkttorhpou`</span>;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">code</span>: qrCode,</span><br><span class="line">            <span class="attr">src</span>: <span class="string">`<span class="subst">$&#123;API_CONFIG.qrcode&#125;</span>?data=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(url)&#125;</span>`</span>,</span><br><span class="line">            url,</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;生成登录二维码失败!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 验证登录二维码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">code</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">checkQRCode</span>(<span class="params">code</span>) &#123;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;尝试用二维码登录...&#x27;</span>);</span><br><span class="line">    <span class="comment">// 二维码登录</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">loginWithQRCode</span>(code);</span><br><span class="line">    <span class="keyword">if</span> (res) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; data, code, success &#125; = res;</span><br><span class="line">        <span class="comment">// 临时登录验证码</span></span><br><span class="line">        <span class="keyword">if</span> (success &amp;&amp; data) &#123;</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 二维码失效</span></span><br><span class="line">        <span class="keyword">if</span> (code === <span class="string">&#x27;11019&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 清除定时</span></span><br><span class="line">        <span class="built_in">clearTimeout</span>(tryLoginTimer);</span><br><span class="line">        <span class="comment">// 设置定时</span></span><br><span class="line">        tryLoginTimer = <span class="built_in">setTimeout</span>(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">            <span class="title function_">resolve</span>(<span class="keyword">await</span> <span class="title function_">checkQRCode</span>(code));</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 尝试二维码登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">tryLogin</span>(<span class="params">checkCode</span>) &#123;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;正在获取签名...&#x27;</span>);</span><br><span class="line">    <span class="comment">// 获取签名</span></span><br><span class="line">    <span class="keyword">const</span> sign = <span class="keyword">await</span> <span class="title function_">getSign</span>();</span><br><span class="line">    <span class="keyword">if</span> (sign) &#123;</span><br><span class="line">        <span class="comment">// 生成uuid</span></span><br><span class="line">        <span class="keyword">const</span> uuid = crypto.<span class="title function_">randomUUID</span>();</span><br><span class="line">        <span class="keyword">const</span> [, code] = checkCode.<span class="title function_">split</span>(<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> state = <span class="string">`<span class="subst">$&#123;sign&#125;</span><span class="subst">$&#123;uuid&#125;</span>`</span>;</span><br><span class="line">        <span class="comment">// 安全检查</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">secureCheck</span>(&#123; code, state &#125;);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 刷新登录二维码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleLogin</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 清除刷新</span></span><br><span class="line">    <span class="built_in">clearInterval</span>(refreshTimer);</span><br><span class="line">    <span class="comment">// 每隔一段时间刷新</span></span><br><span class="line">    refreshTimer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 刷新二维码</span></span><br><span class="line">        <span class="title function_">handleLogin</span>();</span><br><span class="line">    &#125;, autoRefreshQRCodeInterval);</span><br><span class="line">    <span class="comment">// 是否超出次数</span></span><br><span class="line">    <span class="keyword">if</span> (refreshCount.<span class="property">value</span> &gt;= maxRefreshCount) &#123;</span><br><span class="line">        <span class="title function_">createTip</span>(<span class="string">&#x27;超过最大重试次数, 登录失败!&#x27;</span>);</span><br><span class="line">        <span class="comment">// 重置刷新数</span></span><br><span class="line">        refreshCount.<span class="property">value</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 隐藏二维码</span></span><br><span class="line">        loginQRCodeShow.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// 远程推送</span></span><br><span class="line">        <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">REMOTE_PUSH</span>]) &#123;</span><br><span class="line">            <span class="comment">// 推送</span></span><br><span class="line">            <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">pushModal</span>(&#123;</span><br><span class="line">                <span class="attr">title</span>: <span class="string">&#x27;登录推送&#x27;</span>,</span><br><span class="line">                <span class="attr">content</span>: <span class="string">&#x27;超过最大重试次数, 登录失败!&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;fail&#x27;</span>,</span><br><span class="line">            &#125;, pushToken.<span class="property">value</span>);</span><br><span class="line">            <span class="title function_">createTip</span>(<span class="string">`登录推送<span class="subst">$&#123;res ? <span class="string">&#x27;成功&#x27;</span> : <span class="string">&#x27;失败&#x27;</span>&#125;</span>!`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 配置</span></span><br><span class="line">    <span class="keyword">const</span> imgWrap = $$(<span class="string">&#x27;.egg_login_img_wrap&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">// 图片</span></span><br><span class="line">    <span class="keyword">const</span> img = $$(<span class="string">&#x27;.egg_login_img&#x27;</span>, imgWrap)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (imgWrap &amp;&amp; img) &#123;</span><br><span class="line">        <span class="comment">// 刷新二维码</span></span><br><span class="line">        <span class="title function_">log</span>(<span class="string">&#x27;刷新登录二维码!&#x27;</span>);</span><br><span class="line">        <span class="comment">// 刷新次数累加</span></span><br><span class="line">        refreshCount.<span class="property">value</span>++;</span><br><span class="line">        <span class="comment">// 获取二维码</span></span><br><span class="line">        <span class="keyword">const</span> qrCode = <span class="keyword">await</span> <span class="title function_">getQRCode</span>();</span><br><span class="line">        <span class="keyword">if</span> (qrCode) &#123;</span><br><span class="line">            <span class="comment">// 获取连接</span></span><br><span class="line">            <span class="keyword">const</span> &#123; src, code, url &#125; = qrCode;</span><br><span class="line">            <span class="comment">// src</span></span><br><span class="line">            img.<span class="property">src</span> = src;</span><br><span class="line">            <span class="comment">// 开始登录</span></span><br><span class="line">            loginQRCodeShow.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">// 远程推送</span></span><br><span class="line">            <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">REMOTE_PUSH</span>]) &#123;</span><br><span class="line">                <span class="comment">// img html</span></span><br><span class="line">                <span class="keyword">const</span> imgWrap = <span class="title function_">getImgHTML</span>(src);</span><br><span class="line">                <span class="comment">// 跳转链接</span></span><br><span class="line">                <span class="keyword">const</span> aWrap = <span class="string">`</span></span><br><span class="line"><span class="string">   &lt;div&gt;</span></span><br><span class="line"><span class="string">      或在浏览器</span></span><br><span class="line"><span class="string">      &lt;a</span></span><br><span class="line"><span class="string">        href=&quot;dtxuexi://appclient/page/study_feeds?url=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(url)&#125;</span>&quot;</span></span><br><span class="line"><span class="string">        style=&quot;text-decoration: none&quot;</span></span><br><span class="line"><span class="string">        &gt;<span class="subst">$&#123;getHighlightHTML(<span class="string">&#x27;打开学习强国APP&#x27;</span>)&#125;</span>&lt;/a</span></span><br><span class="line"><span class="string">      &gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  `</span>;</span><br><span class="line">                <span class="comment">// 推送</span></span><br><span class="line">                <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">pushModal</span>(&#123;</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;登录推送&#x27;</span>,</span><br><span class="line">                    <span class="attr">content</span>: [<span class="string">&#x27;扫一扫, 登录学习强国!&#x27;</span>, aWrap, imgWrap],</span><br><span class="line">                    <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span><br><span class="line">                &#125;, pushToken.<span class="property">value</span>);</span><br><span class="line">                <span class="title function_">createTip</span>(<span class="string">`登录推送<span class="subst">$&#123;res ? <span class="string">&#x27;成功&#x27;</span> : <span class="string">&#x27;失败&#x27;</span>&#125;</span>!`</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取验证码</span></span><br><span class="line">            <span class="keyword">const</span> checkCode = <span class="keyword">await</span> <span class="title function_">checkQRCode</span>(code);</span><br><span class="line">            <span class="comment">// 验证成功</span></span><br><span class="line">            <span class="keyword">if</span> (checkCode) &#123;</span><br><span class="line">                <span class="comment">// 尝试登录</span></span><br><span class="line">                <span class="keyword">const</span> loginRes = <span class="keyword">await</span> <span class="title function_">tryLogin</span>(checkCode);</span><br><span class="line">                <span class="keyword">if</span> (loginRes) &#123;</span><br><span class="line">                    <span class="comment">// 清除刷新</span></span><br><span class="line">                    <span class="built_in">clearInterval</span>(refreshTimer);</span><br><span class="line">                    <span class="comment">// 二维码显示</span></span><br><span class="line">                    loginQRCodeShow.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">                    <span class="comment">// 登录成功</span></span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">&#x27;登录成功!&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 创建提示</span></span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">&#x27;登录成功!&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 登录成功</span></span><br><span class="line">                    login.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">                    <span class="comment">// 刷新用户信息</span></span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">refreshUserInfo</span>();</span><br><span class="line">                    <span class="comment">// 刷新分数信息</span></span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">refreshScoreInfo</span>();</span><br><span class="line">                    <span class="comment">// 刷新任务信息</span></span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">refreshTaskList</span>();</span><br><span class="line">                    <span class="comment">// 远程推送</span></span><br><span class="line">                    <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">REMOTE_PUSH</span>]) &#123;</span><br><span class="line">                        <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">pushModal</span>(&#123;</span><br><span class="line">                            <span class="attr">title</span>: <span class="string">&#x27;登录推送&#x27;</span>,</span><br><span class="line">                            <span class="attr">to</span>: userinfo.<span class="property">nick</span>,</span><br><span class="line">                            <span class="attr">content</span>: [</span><br><span class="line">                                <span class="string">&#x27;学习强国, 登录成功!&#x27;</span>,</span><br><span class="line">                                <span class="string">`当天积分:  <span class="subst">$&#123;getHighlightHTML(todayScore.value)&#125;</span> 分`</span>,</span><br><span class="line">                                <span class="string">`总积分: <span class="subst">$&#123;getHighlightHTML(totalScore.value)&#125;</span> 分`</span>,</span><br><span class="line">                                ...taskConfig.<span class="title function_">map</span>(<span class="function">(<span class="params">task</span>) =&gt;</span> <span class="title function_">getProgressHTML</span>(task.<span class="property">title</span>, task.<span class="property">percent</span>)),</span><br><span class="line">                            ],</span><br><span class="line">                            <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">                        &#125;, pushToken.<span class="property">value</span>);</span><br><span class="line">                        <span class="title function_">createTip</span>(<span class="string">`登录推送<span class="subst">$&#123;res ? <span class="string">&#x27;成功&#x27;</span> : <span class="string">&#x27;失败&#x27;</span>&#125;</span>!`</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 二维码失效</span></span><br><span class="line">            <span class="title function_">log</span>(<span class="string">&#x27;登录二维码失效!&#x27;</span>);</span><br><span class="line">            <span class="comment">// 二维码失效刷新</span></span><br><span class="line">            <span class="title function_">handleLogin</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 退出登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleLogout</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 删除token</span></span><br><span class="line">    <span class="title function_">delCookie</span>(<span class="string">&#x27;token&#x27;</span>, <span class="string">&#x27;.xuexi.cn&#x27;</span>);</span><br><span class="line">    <span class="comment">// 关闭窗口</span></span><br><span class="line">    <span class="title function_">closeFrame</span>();</span><br><span class="line">    frame.<span class="property">exist</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 退出登录</span></span><br><span class="line">    login.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 清除用户信息</span></span><br><span class="line">    userinfo.<span class="property">nick</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    userinfo.<span class="property">avatar</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="comment">// 总分</span></span><br><span class="line">    totalScore.<span class="property">value</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 当天分数</span></span><br><span class="line">    todayScore.<span class="property">value</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 任务进度重置</span></span><br><span class="line">    taskConfig.<span class="title function_">forEach</span>(<span class="function">(<span class="params">task</span>) =&gt;</span> &#123;</span><br><span class="line">        task.<span class="property">percent</span> = <span class="number">0</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    taskStatus.<span class="property">value</span> = <span class="title class_">TaskStatusType</span>.<span class="property">LOADING</span>;</span><br><span class="line">    <span class="comment">// 退出登录</span></span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;退出登录&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 新闻</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">let</span> news = [];</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 视频</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">let</span> videos = [];</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 处理文章</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleNews</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// section</span></span><br><span class="line">    <span class="keyword">const</span> sections = <span class="keyword">await</span> $_(<span class="string">&#x27;section&#x27;</span>, <span class="literal">undefined</span>, <span class="number">5000</span>);</span><br><span class="line">    <span class="keyword">const</span> section = sections[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (!(section &amp;&amp; section.<span class="property">innerText</span>.<span class="title function_">includes</span>(<span class="string">&#x27;系统正在维护中&#x27;</span>))) &#123;</span><br><span class="line">        <span class="comment">// 文章选读</span></span><br><span class="line">        <span class="title function_">reading</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;未找到文章!&#x27;</span>);</span><br><span class="line">    <span class="comment">// 提示</span></span><br><span class="line">    <span class="title function_">createTip</span>(<span class="string">&#x27;未找到文章!&#x27;</span>);</span><br><span class="line">    <span class="comment">// 关闭页面</span></span><br><span class="line">    <span class="title function_">handleCloseTaskWin</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 处理视频</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleVideo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// videos</span></span><br><span class="line">    <span class="keyword">const</span> videos = <span class="keyword">await</span> $_(<span class="string">&#x27;video&#x27;</span>, <span class="literal">undefined</span>, <span class="number">10000</span>);</span><br><span class="line">    <span class="comment">// 视频</span></span><br><span class="line">    <span class="keyword">const</span> video = videos[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">// 播放按键</span></span><br><span class="line">    <span class="keyword">const</span> playBtn = $$(<span class="string">&#x27;.prism-play-btn&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (video &amp;&amp; playBtn) &#123;</span><br><span class="line">        <span class="comment">// 设置是否静音</span></span><br><span class="line">        video.<span class="property">muted</span> = muted;</span><br><span class="line">        <span class="title function_">log</span>(<span class="string">&#x27;正在尝试播放视频...&#x27;</span>);</span><br><span class="line">        <span class="comment">// 播放超时</span></span><br><span class="line">        <span class="keyword">const</span> timeout = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">log</span>(<span class="string">&#x27;视频播放超时!&#x27;</span>);</span><br><span class="line">            <span class="comment">// 提示</span></span><br><span class="line">            <span class="title function_">createTip</span>(<span class="string">&#x27;视频播放超时!&#x27;</span>);</span><br><span class="line">            <span class="comment">// 关闭页面</span></span><br><span class="line">            <span class="title function_">handleCloseTaskWin</span>();</span><br><span class="line">        &#125;, <span class="number">20000</span>);</span><br><span class="line">        <span class="comment">// 能播放</span></span><br><span class="line">        video.<span class="title function_">addEventListener</span>(<span class="string">&#x27;canplay&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">log</span>(<span class="string">&#x27;正在尝试播放视频...&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (video.<span class="property">paused</span>) &#123;</span><br><span class="line">                <span class="comment">// 尝试使用js的方式播放</span></span><br><span class="line">                video.<span class="title function_">play</span>();</span><br><span class="line">                <span class="keyword">if</span> (video.<span class="property">paused</span>) &#123;</span><br><span class="line">                    <span class="comment">// 尝试点击播放按钮播放</span></span><br><span class="line">                    playBtn.<span class="title function_">click</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 已经播放</span></span><br><span class="line">            <span class="keyword">if</span> (!video.<span class="property">paused</span>) &#123;</span><br><span class="line">                <span class="built_in">clearTimeout</span>(timeout);</span><br><span class="line">                <span class="comment">// 视听学习</span></span><br><span class="line">                <span class="title function_">reading</span>(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;未找到视频!&#x27;</span>);</span><br><span class="line">    <span class="comment">// 关闭页面</span></span><br><span class="line">    <span class="title function_">handleCloseTaskWin</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 读新闻或者看视频</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> type :0为新闻,1为视频</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">reading</span>(<span class="params">type</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> time = <span class="number">30</span>;</span><br><span class="line">    <span class="comment">// 文章选读</span></span><br><span class="line">    <span class="keyword">if</span> (type === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 章节</span></span><br><span class="line">        <span class="keyword">const</span> sections = $$(<span class="string">&#x27;section&#x27;</span>);</span><br><span class="line">        <span class="comment">// 最大字数</span></span><br><span class="line">        <span class="keyword">const</span> maxTextCount = <span class="title class_">Math</span>.<span class="title function_">max</span>(...sections.<span class="title function_">map</span>(<span class="function">(<span class="params">s</span>) =&gt;</span> s.<span class="property">innerText</span>.<span class="property">length</span>), <span class="number">200</span>);</span><br><span class="line">        <span class="comment">// 预计时间</span></span><br><span class="line">        <span class="keyword">const</span> predictTime = ~~((<span class="number">60</span> * maxTextCount) / <span class="number">1000</span>);</span><br><span class="line">        <span class="comment">// min(predictTime,  maxWatch.value) 秒后关闭页面</span></span><br><span class="line">        time = <span class="title class_">Math</span>.<span class="title function_">min</span>(predictTime, maxRead.<span class="property">value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 视听学习</span></span><br><span class="line">    <span class="keyword">if</span> (type === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 视频</span></span><br><span class="line">        <span class="keyword">const</span> video = $$(<span class="string">&#x27;video&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">// 预计时间</span></span><br><span class="line">        <span class="keyword">const</span> predictTime = ~~video.<span class="property">duration</span>;</span><br><span class="line">        <span class="comment">// min(predictTime,  maxWatch.value) 秒后关闭页面</span></span><br><span class="line">        time = <span class="title class_">Math</span>.<span class="title function_">min</span>(predictTime, maxWatch.<span class="property">value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 随机</span></span><br><span class="line">    time = time - ~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>) + <span class="number">5</span>;</span><br><span class="line">    <span class="comment">// 第一次滚动时间</span></span><br><span class="line">    <span class="keyword">const</span> firstTime = time - (~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">4</span>) + <span class="number">4</span>);</span><br><span class="line">    <span class="comment">// 第二次滚动时间</span></span><br><span class="line">    <span class="keyword">const</span> secendTime = ~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">4</span>) + <span class="number">8</span>;</span><br><span class="line">    <span class="comment">// 窗口</span></span><br><span class="line">    <span class="keyword">const</span> <span class="variable language_">window</span> = unsafeWindow;</span><br><span class="line">    <span class="comment">// 创建提示</span></span><br><span class="line">    <span class="keyword">const</span> tip = <span class="title function_">createTip</span>(<span class="string">&#x27;距离关闭页面还剩&#x27;</span>, time, <span class="literal">true</span>, <span class="keyword">async</span> (time) =&gt; &#123;</span><br><span class="line">        <span class="comment">// 暂停锁</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">studyPauseLock</span>(<span class="function">(<span class="params">flag</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (type === <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// 视频</span></span><br><span class="line">                <span class="keyword">const</span> video = $$(<span class="string">&#x27;video&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">                <span class="comment">// 排除反复设置</span></span><br><span class="line">                <span class="keyword">if</span> (video.<span class="property">paused</span> === !flag) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 设置播放状态</span></span><br><span class="line">                video[flag ? <span class="string">&#x27;play&#x27;</span> : <span class="string">&#x27;pause&#x27;</span>]();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 第一次滚动</span></span><br><span class="line">        <span class="keyword">if</span> (time === firstTime) &#123;</span><br><span class="line">            <span class="comment">// 滚动</span></span><br><span class="line">            <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(<span class="number">0</span>, <span class="number">400</span>);</span><br><span class="line">            <span class="comment">// 模拟滚动</span></span><br><span class="line">            <span class="keyword">const</span> scroll = <span class="keyword">new</span> <span class="title class_">Event</span>(<span class="string">&#x27;scroll&#x27;</span>, &#123;</span><br><span class="line">                <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">dispatchEvent</span>(scroll);</span><br><span class="line">            <span class="comment">// 模拟滑动</span></span><br><span class="line">            <span class="keyword">const</span> mousemove = <span class="keyword">new</span> <span class="title class_">MouseEvent</span>(<span class="string">&#x27;mousemove&#x27;</span>, &#123;</span><br><span class="line">                <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">dispatchEvent</span>(mousemove);</span><br><span class="line">            <span class="comment">// 模拟点击</span></span><br><span class="line">            <span class="keyword">const</span> click = <span class="keyword">new</span> <span class="title class_">Event</span>(<span class="string">&#x27;click&#x27;</span>, &#123;</span><br><span class="line">                <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">dispatchEvent</span>(click);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 第二次滚动</span></span><br><span class="line">        <span class="keyword">if</span> (time === secendTime) &#123;</span><br><span class="line">            <span class="comment">// 滚动长度</span></span><br><span class="line">            <span class="keyword">const</span> scrollLength = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollHeight</span> / <span class="number">2</span>;</span><br><span class="line">            <span class="comment">// 滚动</span></span><br><span class="line">            <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(<span class="number">0</span>, scrollLength);</span><br><span class="line">            <span class="comment">// 模拟滚动</span></span><br><span class="line">            <span class="keyword">const</span> scroll = <span class="keyword">new</span> <span class="title class_">Event</span>(<span class="string">&#x27;scroll&#x27;</span>, &#123;</span><br><span class="line">                <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">dispatchEvent</span>(scroll);</span><br><span class="line">            <span class="comment">// 模拟滑动</span></span><br><span class="line">            <span class="keyword">const</span> mousemove = <span class="keyword">new</span> <span class="title class_">MouseEvent</span>(<span class="string">&#x27;mousemove&#x27;</span>, &#123;</span><br><span class="line">                <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">dispatchEvent</span>(mousemove);</span><br><span class="line">            <span class="comment">// 模拟点击</span></span><br><span class="line">            <span class="keyword">const</span> click = <span class="keyword">new</span> <span class="title class_">Event</span>(<span class="string">&#x27;click&#x27;</span>, &#123;</span><br><span class="line">                <span class="attr">bubbles</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">dispatchEvent</span>(click);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 倒计时结束</span></span><br><span class="line">    <span class="keyword">await</span> tip.<span class="title function_">waitCountDown</span>();</span><br><span class="line">    <span class="comment">// 关闭任务窗口</span></span><br><span class="line">    <span class="title function_">handleCloseTaskWin</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 获取新闻列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getNews</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 需要学习的新闻数量</span></span><br><span class="line">    <span class="keyword">const</span> need = taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">need</span> &lt; maxNewsNum</span><br><span class="line">        ? taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">need</span></span><br><span class="line">        : maxNewsNum;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">`剩余 <span class="subst">$&#123;need&#125;</span> 个新闻`</span>);</span><br><span class="line">    <span class="comment">// 获取新闻</span></span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">getNewsList</span>();</span><br><span class="line">    <span class="keyword">if</span> (data &amp;&amp; data.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="comment">// 索引</span></span><br><span class="line">        <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 最新新闻</span></span><br><span class="line">        <span class="keyword">const</span> latestItems = data.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="comment">// 当前年份</span></span><br><span class="line">        <span class="keyword">const</span> currentYear = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>().<span class="title function_">toString</span>();</span><br><span class="line">        <span class="comment">// 查找今年新闻</span></span><br><span class="line">        <span class="keyword">while</span> (i &lt; need) &#123;</span><br><span class="line">            <span class="keyword">const</span> randomIndex = ~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * latestItems.<span class="property">length</span>);</span><br><span class="line">            <span class="comment">// 新闻</span></span><br><span class="line">            <span class="keyword">const</span> item = latestItems[randomIndex];</span><br><span class="line">            <span class="comment">// 是否存在</span></span><br><span class="line">            <span class="keyword">if</span> (item.<span class="property">publishTime</span>.<span class="title function_">startsWith</span>(currentYear) &amp;&amp; item.<span class="property">type</span> === <span class="string">&#x27;tuwen&#x27;</span>) &#123;</span><br><span class="line">                news[i] = item;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        news = [];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 获取视频列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getVideos</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 需要学习的视频数量</span></span><br><span class="line">    <span class="keyword">const</span> need = taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">need</span> &lt; maxVideoNum</span><br><span class="line">        ? taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">need</span></span><br><span class="line">        : maxVideoNum;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">`剩余 <span class="subst">$&#123;need&#125;</span> 个视频`</span>);</span><br><span class="line">    <span class="comment">// 获取视频</span></span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">getVideoList</span>();</span><br><span class="line">    <span class="keyword">if</span> (data &amp;&amp; data.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="comment">// 索引</span></span><br><span class="line">        <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 最新视频</span></span><br><span class="line">        <span class="keyword">const</span> latestItems = data.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="comment">// 当前年份</span></span><br><span class="line">        <span class="keyword">const</span> currentYear = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>().<span class="title function_">toString</span>();</span><br><span class="line">        <span class="comment">// 查找今年视频</span></span><br><span class="line">        <span class="keyword">while</span> (i &lt; need) &#123;</span><br><span class="line">            <span class="keyword">const</span> randomIndex = ~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * latestItems.<span class="property">length</span>);</span><br><span class="line">            <span class="comment">// 新闻</span></span><br><span class="line">            <span class="keyword">const</span> item = latestItems[randomIndex];</span><br><span class="line">            <span class="comment">// 是否存在</span></span><br><span class="line">            <span class="keyword">if</span> (item.<span class="property">publishTime</span>.<span class="title function_">startsWith</span>(currentYear) &amp;&amp;</span><br><span class="line">                (item.<span class="property">type</span> === <span class="string">&#x27;shipin&#x27;</span> || item.<span class="property">type</span> === <span class="string">&#x27;juji&#x27;</span>)) &#123;</span><br><span class="line">                videos[i] = item;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        videos = [];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 阅读文章</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">readNews</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取文章</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">getNews</span>();</span><br><span class="line">    <span class="comment">// 观看文章</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> news) &#123;</span><br><span class="line">        <span class="comment">// 任务关闭跳出循环</span></span><br><span class="line">        <span class="keyword">if</span> (!taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">active</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 暂停</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">studyPauseLock</span>();</span><br><span class="line">        <span class="title function_">log</span>(<span class="string">`正在阅读第 <span class="subst">$&#123;<span class="built_in">Number</span>(i) + <span class="number">1</span>&#125;</span> 个新闻...`</span>);</span><br><span class="line">        <span class="comment">// 创建提示</span></span><br><span class="line">        <span class="title function_">createTip</span>(<span class="string">`正在阅读第 <span class="subst">$&#123;<span class="built_in">Number</span>(i) + <span class="number">1</span>&#125;</span> 个新闻`</span>);</span><br><span class="line">        <span class="comment">// 链接</span></span><br><span class="line">        <span class="keyword">const</span> &#123; url &#125; = news[i];</span><br><span class="line">        <span class="comment">// 链接</span></span><br><span class="line">        <span class="title function_">GM_setValue</span>(<span class="string">&#x27;readingUrl&#x27;</span>, url);</span><br><span class="line">        <span class="comment">// 等待任务窗口</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">waitTaskWin</span>(url, <span class="string">&#x27;文章选读&#x27;</span>);</span><br><span class="line">        <span class="comment">// 清空链接</span></span><br><span class="line">        <span class="title function_">GM_setValue</span>(<span class="string">&#x27;readingUrl&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">// 创建提示</span></span><br><span class="line">        <span class="title function_">createTip</span>(<span class="string">`完成阅读第 <span class="subst">$&#123;<span class="built_in">Number</span>(i) + <span class="number">1</span>&#125;</span> 个新闻!`</span>);</span><br><span class="line">        <span class="comment">// 等待一段时间</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">1500</span>);</span><br><span class="line">        <span class="comment">// 刷新分数数据</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">refreshScoreInfo</span>();</span><br><span class="line">        <span class="comment">// 刷新任务数据</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">refreshTaskList</span>();</span><br><span class="line">        <span class="comment">// 任务完成跳出循环</span></span><br><span class="line">        <span class="keyword">if</span> (taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">active</span> &amp;&amp; taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">status</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 任务关闭跳出循环</span></span><br><span class="line">    <span class="keyword">if</span> (!taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">active</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 任务完成状况</span></span><br><span class="line">    <span class="keyword">if</span> (taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">active</span> &amp;&amp; !taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">status</span>) &#123;</span><br><span class="line">        <span class="title function_">log</span>(<span class="string">&#x27;任务未完成, 继续阅读新闻!&#x27;</span>);</span><br><span class="line">        <span class="comment">// 创建提示</span></span><br><span class="line">        <span class="title function_">createTip</span>(<span class="string">&#x27;任务未完成, 继续阅读新闻!&#x27;</span>);</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">readNews</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 观看视频</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">watchVideo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取视频</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">getVideos</span>();</span><br><span class="line">    <span class="comment">// 观看视频</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> videos) &#123;</span><br><span class="line">        <span class="comment">// 任务关闭跳出循环</span></span><br><span class="line">        <span class="keyword">if</span> (!taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">active</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 暂停</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">studyPauseLock</span>();</span><br><span class="line">        <span class="title function_">log</span>(<span class="string">`正在观看第 <span class="subst">$&#123;<span class="built_in">Number</span>(i) + <span class="number">1</span>&#125;</span> 个视频...`</span>);</span><br><span class="line">        <span class="comment">// 创建提示</span></span><br><span class="line">        <span class="title function_">createTip</span>(<span class="string">`正在观看第 <span class="subst">$&#123;<span class="built_in">Number</span>(i) + <span class="number">1</span>&#125;</span> 个视频`</span>);</span><br><span class="line">        <span class="comment">// 链接</span></span><br><span class="line">        <span class="keyword">const</span> &#123; url &#125; = videos[i];</span><br><span class="line">        <span class="comment">// 链接</span></span><br><span class="line">        <span class="title function_">GM_setValue</span>(<span class="string">&#x27;watchingUrl&#x27;</span>, url);</span><br><span class="line">        <span class="comment">// 等待任务窗口</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">waitTaskWin</span>(url, <span class="string">&#x27;视听学习&#x27;</span>);</span><br><span class="line">        <span class="comment">// 清空链接</span></span><br><span class="line">        <span class="title function_">GM_setValue</span>(<span class="string">&#x27;watchingUrl&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">// 创建提示</span></span><br><span class="line">        <span class="title function_">createTip</span>(<span class="string">`完成观看第 <span class="subst">$&#123;<span class="built_in">Number</span>(i) + <span class="number">1</span>&#125;</span> 个视频!`</span>);</span><br><span class="line">        <span class="comment">// 等待一段时间</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">1500</span>);</span><br><span class="line">        <span class="comment">// 刷新分数数据</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">refreshScoreInfo</span>();</span><br><span class="line">        <span class="comment">// 刷新任务数据</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">refreshTaskList</span>();</span><br><span class="line">        <span class="comment">// 任务完成跳出循环</span></span><br><span class="line">        <span class="keyword">if</span> (taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">active</span> &amp;&amp;</span><br><span class="line">            taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">status</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 任务关闭跳出循环</span></span><br><span class="line">    <span class="keyword">if</span> (!taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">active</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 任务完成状况</span></span><br><span class="line">    <span class="keyword">if</span> (taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">active</span> &amp;&amp; !taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">status</span>) &#123;</span><br><span class="line">        <span class="title function_">log</span>(<span class="string">&#x27;任务未完成, 继续观看视频!&#x27;</span>);</span><br><span class="line">        <span class="comment">// 创建提示</span></span><br><span class="line">        <span class="title function_">createTip</span>(<span class="string">&#x27;任务未完成, 继续观看看视频!&#x27;</span>);</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">watchVideo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 定时刷新定时器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">let</span> scheduleTimer = -<span class="number">1</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 刷新定时任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">refreshScheduleTask</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 清除定时刷新</span></span><br><span class="line">    <span class="built_in">clearInterval</span>(scheduleTimer);</span><br><span class="line">    <span class="comment">// 未登录</span></span><br><span class="line">    <span class="keyword">if</span> (!login.<span class="property">value</span>) &#123;</span><br><span class="line">        <span class="comment">// 剩余定时任务</span></span><br><span class="line">        <span class="keyword">const</span> restList = scheduleList.<span class="title function_">filter</span>(<span class="function">(<span class="params">s</span>) =&gt;</span> !<span class="title function_">isLate</span>(s));</span><br><span class="line">        <span class="comment">// 存在剩余任务</span></span><br><span class="line">        <span class="keyword">if</span> (restList.<span class="property">length</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> rest = restList[<span class="number">0</span>];</span><br><span class="line">            <span class="title function_">log</span>(<span class="string">`已设置 <span class="subst">$&#123;rest.time&#125;</span> 的定时任务!`</span>);</span><br><span class="line">            <span class="comment">// 提示</span></span><br><span class="line">            <span class="title function_">createTip</span>(<span class="string">`已设置 <span class="subst">$&#123;rest.time&#125;</span> 的定时任务!`</span>);</span><br><span class="line">            <span class="comment">// 时间</span></span><br><span class="line">            <span class="keyword">let</span> time = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 刷新间隔</span></span><br><span class="line">            <span class="keyword">const</span> interval = <span class="number">10</span>;</span><br><span class="line">            scheduleTimer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!(time++ % interval)) &#123;</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">&#x27;定时刷新正在运行...&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 到达定时</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_">isNow</span>(rest)) &#123;</span><br><span class="line">                    <span class="built_in">clearInterval</span>(scheduleTimer);</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">`执行 <span class="subst">$&#123;rest.time&#125;</span> 的定时任务!`</span>);</span><br><span class="line">                    <span class="comment">// 提示</span></span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">`执行 <span class="subst">$&#123;rest.time&#125;</span> 的定时任务!`</span>);</span><br><span class="line">                    <span class="comment">// 登录</span></span><br><span class="line">                    <span class="title function_">handleLogin</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 清除定时</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">clearScheduleTask</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(scheduleTimer);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 创建学习提示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createTip</span>(<span class="params">text, delay = <span class="number">2</span>, countShow = <span class="literal">false</span>, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> tipWrap = $$(<span class="string">&#x27;.egg_tip_wrap&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">// 提前去除</span></span><br><span class="line">    <span class="keyword">const</span> tips = $$(<span class="string">&#x27;.egg_tip&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (tips.<span class="property">length</span>) &#123;</span><br><span class="line">        tips.<span class="title function_">forEach</span>(<span class="function">(<span class="params">t</span>) =&gt;</span> t.<span class="title function_">delay</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 延迟</span></span><br><span class="line">    <span class="keyword">const</span> delayCount = <span class="title function_">ref</span>(delay);</span><br><span class="line">    <span class="comment">// 文字</span></span><br><span class="line">    <span class="keyword">const</span> textContent = <span class="title function_">ref</span>(text);</span><br><span class="line">    <span class="comment">//显示</span></span><br><span class="line">    <span class="keyword">const</span> show = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="comment">// 延迟显示</span></span><br><span class="line">    <span class="keyword">const</span> delayShow = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="comment">// 销毁</span></span><br><span class="line">    <span class="keyword">let</span> destroyed = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 倒计时结束</span></span><br><span class="line">    <span class="keyword">let</span> done = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 提示</span></span><br><span class="line">    <span class="keyword">const</span> tip = <span class="title class_">Tip</span>(&#123;</span><br><span class="line">        <span class="attr">text</span>: textContent,</span><br><span class="line">        <span class="attr">count</span>: delayCount,</span><br><span class="line">        show,</span><br><span class="line">        delayShow,</span><br><span class="line">        <span class="attr">countShow</span>: <span class="title function_">ref</span>(countShow),</span><br><span class="line">        <span class="attr">callback</span>: <span class="keyword">async</span> (count) =&gt; &#123;</span><br><span class="line">            callback &amp;&amp; (<span class="keyword">await</span> <span class="title function_">callback</span>(count));</span><br><span class="line">            <span class="comment">// 恢复显示</span></span><br><span class="line">            <span class="keyword">if</span> (delayShow.<span class="property">value</span> &amp;&amp; count === delay) &#123;</span><br><span class="line">                delayShow.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 倒计时结束</span></span><br><span class="line">            <span class="keyword">if</span> (count &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                done = <span class="literal">true</span>;</span><br><span class="line">                operate.<span class="title function_">destroy</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 操作</span></span><br><span class="line">    <span class="keyword">const</span> operate = &#123;</span><br><span class="line">        <span class="title function_">destroy</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!destroyed) &#123;</span><br><span class="line">                <span class="comment">// 隐藏</span></span><br><span class="line">                operate.<span class="title function_">hide</span>();</span><br><span class="line">                <span class="comment">// 销毁</span></span><br><span class="line">                destroyed = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        tip.<span class="property">ele</span>.<span class="title function_">remove</span>();</span><br><span class="line">                        <span class="title function_">resolve</span>(<span class="literal">undefined</span>);</span><br><span class="line">                    &#125;, <span class="number">300</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">hide</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!destroyed) &#123;</span><br><span class="line">                show.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">show</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!destroyed) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        show.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">                        <span class="title function_">resolve</span>(<span class="literal">undefined</span>);</span><br><span class="line">                    &#125;, <span class="number">300</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">setText</span>(<span class="params">text</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!destroyed) &#123;</span><br><span class="line">                textContent.<span class="property">value</span> = text;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">waitCountDown</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// 计时器</span></span><br><span class="line">                <span class="keyword">const</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// 结束</span></span><br><span class="line">                    <span class="keyword">if</span> (done) &#123;</span><br><span class="line">                        <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">                        <span class="title function_">resolve</span>(<span class="literal">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, <span class="number">100</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">delay</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!destroyed) &#123;</span><br><span class="line">                delayShow.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">                delayCount.<span class="property">value</span> += <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">assign</span>(tip.<span class="property">ele</span>, operate);</span><br><span class="line">    <span class="comment">// 插入节点</span></span><br><span class="line">    <span class="title function_">mountElement</span>(tip, tipWrap);</span><br><span class="line">    <span class="comment">// 显示</span></span><br><span class="line">    operate.<span class="title function_">show</span>();</span><br><span class="line">    <span class="keyword">return</span> operate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 刷新用户信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">refreshUserInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 未登录</span></span><br><span class="line">    <span class="keyword">if</span> (!login.<span class="property">value</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;用户未登录!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 已存在信息</span></span><br><span class="line">    <span class="keyword">if</span> (userinfo.<span class="property">nick</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;加载用户信息...&#x27;</span>);</span><br><span class="line">    <span class="comment">// 获取用户信息</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">getUserInfo</span>();</span><br><span class="line">    <span class="keyword">if</span> (res) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; avatarMediaUrl = <span class="string">&#x27;&#x27;</span>, <span class="attr">nick</span>: nickRes &#125; = res;</span><br><span class="line">        <span class="keyword">if</span> (nickRes) &#123;</span><br><span class="line">            <span class="comment">// 设置昵称</span></span><br><span class="line">            userinfo.<span class="property">nick</span> = nickRes;</span><br><span class="line">            <span class="comment">// 设置头像</span></span><br><span class="line">            userinfo.<span class="property">avatar</span> = avatarMediaUrl;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;加载用户信息失败!&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 刷新分数信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">refreshScoreInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 未登录</span></span><br><span class="line">    <span class="keyword">if</span> (!login.<span class="property">value</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;用户未登录!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;加载分数信息...&#x27;</span>);</span><br><span class="line">    <span class="comment">// 获取总分</span></span><br><span class="line">    <span class="keyword">const</span> totalScoreRes = <span class="keyword">await</span> <span class="title function_">getTotalScore</span>();</span><br><span class="line">    <span class="comment">// 获取当天总分</span></span><br><span class="line">    <span class="keyword">const</span> todayScoreRes = <span class="keyword">await</span> <span class="title function_">getTodayScore</span>();</span><br><span class="line">    <span class="comment">// 整数值</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Number</span>.<span class="title function_">isInteger</span>(totalScoreRes) &amp;&amp; <span class="title class_">Number</span>.<span class="title function_">isInteger</span>(todayScoreRes)) &#123;</span><br><span class="line">        <span class="comment">// 设置分数</span></span><br><span class="line">        totalScore.<span class="property">value</span> = totalScoreRes;</span><br><span class="line">        todayScore.<span class="property">value</span> = todayScoreRes;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;加载分数信息失败!&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 刷新任务列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">refreshTaskList</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 未登录</span></span><br><span class="line">    <span class="keyword">if</span> (!login.<span class="property">value</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;用户未登录!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">&#x27;加载任务进度...&#x27;</span>);</span><br><span class="line">    <span class="comment">// 原始任务进度</span></span><br><span class="line">    <span class="keyword">const</span> taskProgress = <span class="keyword">await</span> <span class="title function_">getTaskList</span>();</span><br><span class="line">    <span class="keyword">if</span> (taskProgress) &#123;</span><br><span class="line">        <span class="comment">// 登录</span></span><br><span class="line">        taskConfig[<span class="title class_">TaskType</span>.<span class="property">LOGIN</span>].<span class="property">currentScore</span> = taskProgress[<span class="number">2</span>].<span class="property">currentScore</span>;</span><br><span class="line">        taskConfig[<span class="title class_">TaskType</span>.<span class="property">LOGIN</span>].<span class="property">dayMaxScore</span> = taskProgress[<span class="number">2</span>].<span class="property">dayMaxScore</span>;</span><br><span class="line">        taskConfig[<span class="title class_">TaskType</span>.<span class="property">LOGIN</span>].<span class="property">need</span> =</span><br><span class="line">            taskProgress[<span class="number">2</span>].<span class="property">dayMaxScore</span> - taskProgress[<span class="number">2</span>].<span class="property">currentScore</span>;</span><br><span class="line">        <span class="comment">// 文章选读</span></span><br><span class="line">        taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">currentScore</span> = taskProgress[<span class="number">0</span>].<span class="property">currentScore</span>;</span><br><span class="line">        taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">dayMaxScore</span> = taskProgress[<span class="number">0</span>].<span class="property">dayMaxScore</span>;</span><br><span class="line">        taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">need</span> =</span><br><span class="line">            taskProgress[<span class="number">0</span>].<span class="property">dayMaxScore</span> - taskProgress[<span class="number">0</span>].<span class="property">currentScore</span>;</span><br><span class="line">        <span class="comment">// 视听学习</span></span><br><span class="line">        taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">currentScore</span> = taskProgress[<span class="number">1</span>].<span class="property">currentScore</span>;</span><br><span class="line">        taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">dayMaxScore</span> = taskProgress[<span class="number">1</span>].<span class="property">dayMaxScore</span>;</span><br><span class="line">        taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">need</span> =</span><br><span class="line">            taskProgress[<span class="number">1</span>].<span class="property">dayMaxScore</span> - taskProgress[<span class="number">1</span>].<span class="property">currentScore</span>;</span><br><span class="line">        <span class="comment">// 每日答题</span></span><br><span class="line">        taskConfig[<span class="title class_">TaskType</span>.<span class="property">PRACTICE</span>].<span class="property">currentScore</span> = taskProgress[<span class="number">3</span>].<span class="property">currentScore</span>;</span><br><span class="line">        taskConfig[<span class="title class_">TaskType</span>.<span class="property">PRACTICE</span>].<span class="property">dayMaxScore</span> = taskProgress[<span class="number">3</span>].<span class="property">dayMaxScore</span>;</span><br><span class="line">        taskConfig[<span class="title class_">TaskType</span>.<span class="property">PRACTICE</span>].<span class="property">need</span> = taskProgress[<span class="number">3</span>].<span class="property">dayMaxScore</span>;</span><br><span class="line">        <span class="comment">// 更新数据</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> taskConfig) &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; currentScore, dayMaxScore &#125; = taskConfig[i];</span><br><span class="line">            <span class="comment">// 进度</span></span><br><span class="line">            <span class="keyword">const</span> rate = <span class="title class_">Number</span>(((<span class="number">100</span> * currentScore) / dayMaxScore).<span class="title function_">toFixed</span>(<span class="number">1</span>));</span><br><span class="line">            <span class="comment">// 百分比</span></span><br><span class="line">            taskConfig[i].<span class="property">percent</span> = rate;</span><br><span class="line">            <span class="comment">// 分数</span></span><br><span class="line">            taskConfig[i].<span class="property">score</span> = currentScore;</span><br><span class="line">            <span class="comment">// 完成状态</span></span><br><span class="line">            taskConfig[i].<span class="property">status</span> = rate === <span class="number">100</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 重试</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">2000</span>);</span><br><span class="line">    <span class="title function_">refreshTaskList</span>();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Tip</span>(<span class="params">&#123; text, count, show, delayShow, countShow, callback, &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">        <span class="attr">class</span>: <span class="title function_">watchRef</span>([show, delayShow], <span class="function">() =&gt;</span> <span class="string">`egg_tip<span class="subst">$&#123;show.value ? (delayShow.value ? <span class="string">&#x27; active delay&#x27;</span> : <span class="string">&#x27; active&#x27;</span>) : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">    &#125;, [</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;span&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">            <span class="attr">class</span>: <span class="string">&#x27;egg_text&#x27;</span>,</span><br><span class="line">        &#125;, <span class="title function_">createTextNode</span>(text)),</span><br><span class="line">        <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> countShow.<span class="property">value</span></span><br><span class="line">            ? <span class="title function_">createElementNode</span>(<span class="string">&#x27;span&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_countdown&#x27;</span>,</span><br><span class="line">            &#125;, <span class="title function_">createTextNode</span>(<span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`<span class="subst">$&#123;count.value&#125;</span>s`</span>)))</span><br><span class="line">            : <span class="literal">undefined</span>),</span><br><span class="line">    ], &#123;</span><br><span class="line">        <span class="title function_">onMounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="comment">// 倒计时</span></span><br><span class="line">            <span class="keyword">const</span> <span class="title function_">countDown</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">                <span class="comment">// 倒计时回调</span></span><br><span class="line">                <span class="keyword">await</span> <span class="title function_">callback</span>(count.<span class="property">value</span>);</span><br><span class="line">                <span class="comment">// 倒计时结束</span></span><br><span class="line">                <span class="keyword">if</span> (!count.<span class="property">value</span>) &#123;</span><br><span class="line">                    show.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                count.<span class="property">value</span>--;</span><br><span class="line">                <span class="built_in">setTimeout</span>(countDown, <span class="number">1000</span>);</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="title function_">countDown</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 分隔符</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Hr</span>(<span class="params">&#123; text &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">        <span class="attr">class</span>: <span class="string">&#x27;egg_hr_wrap&#x27;</span>,</span><br><span class="line">    &#125;, [</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_hr&#x27;</span> &#125;),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_hr_title&#x27;</span> &#125;, <span class="title function_">createTextNode</span>(text)),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_hr&#x27;</span> &#125;),</span><br><span class="line">    ]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Select</span>(<span class="params">&#123; data, maxlength, placeholder = <span class="string">&#x27;&#x27;</span>, onchange, onblur, value, keep, &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> selectData = <span class="title function_">reactive</span>(data.<span class="title function_">map</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> (&#123; <span class="attr">selected</span>: <span class="literal">false</span>, <span class="attr">active</span>: <span class="literal">false</span>, <span class="attr">ele</span>: <span class="literal">undefined</span>, ...v &#125;)));</span><br><span class="line">    <span class="keyword">const</span> focus = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">const</span> input = <span class="title function_">shallowRef</span>(<span class="literal">undefined</span>);</span><br><span class="line">    <span class="keyword">const</span> list = <span class="title function_">shallowRef</span>(<span class="literal">undefined</span>);</span><br><span class="line">    <span class="keyword">const</span> valueRef = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    value &amp;&amp;</span><br><span class="line">        <span class="title function_">watch</span>(value, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> item = selectData.<span class="title function_">find</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> v.<span class="property">value</span> === value.<span class="property">value</span>);</span><br><span class="line">            valueRef.<span class="property">value</span> = item ? item.<span class="property">label</span> : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (!item) &#123;</span><br><span class="line">                selectData.<span class="title function_">forEach</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> (v.<span class="property">selected</span> = <span class="literal">false</span>));</span><br><span class="line">                list.<span class="property">value</span> &amp;&amp; (list.<span class="property">value</span>.<span class="property">scrollTop</span> = <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">        <span class="attr">class</span>: <span class="string">&#x27;egg_select&#x27;</span>,</span><br><span class="line">    &#125;, [</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;input&#x27;</span>, &#123; <span class="attr">value</span>: valueRef &#125;, &#123;</span><br><span class="line">            <span class="attr">class</span>: <span class="string">&#x27;egg_select_input&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">            placeholder,</span><br><span class="line">            maxlength,</span><br><span class="line">            <span class="attr">ref</span>: input,</span><br><span class="line">            <span class="title function_">onfocus</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (list.<span class="property">value</span> &amp;&amp; input.<span class="property">value</span>) &#123;</span><br><span class="line">                    focus.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">if</span> (input.<span class="property">value</span>.<span class="property">value</span> &amp;&amp; valueRef.<span class="property">value</span>) &#123;</span><br><span class="line">                        <span class="keyword">const</span> index = selectData.<span class="title function_">findIndex</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> v.<span class="property">label</span> === valueRef.<span class="property">value</span>);</span><br><span class="line">                        <span class="keyword">if</span> (index + <span class="number">1</span>) &#123;</span><br><span class="line">                            list.<span class="property">value</span>.<span class="property">scrollTop</span> = selectData[index].<span class="property">ele</span>?.<span class="property">offsetTop</span> || <span class="number">0</span>;</span><br><span class="line">                            selectData.<span class="title function_">forEach</span>(<span class="function">(<span class="params">v, i</span>) =&gt;</span> (v.<span class="property">selected</span> = i === index));</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="title function_">oninput</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (list.<span class="property">value</span> &amp;&amp; input.<span class="property">value</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> &#123; value &#125; = input.<span class="property">value</span>;</span><br><span class="line">                    <span class="comment">// 文本存在</span></span><br><span class="line">                    <span class="keyword">if</span> (value) &#123;</span><br><span class="line">                        <span class="keyword">const</span> index = selectData.<span class="title function_">findIndex</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> v.<span class="property">label</span>.<span class="title function_">includes</span>(value));</span><br><span class="line">                        <span class="comment">// 存在匹配</span></span><br><span class="line">                        <span class="keyword">if</span> (index + <span class="number">1</span>) &#123;</span><br><span class="line">                            list.<span class="property">value</span>.<span class="property">scrollTop</span> = selectData[index].<span class="property">ele</span>?.<span class="property">offsetTop</span> || <span class="number">0</span>;</span><br><span class="line">                            selectData.<span class="title function_">forEach</span>(<span class="function">(<span class="params">v, i</span>) =&gt;</span> &#123;</span><br><span class="line">                                v.<span class="property">active</span> = i === index;</span><br><span class="line">                                v.<span class="property">active</span> &amp;&amp;</span><br><span class="line">                                    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                                        v.<span class="property">active</span> = <span class="literal">false</span>;</span><br><span class="line">                                    &#125;, <span class="number">300</span>);</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 清除</span></span><br><span class="line">                    selectData.<span class="title function_">forEach</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> (v.<span class="property">active</span> = v.<span class="property">selected</span> = <span class="literal">false</span>));</span><br><span class="line">                    list.<span class="property">value</span>.<span class="property">scrollTop</span> = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="title function_">onblur</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (list.<span class="property">value</span> &amp;&amp; input.<span class="property">value</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> item = selectData.<span class="title function_">find</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> v.<span class="property">selected</span>);</span><br><span class="line">                    <span class="comment">// 关闭选项</span></span><br><span class="line">                    <span class="keyword">if</span> (item || !input.<span class="property">value</span>.<span class="property">value</span>) &#123;</span><br><span class="line">                        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                            focus.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">                        &#125;, <span class="number">100</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 恢复文本</span></span><br><span class="line">                    <span class="keyword">if</span> (item &amp;&amp; input.<span class="property">value</span>.<span class="property">value</span> !== item.<span class="property">label</span>) &#123;</span><br><span class="line">                        input.<span class="property">value</span>.<span class="property">value</span> = item.<span class="property">label</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 保留文本</span></span><br><span class="line">                    <span class="keyword">if</span> (!item &amp;&amp; keep) &#123;</span><br><span class="line">                        input.<span class="property">value</span>.<span class="property">value</span> = valueRef.<span class="property">value</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    onblur &amp;&amp;</span><br><span class="line">                        <span class="title function_">onblur</span>(item ? &#123; <span class="attr">label</span>: item.<span class="property">label</span>, <span class="attr">value</span>: item.<span class="property">value</span> &#125; : <span class="literal">undefined</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">            <span class="attr">class</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`egg_select_list<span class="subst">$&#123;focus.value ? <span class="string">&#x27;&#x27;</span> : <span class="string">&#x27; hide&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">            <span class="attr">ref</span>: list,</span><br><span class="line">        &#125;, selectData.<span class="title function_">map</span>(<span class="function">(<span class="params">v, index</span>) =&gt;</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">            <span class="attr">class</span>: <span class="title function_">watchRef</span>(<span class="function">() =&gt;</span> [v.<span class="property">selected</span>, v.<span class="property">active</span>], <span class="function">() =&gt;</span> <span class="string">`egg_select_item<span class="subst">$&#123;v.selected ? <span class="string">&#x27; selected&#x27;</span> : v.active ? <span class="string">&#x27; active&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">            <span class="attr">ref</span>: <span class="function">(<span class="params">e</span>) =&gt;</span> (v.<span class="property">ele</span> = e),</span><br><span class="line">            <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (valueRef.<span class="property">value</span> !== v.<span class="property">label</span>) &#123;</span><br><span class="line">                    onchange &amp;&amp; <span class="title function_">onchange</span>(&#123; <span class="attr">label</span>: v.<span class="property">label</span>, <span class="attr">value</span>: v.<span class="property">value</span> &#125;);</span><br><span class="line">                    selectData.<span class="title function_">forEach</span>(<span class="function">(<span class="params">v, i</span>) =&gt;</span> &#123;</span><br><span class="line">                        v.<span class="property">selected</span> = i === index;</span><br><span class="line">                        v.<span class="property">selected</span> &amp;&amp; (valueRef.<span class="property">value</span> = v.<span class="property">label</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                focus.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">            &#125;, <span class="number">300</span>),</span><br><span class="line">        &#125;, <span class="title function_">createTextNode</span>(v.<span class="property">label</span>)))),</span><br><span class="line">    ]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 答题按钮</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ExamBtn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">        <span class="attr">class</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`egg_exam_btn<span class="subst">$&#123;examPause.value ? <span class="string">&#x27; manual&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">        <span class="attr">onclick</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            examPause.<span class="property">value</span> = !examPause.<span class="property">value</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;, <span class="title function_">createTextNode</span>(<span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`<span class="subst">$&#123;examPause.value ? <span class="string">&#x27;开启自动答题&#x27;</span> : <span class="string">&#x27;关闭自动答题&#x27;</span>&#125;</span>`</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 任务窗口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Frame</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 最大化</span></span><br><span class="line">    <span class="keyword">const</span> max = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="comment">// 容器</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">        <span class="attr">class</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`egg_frame_wrap<span class="subst">$&#123;frame.show ? <span class="string">&#x27;&#x27;</span> : <span class="string">&#x27; hide&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">    &#125;, <span class="title function_">watchRef</span>(<span class="function">() =&gt;</span> [login.<span class="property">value</span>, settings[<span class="title class_">SettingType</span>.<span class="property">SAME_TAB</span>]], <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 同屏任务</span></span><br><span class="line">        <span class="keyword">if</span> (login.<span class="property">value</span> &amp;&amp; settings[<span class="title class_">SettingType</span>.<span class="property">SAME_TAB</span>]) &#123;</span><br><span class="line">            <span class="keyword">return</span> [</span><br><span class="line">                <span class="comment">// 遮罩</span></span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_frame_mask&#x27;</span> &#125;),</span><br><span class="line">                <span class="comment">// 窗口内容</span></span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">class</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`egg_frame_content_wrap <span class="subst">$&#123;max.value ? <span class="string">&#x27; max&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">                &#125;, [</span><br><span class="line">                    <span class="comment">// 窗口控制</span></span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_frame_controls_wrap&#x27;</span> &#125;, [</span><br><span class="line">                        <span class="comment">// 标题</span></span><br><span class="line">                        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                            <span class="attr">class</span>: <span class="string">&#x27;egg_frame_title&#x27;</span>,</span><br><span class="line">                        &#125;),</span><br><span class="line">                        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                            <span class="attr">class</span>: <span class="string">&#x27;egg_frame_controls&#x27;</span>,</span><br><span class="line">                        &#125;, [</span><br><span class="line">                            <span class="comment">// 隐藏</span></span><br><span class="line">                            <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">class</span>: <span class="string">&#x27;egg_frame_btn&#x27;</span>,</span><br><span class="line">                                <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                                <span class="attr">title</span>: <span class="string">&#x27;隐藏&#x27;</span>,</span><br><span class="line">                                <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                                    <span class="comment">// 隐藏窗口</span></span><br><span class="line">                                    frame.<span class="property">show</span> = <span class="literal">false</span>;</span><br><span class="line">                                &#125;, <span class="number">300</span>),</span><br><span class="line">                            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                                <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">                            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">d</span>: <span class="string">&#x27;M863.7 552.5H160.3c-10.6 0-19.2-8.6-19.2-19.2v-41.7c0-10.6 8.6-19.2 19.2-19.2h703.3c10.6 0 19.2 8.6 19.2 19.2v41.7c0 10.6-8.5 19.2-19.1 19.2z&#x27;</span>,</span><br><span class="line">                            &#125;))),</span><br><span class="line">                            <span class="comment">// 改变大小</span></span><br><span class="line">                            <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">class</span>: <span class="string">&#x27;egg_frame_btn&#x27;</span>,</span><br><span class="line">                                <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                                <span class="attr">title</span>: <span class="string">&#x27;缩放&#x27;</span>,</span><br><span class="line">                                <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                                    max.<span class="property">value</span> = !max.<span class="property">value</span>;</span><br><span class="line">                                &#125;, <span class="number">300</span>),</span><br><span class="line">                            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                                <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">                            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">d</span>: <span class="string">&#x27;M609.52 584.92a35.309 35.309 0 0 1 24.98-10.36c9.37 0 18.36 3.73 24.98 10.36l189.29 189.22-0.07-114.3 0.57-6.35c3.25-17.98 19.7-30.5 37.9-28.85 18.2 1.65 32.12 16.92 32.09 35.2v200.23c-0.05 1.49-0.19 2.97-0.42 4.45l-0.21 1.13c-0.22 1.44-0.55 2.85-0.99 4.24l-0.57 1.62-0.56 1.41a34.163 34.163 0 0 1-7.62 11.36l2.12-2.4-0.14 0.14-0.92 1.06-1.06 1.2-0.57 0.57-0.56 0.57a36.378 36.378 0 0 1-16.23 8.39l-3.53 0.5-4.02 0.35h-199.6l-6.35-0.63c-16.73-3.06-28.9-17.63-28.93-34.64l0.56-6.35c3.07-16.76 17.67-28.93 34.71-28.92l114.29-0.14-189.07-189.1-4.09-4.94c-9.71-14.01-8.01-32.95 4.02-45.02z m-162.06 0c12.06 12.05 13.78 30.99 4.09 45.01l-4.09 4.94-189.15 189.08 114.3 0.14c17.04-0.01 31.65 12.17 34.71 28.92l0.57 6.35c-0.03 17.01-12.19 31.58-28.92 34.64l-6.35 0.63H173.09l-4.23-0.42-3.39-0.49a36.38 36.38 0 0 1-17.36-9.52l-1.06-1.13-0.98-1.13 0.98 1.06-1.97-2.26 0.85 1.06-0.42-0.56a35.137 35.137 0 0 1-3.74-5.64l-1.13-2.68a34.71 34.71 0 0 1-2.11-7.33l-0.28-1.13c-0.21-1.47-0.33-2.96-0.36-4.45V659.78c-0.03-18.28 13.89-33.55 32.09-35.2 18.2-1.65 34.65 10.87 37.9 28.85l0.57 6.35-0.07 114.36 189.29-189.22c13.77-13.77 36.11-13.77 49.88 0h-0.09z m-74.71-471.71l6.35 0.57c16.76 3.06 28.93 17.67 28.92 34.71l-0.63 6.35c-3.07 16.76-17.67 28.93-34.71 28.92l-114.3 0.14 189.15 189.08 4.09 4.94c10.26 15.02 7.42 35.37-6.55 47.01-13.98 11.63-34.51 10.74-47.42-2.07L208.29 233.71l0.07 114.3-0.57 6.35c-3.25 17.98-19.7 30.5-37.9 28.85-18.2-1.65-32.12-16.92-32.09-35.2V147.78c0-1.55 0.14-3.03 0.35-4.51l0.21-1.13c0.24-1.44 0.59-2.85 1.06-4.23a34.97 34.97 0 0 1 8.68-14.39l-2.12 2.4-0.42 0.57 1.55-1.84-0.99 1.06 0.92-0.98 2.26-2.33c3.04-2.73 6.52-4.92 10.3-6.49l2.82-1.06c3.45-1.07 7.04-1.62 10.65-1.62l-3.6 0.14h0.49l1.48-0.14h201.31z m512.91 0l1.41 0.14h0.42c2.43 0.29 4.84 0.79 7.19 1.48l2.82 1.06 2.61 1.2 3.04 1.76c2.09 1.33 4.03 2.89 5.78 4.66l1.13 1.2 0.78 0.98 0.21 0.14 0.49 0.64 2.33 3.17c2.35 3.83 3.98 8.07 4.8 12.49l0.21 1.13c0.21 1.48 0.35 2.96 0.35 4.44v200.37c-0.16 18.13-14.03 33.19-32.08 34.83-18.06 1.64-34.42-10.67-37.83-28.48l-0.57-6.35V233.65L659.54 422.87c-12.9 12.95-33.56 13.91-47.59 2.2-14.04-11.71-16.81-32.2-6.38-47.22l4.02-4.86 189.22-189.08-114.29-0.14c-17.06 0.04-31.71-12.14-34.78-28.92l-0.63-6.35c-0.01-17.04 12.16-31.65 28.93-34.71l6.35-0.57h201.27z m0 0&#x27;</span>,</span><br><span class="line">                            &#125;))),</span><br><span class="line">                            <span class="comment">// 关闭</span></span><br><span class="line">                            <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">class</span>: <span class="string">&#x27;egg_frame_btn&#x27;</span>,</span><br><span class="line">                                <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                                <span class="attr">title</span>: <span class="string">&#x27;关闭&#x27;</span>,</span><br><span class="line">                                <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                                    <span class="comment">// 关闭窗口</span></span><br><span class="line">                                    <span class="title function_">closeFrame</span>();</span><br><span class="line">                                &#125;, <span class="number">300</span>),</span><br><span class="line">                            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                                <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">                            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">d</span>: <span class="string">&#x27;M453.44 512L161.472 220.032a41.408 41.408 0 0 1 58.56-58.56L512 453.44 803.968 161.472a41.408 41.408 0 0 1 58.56 58.56L570.56 512l291.968 291.968a41.408 41.408 0 0 1-58.56 58.56L512 570.56 220.032 862.528a41.408 41.408 0 0 1-58.56-58.56L453.44 512z&#x27;</span>,</span><br><span class="line">                            &#125;))),</span><br><span class="line">                        ]),</span><br><span class="line">                    ]),</span><br><span class="line">                    <span class="comment">// 窗口内容</span></span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                        <span class="attr">class</span>: <span class="string">&#x27;egg_frame_content&#x27;</span>,</span><br><span class="line">                    &#125;, <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> frame.<span class="property">src</span></span><br><span class="line">                        ? [</span><br><span class="line">                            <span class="title function_">createElementNode</span>(<span class="string">&#x27;iframe&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">class</span>: <span class="string">&#x27;egg_frame&#x27;</span>,</span><br><span class="line">                                <span class="attr">src</span>: frame.<span class="property">src</span>,</span><br><span class="line">                                <span class="title function_">ref</span>(<span class="params">ele</span>) &#123;</span><br><span class="line">                                    frame.<span class="property">ele</span> = ele;</span><br><span class="line">                                &#125;,</span><br><span class="line">                            &#125;, <span class="literal">undefined</span>),</span><br><span class="line">                        ]</span><br><span class="line">                        : <span class="literal">undefined</span>)),</span><br><span class="line">                ], &#123;</span><br><span class="line">                    <span class="title function_">onMounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="comment">// 隐藏窗口</span></span><br><span class="line">                        <span class="title function_">watch</span>(<span class="function">() =&gt;</span> [</span><br><span class="line">                            taskStatus.<span class="property">value</span>,</span><br><span class="line">                            running.<span class="property">value</span>,</span><br><span class="line">                            settings[<span class="title class_">SettingType</span>.<span class="property">SAME_TAB</span>],</span><br><span class="line">                            settings[<span class="title class_">SettingType</span>.<span class="property">SILENT_RUN</span>],</span><br><span class="line">                        ], <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                            <span class="comment">// 同屏任务</span></span><br><span class="line">                            <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">SAME_TAB</span>] &amp;&amp;</span><br><span class="line">                                (taskStatus.<span class="property">value</span> === <span class="title class_">TaskStatusType</span>.<span class="property">START</span> ||</span><br><span class="line">                                    taskStatus.<span class="property">value</span> === <span class="title class_">TaskStatusType</span>.<span class="property">PAUSE</span> ||</span><br><span class="line">                                    running.<span class="property">value</span>)) &#123;</span><br><span class="line">                                <span class="comment">// 设置窗口显示</span></span><br><span class="line">                                frame.<span class="property">show</span> = !settings[<span class="title class_">SettingType</span>.<span class="property">SILENT_RUN</span>];</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;),</span><br><span class="line">            ];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;), &#123;</span><br><span class="line">        <span class="title function_">onMounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="comment">// 关闭窗口</span></span><br><span class="line">            <span class="title function_">watch</span>(<span class="function">() =&gt;</span> [login.<span class="property">value</span>, settings[<span class="title class_">SettingType</span>.<span class="property">SAME_TAB</span>]], <span class="function">() =&gt;</span> login.<span class="property">value</span> &amp;&amp;</span><br><span class="line">                (settings[<span class="title class_">SettingType</span>.<span class="property">SAME_TAB</span>] ? <span class="title function_">closeWin</span>() : <span class="title function_">closeFrame</span>()));</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">LoginItem</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> login.<span class="property">value</span></span><br><span class="line">            ? <span class="literal">undefined</span></span><br><span class="line">            : <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_login_item&#x27;</span>,</span><br><span class="line">            &#125;, [</span><br><span class="line">                <span class="comment">// 登录按钮</span></span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                    <span class="attr">class</span>: <span class="string">&#x27;egg_login_btn&#x27;</span>,</span><br><span class="line">                    <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">                        <span class="comment">// 开始登录</span></span><br><span class="line">                        <span class="title function_">handleLogin</span>();</span><br><span class="line">                    &#125;, <span class="number">300</span>),</span><br><span class="line">                &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;扫码登录&#x27;</span>)),</span><br><span class="line">                <span class="comment">// 窗口</span></span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">class</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`egg_login_img_wrap<span class="subst">$&#123;loginQRCodeShow.value ? <span class="string">&#x27; active&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">                &#125;, <span class="title function_">createElementNode</span>(<span class="string">&#x27;img&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">class</span>: <span class="string">&#x27;egg_login_img&#x27;</span>,</span><br><span class="line">                &#125;)),</span><br><span class="line">            ], &#123;</span><br><span class="line">                <span class="title function_">onMounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="title function_">watch</span>(<span class="function">() =&gt;</span> settings[<span class="title class_">SettingType</span>.<span class="property">SCHEDULE_RUN</span>], <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        <span class="comment">// 未开启定时展示二维码</span></span><br><span class="line">                        <span class="keyword">if</span> (!settings[<span class="title class_">SettingType</span>.<span class="property">SCHEDULE_RUN</span>]) &#123;</span><br><span class="line">                            <span class="comment">// 开始登录</span></span><br><span class="line">                            <span class="title function_">handleLogin</span>();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, <span class="literal">true</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">InfoItem</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (login.<span class="property">value</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_info_item&#x27;</span>,</span><br><span class="line">            &#125;, [</span><br><span class="line">                <span class="comment">// 用户信息</span></span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_userinfo&#x27;</span> &#125;, [</span><br><span class="line">                    <span class="comment">// 头像</span></span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_avatar&#x27;</span> &#125;, <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> [</span><br><span class="line">                            userinfo.<span class="property">avatar</span></span><br><span class="line">                                ? <span class="title function_">createElementNode</span>(<span class="string">&#x27;img&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                    <span class="attr">src</span>: userinfo.<span class="property">avatar</span>,</span><br><span class="line">                                    <span class="attr">class</span>: <span class="string">&#x27;egg_avatar_img&#x27;</span>,</span><br><span class="line">                                &#125;)</span><br><span class="line">                                : <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                    <span class="attr">class</span>: <span class="string">&#x27;egg_avatar_nick&#x27;</span>,</span><br><span class="line">                                &#125;, <span class="title function_">createTextNode</span>(<span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> userinfo.<span class="property">nick</span>.<span class="title function_">substring</span>(<span class="number">1</span>, <span class="number">3</span>)))),</span><br><span class="line">                        ];</span><br><span class="line">                    &#125;)),</span><br><span class="line">                    <span class="comment">// 昵称</span></span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_nick&#x27;</span> &#125;, <span class="title function_">createTextNode</span>(<span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> userinfo.<span class="property">nick</span>))),</span><br><span class="line">                ]),</span><br><span class="line">                <span class="comment">// 退出按钮</span></span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                    <span class="attr">class</span>: <span class="string">&#x27;egg_login_btn&#x27;</span>,</span><br><span class="line">                    <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        <span class="comment">// 退出登录</span></span><br><span class="line">                        <span class="title function_">handleLogout</span>();</span><br><span class="line">                    &#125;, <span class="number">300</span>),</span><br><span class="line">                &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;退出&#x27;</span>)),</span><br><span class="line">            ], &#123;</span><br><span class="line">                <span class="title function_">onMounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="comment">// 刷新用户信息</span></span><br><span class="line">                    <span class="title function_">refreshUserInfo</span>();</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 分数详情</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ScoreItem</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (login.<span class="property">value</span>) &#123;</span><br><span class="line">            <span class="comment">// 分数显示</span></span><br><span class="line">            <span class="keyword">const</span> scoreShow = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line">            <span class="comment">// 分数信息</span></span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_score_item&#x27;</span>,</span><br><span class="line">            &#125;, <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_scoreinfo&#x27;</span> &#125;, [</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">class</span>: <span class="string">&#x27;egg_totalscore&#x27;</span>,</span><br><span class="line">                &#125;, [</span><br><span class="line">                    <span class="title function_">createTextNode</span>(<span class="string">&#x27;总积分&#x27;</span>),</span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;span&#x27;</span>, <span class="literal">undefined</span>, <span class="literal">undefined</span>, <span class="title function_">createTextNode</span>(totalScore)),</span><br><span class="line">                ]),</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">class</span>: <span class="string">&#x27;egg_todayscore&#x27;</span>,</span><br><span class="line">                &#125;, [</span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                        <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                        <span class="attr">class</span>: <span class="string">&#x27;egg_todayscore_btn&#x27;</span>,</span><br><span class="line">                        <span class="attr">title</span>: <span class="string">&#x27;查看分数详情&#x27;</span>,</span><br><span class="line">                        <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                            scoreShow.<span class="property">value</span> = !scoreShow.<span class="property">value</span>;</span><br><span class="line">                        &#125;, <span class="number">300</span>),</span><br><span class="line">                        <span class="attr">onblur</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                            scoreShow.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;, [</span><br><span class="line">                        <span class="title function_">createTextNode</span>(<span class="string">&#x27;当天分数&#x27;</span>),</span><br><span class="line">                        <span class="comment">// 当天分数</span></span><br><span class="line">                        <span class="title function_">createElementNode</span>(<span class="string">&#x27;span&#x27;</span>, <span class="literal">undefined</span>, <span class="literal">undefined</span>, <span class="title function_">createTextNode</span>(todayScore)),</span><br><span class="line">                        <span class="comment">// icon</span></span><br><span class="line">                        <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                            <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                            <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">                        &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                            <span class="attr">d</span>: <span class="string">&#x27;M332.16 883.84a40.96 40.96 0 0 0 58.24 0l338.56-343.04a40.96 40.96 0 0 0 0-58.24L390.4 140.16a40.96 40.96 0 0 0-58.24 58.24L640 512l-307.84 314.24a40.96 40.96 0 0 0 0 57.6z&#x27;</span>,</span><br><span class="line">                        &#125;)),</span><br><span class="line">                        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                            <span class="attr">class</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`egg_score_details<span class="subst">$&#123;scoreShow.value ? <span class="string">&#x27;&#x27;</span> : <span class="string">&#x27; hide&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">                        &#125;, [</span><br><span class="line">                            <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_score_title&#x27;</span> &#125;, [</span><br><span class="line">                                <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                    <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                                    <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">                                &#125;, [</span><br><span class="line">                                    <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                        <span class="attr">d</span>: <span class="string">&#x27;M314.81 304.01h415.86v58.91H314.81zM314.81 440.24h415.86v58.91H314.81z&#x27;</span>,</span><br><span class="line">                                    &#125;),</span><br><span class="line">                                    <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                        <span class="attr">d</span>: <span class="string">&#x27;M814.8 892.74h-8.64l-283.51-182-283.51 182h-8.64A69.85 69.85 0 0 1 160.72 823V188.22a69.85 69.85 0 0 1 69.77-69.77H814.8a69.85 69.85 0 0 1 69.77 69.77V823a69.85 69.85 0 0 1-69.77 69.74zM230.5 177.35a10.87 10.87 0 0 0-10.86 10.86V823a10.86 10.86 0 0 0 5 9.11l298.01-191.42 298.06 191.38a10.86 10.86 0 0 0 5-9.11V188.22a10.87 10.87 0 0 0-10.86-10.86z&#x27;</span>,</span><br><span class="line">                                    &#125;),</span><br><span class="line">                                ]),</span><br><span class="line">                                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                    <span class="attr">class</span>: <span class="string">&#x27;egg_score_title_text&#x27;</span>,</span><br><span class="line">                                &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;积分详情&#x27;</span>)),</span><br><span class="line">                            ]),</span><br><span class="line">                            ...taskConfig.<span class="title function_">map</span>(<span class="function">(<span class="params">task</span>) =&gt;</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_score_item&#x27;</span> &#125;, [</span><br><span class="line">                                <span class="title function_">createTextNode</span>(task.<span class="property">title</span>),</span><br><span class="line">                                <span class="title function_">createElementNode</span>(<span class="string">&#x27;span&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                    <span class="attr">class</span>: <span class="string">&#x27;egg_score_detail&#x27;</span>,</span><br><span class="line">                                &#125;, <span class="title function_">createTextNode</span>(<span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> task.<span class="property">score</span>))),</span><br><span class="line">                            ])),</span><br><span class="line">                        ]),</span><br><span class="line">                    ]),</span><br><span class="line">                ]),</span><br><span class="line">            ]), &#123;</span><br><span class="line">                <span class="title function_">onMounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="comment">// 刷新分数信息</span></span><br><span class="line">                    <span class="title function_">refreshScoreInfo</span>();</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 设置普通项</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">NomalItem</span>(<span class="params">&#123; title, tip, checked, onchange, &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_setting_item&#x27;</span> &#125;, [</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_label_wrap&#x27;</span> &#125;, [</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;label&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_task_title&#x27;</span> &#125;, [</span><br><span class="line">                <span class="title function_">createTextNode</span>(title),</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;span&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">class</span>: <span class="string">&#x27;egg_detail&#x27;</span>,</span><br><span class="line">                    <span class="attr">title</span>: tip,</span><br><span class="line">                &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;i&#x27;</span>)),</span><br><span class="line">            ]),</span><br><span class="line">        ]),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;input&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">            <span class="attr">title</span>: tip,</span><br><span class="line">            <span class="attr">class</span>: <span class="string">&#x27;egg_switch&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;checkbox&#x27;</span>,</span><br><span class="line">            checked,</span><br><span class="line">            onchange,</span><br><span class="line">        &#125;),</span><br><span class="line">    ]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 设置任务项</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">TaskItem</span>(<span class="params">&#123; title, tip, checked, percent, currentScore, dayMaxScore, onchange, immutable, &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">        <span class="attr">class</span>: <span class="string">&#x27;egg_task_item&#x27;</span>,</span><br><span class="line">    &#125;, [</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_label_wrap&#x27;</span> &#125;, [</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_task_title_wrap&#x27;</span> &#125;, [</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_task_title&#x27;</span> &#125;, <span class="title function_">createTextNode</span>(title)),</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_task_progress_wrap&#x27;</span> &#125;, [</span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                        <span class="attr">class</span>: <span class="string">&#x27;egg_task_current&#x27;</span>,</span><br><span class="line">                    &#125;, <span class="title function_">createTextNode</span>(currentScore)),</span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                        <span class="attr">class</span>: <span class="string">&#x27;egg_task_max&#x27;</span>,</span><br><span class="line">                    &#125;, <span class="title function_">createTextNode</span>(<span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`/<span class="subst">$&#123;dayMaxScore.value&#125;</span>`</span>))),</span><br><span class="line">                ]),</span><br><span class="line">            ]),</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_progress&#x27;</span> &#125;, [</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_track&#x27;</span> &#125;, <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">class</span>: <span class="string">&#x27;egg_bar&#x27;</span>,</span><br><span class="line">                    <span class="attr">style</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`width: <span class="subst">$&#123;percent.value&#125;</span>%;`</span>),</span><br><span class="line">                &#125;)),</span><br><span class="line">            ]),</span><br><span class="line">        ]),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;input&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">            <span class="attr">title</span>: tip,</span><br><span class="line">            <span class="attr">class</span>: <span class="string">&#x27;egg_switch&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;checkbox&#x27;</span>,</span><br><span class="line">            checked,</span><br><span class="line">            onchange,</span><br><span class="line">            <span class="attr">disabled</span>: immutable,</span><br><span class="line">        &#125;),</span><br><span class="line">    ]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 任务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">TaskList</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 处理任务设置变化</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleTaskChange</span> = (<span class="params">e, type, title</span>) =&gt; &#123;</span><br><span class="line">        <span class="comment">// 开关</span></span><br><span class="line">        <span class="keyword">const</span> &#123; checked &#125; = e.<span class="property">target</span>;</span><br><span class="line">        <span class="keyword">if</span> (taskConfig[type].<span class="property">active</span> !== checked) &#123;</span><br><span class="line">            taskConfig[type].<span class="property">active</span> = checked;</span><br><span class="line">            <span class="comment">// 设置</span></span><br><span class="line">            <span class="title function_">GM_setValue</span>(<span class="string">&#x27;taskConfig&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(taskConfig));</span><br><span class="line">            <span class="comment">// 创建提示</span></span><br><span class="line">            <span class="title function_">createTip</span>(<span class="string">`<span class="subst">$&#123;title&#125;</span> <span class="subst">$&#123;checked ? <span class="string">&#x27;打开&#x27;</span> : <span class="string">&#x27;关闭&#x27;</span>&#125;</span>!`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 登录加载</span></span><br><span class="line">    <span class="title function_">watch</span>(login, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (login.<span class="property">value</span>) &#123;</span><br><span class="line">            <span class="comment">// 加载任务列表</span></span><br><span class="line">            <span class="keyword">await</span> <span class="title function_">refreshTaskList</span>();</span><br><span class="line">            <span class="comment">// 未完成任务</span></span><br><span class="line">            <span class="keyword">if</span> (taskConfig.<span class="title function_">some</span>(<span class="function">(<span class="params">task</span>) =&gt;</span> task.<span class="property">active</span> &amp;&amp; !task.<span class="property">status</span>)) &#123;</span><br><span class="line">                <span class="comment">// 全局暂停</span></span><br><span class="line">                <span class="title function_">GM_setValue</span>(<span class="string">&#x27;pauseStudy&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line">                <span class="comment">// 加载完毕</span></span><br><span class="line">                taskStatus.<span class="property">value</span> = <span class="title class_">TaskStatusType</span>.<span class="property">LOADED</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 任务完毕</span></span><br><span class="line">            taskStatus.<span class="property">value</span> = <span class="title class_">TaskStatusType</span>.<span class="property">FINISH</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">        <span class="attr">class</span>: <span class="string">&#x27;egg_task_list&#x27;</span>,</span><br><span class="line">    &#125;, taskConfig.<span class="title function_">map</span>(<span class="function">(<span class="params">label</span>) =&gt;</span> label.<span class="property">immutable</span></span><br><span class="line">        ? <span class="title class_">TaskItem</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: label.<span class="property">title</span>,</span><br><span class="line">            <span class="attr">tip</span>: label.<span class="property">tip</span>,</span><br><span class="line">            <span class="attr">checked</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> label.<span class="property">active</span>),</span><br><span class="line">            <span class="attr">percent</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> label.<span class="property">percent</span>),</span><br><span class="line">            <span class="attr">currentScore</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> label.<span class="property">currentScore</span>),</span><br><span class="line">            <span class="attr">dayMaxScore</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> label.<span class="property">dayMaxScore</span>),</span><br><span class="line">            <span class="attr">onchange</span>: <span class="title function_">debounce</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">handleTaskChange</span>(e, label.<span class="property">type</span>, label.<span class="property">title</span>);</span><br><span class="line">            &#125;, <span class="number">300</span>),</span><br><span class="line">            <span class="attr">immutable</span>: label.<span class="property">immutable</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">        : <span class="title class_">TaskItem</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: label.<span class="property">title</span>,</span><br><span class="line">            <span class="attr">tip</span>: label.<span class="property">tip</span>,</span><br><span class="line">            <span class="attr">checked</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> label.<span class="property">active</span>),</span><br><span class="line">            <span class="attr">percent</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> label.<span class="property">percent</span>),</span><br><span class="line">            <span class="attr">currentScore</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> label.<span class="property">currentScore</span>),</span><br><span class="line">            <span class="attr">dayMaxScore</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> label.<span class="property">dayMaxScore</span>),</span><br><span class="line">            <span class="attr">onchange</span>: <span class="title function_">debounce</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">handleTaskChange</span>(e, label.<span class="property">type</span>, label.<span class="property">title</span>);</span><br><span class="line">            &#125;, <span class="number">300</span>),</span><br><span class="line">            <span class="attr">immutable</span>: label.<span class="property">immutable</span>,</span><br><span class="line">        &#125;)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 任务按钮</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">TaskBtn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (login.<span class="property">value</span>) &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@description</span> 学习</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">study</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="comment">// 创建提示</span></span><br><span class="line">                <span class="title function_">createTip</span>(<span class="string">&#x27;开始学习!&#x27;</span>);</span><br><span class="line">                <span class="comment">// 暂停</span></span><br><span class="line">                <span class="keyword">await</span> <span class="title function_">studyPauseLock</span>();</span><br><span class="line">                <span class="comment">// 文章选读</span></span><br><span class="line">                <span class="keyword">if</span> (taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">active</span> &amp;&amp;</span><br><span class="line">                    !taskConfig[<span class="title class_">TaskType</span>.<span class="property">READ</span>].<span class="property">status</span>) &#123;</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">&#x27;任务一: 文章选读&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 创建提示</span></span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">&#x27;任务一: 文章选读&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 暂停</span></span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">studyPauseLock</span>();</span><br><span class="line">                    <span class="comment">// 看新闻</span></span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">readNews</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">&#x27;任务一: 文章选读已完成!&#x27;</span>);</span><br><span class="line">                <span class="comment">// 视听学习</span></span><br><span class="line">                <span class="keyword">if</span> (taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">active</span> &amp;&amp;</span><br><span class="line">                    !taskConfig[<span class="title class_">TaskType</span>.<span class="property">WATCH</span>].<span class="property">status</span>) &#123;</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">&#x27;任务二: 视听学习&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 创建提示</span></span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">&#x27;任务二: 视听学习&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 暂停</span></span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">studyPauseLock</span>();</span><br><span class="line">                    <span class="comment">// 看视频</span></span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">watchVideo</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">&#x27;任务二: 视听学习已完成!&#x27;</span>);</span><br><span class="line">                <span class="comment">// 每日答题</span></span><br><span class="line">                <span class="keyword">if</span> (taskConfig[<span class="title class_">TaskType</span>.<span class="property">PRACTICE</span>].<span class="property">active</span> &amp;&amp;</span><br><span class="line">                    !taskConfig[<span class="title class_">TaskType</span>.<span class="property">PRACTICE</span>].<span class="property">status</span>) &#123;</span><br><span class="line">                    <span class="title function_">log</span>(<span class="string">&#x27;任务三: 每日答题&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 创建提示</span></span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">&#x27;任务三: 每日答题&#x27;</span>);</span><br><span class="line">                    <span class="comment">// 暂停</span></span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">studyPauseLock</span>();</span><br><span class="line">                    <span class="comment">// 做每日答题</span></span><br><span class="line">                    <span class="keyword">await</span> <span class="title function_">doExamPractice</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">&#x27;任务三: 每日答题已完成!&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@description</span> 暂停任务</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">pauseTask</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="comment">// 全局暂停</span></span><br><span class="line">                <span class="title function_">GM_setValue</span>(<span class="string">&#x27;pauseStudy&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">                taskStatus.<span class="property">value</span> = <span class="title class_">TaskStatusType</span>.<span class="property">PAUSE</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@description</span> 继续任务</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">continueTask</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="comment">// 全局暂停</span></span><br><span class="line">                <span class="title function_">GM_setValue</span>(<span class="string">&#x27;pauseStudy&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line">                taskStatus.<span class="property">value</span> = <span class="title class_">TaskStatusType</span>.<span class="property">START</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@description</span> 开始任务</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">startTask</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="comment">// 未完成任务</span></span><br><span class="line">                <span class="keyword">if</span> (taskConfig.<span class="title function_">some</span>(<span class="function">(<span class="params">task</span>) =&gt;</span> task.<span class="property">active</span> &amp;&amp; !task.<span class="property">status</span>)) &#123;</span><br><span class="line">                    <span class="comment">// 开始任务</span></span><br><span class="line">                    taskStatus.<span class="property">value</span> = <span class="title class_">TaskStatusType</span>.<span class="property">START</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="comment">// 学习</span></span><br><span class="line">                        <span class="keyword">await</span> <span class="title function_">study</span>();</span><br><span class="line">                        <span class="comment">// 同屏任务</span></span><br><span class="line">                        <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">SAME_TAB</span>]) &#123;</span><br><span class="line">                            <span class="comment">// 关闭窗口</span></span><br><span class="line">                            <span class="title function_">closeFrame</span>();</span><br><span class="line">                            <span class="comment">// 窗口不存在</span></span><br><span class="line">                            frame.<span class="property">exist</span> = <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (err <span class="keyword">instanceof</span> <span class="title class_">Error</span>) &#123;</span><br><span class="line">                            <span class="comment">// 提示</span></span><br><span class="line">                            <span class="title function_">createTip</span>(err.<span class="property">message</span>);</span><br><span class="line">                            <span class="comment">// 错误</span></span><br><span class="line">                            <span class="title function_">error</span>(err.<span class="property">message</span>);</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// 提示</span></span><br><span class="line">                        <span class="title function_">createTip</span>(err);</span><br><span class="line">                        <span class="comment">// 错误</span></span><br><span class="line">                        <span class="title function_">error</span>(err);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 刷新任务</span></span><br><span class="line">                taskStatus.<span class="property">value</span> = <span class="title class_">TaskStatusType</span>.<span class="property">FINISH</span>;</span><br><span class="line">                <span class="title function_">log</span>(<span class="string">&#x27;已完成&#x27;</span>);</span><br><span class="line">                <span class="comment">// 创建提示</span></span><br><span class="line">                <span class="title function_">createTip</span>(<span class="string">&#x27;完成学习!&#x27;</span>);</span><br><span class="line">                <span class="comment">// 远程推送</span></span><br><span class="line">                <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">REMOTE_PUSH</span>]) &#123;</span><br><span class="line">                    <span class="comment">// 推送</span></span><br><span class="line">                    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">pushModal</span>(&#123;</span><br><span class="line">                        <span class="attr">title</span>: <span class="string">&#x27;学习推送&#x27;</span>,</span><br><span class="line">                        <span class="attr">to</span>: userinfo.<span class="property">nick</span>,</span><br><span class="line">                        <span class="attr">content</span>: [</span><br><span class="line">                            <span class="string">&#x27;学习强国, 学习完成!&#x27;</span>,</span><br><span class="line">                            <span class="string">`当天积分:  <span class="subst">$&#123;getHighlightHTML(todayScore.value)&#125;</span> 分`</span>,</span><br><span class="line">                            <span class="string">`总积分: <span class="subst">$&#123;getHighlightHTML(totalScore.value)&#125;</span> 分`</span>,</span><br><span class="line">                            ...taskConfig.<span class="title function_">map</span>(<span class="function">(<span class="params">task</span>) =&gt;</span> <span class="title function_">getProgressHTML</span>(task.<span class="property">title</span>, task.<span class="property">percent</span>)),</span><br><span class="line">                        ],</span><br><span class="line">                        <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">                    &#125;, pushToken.<span class="property">value</span>);</span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">`学习推送<span class="subst">$&#123;res ? <span class="string">&#x27;成功&#x27;</span> : <span class="string">&#x27;失败&#x27;</span>&#125;</span>!`</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 已在等待</span></span><br><span class="line">            <span class="keyword">let</span> flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">// 自动答题</span></span><br><span class="line">            <span class="title function_">watch</span>(<span class="function">() =&gt;</span> [taskStatus.<span class="property">value</span>, settings[<span class="title class_">SettingType</span>.<span class="property">AUTO_START</span>]], <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">                <span class="comment">// 加载完毕</span></span><br><span class="line">                <span class="keyword">if</span> (!flag &amp;&amp; taskStatus.<span class="property">value</span> === <span class="title class_">TaskStatusType</span>.<span class="property">LOADED</span>) &#123;</span><br><span class="line">                    <span class="comment">// 自动答题</span></span><br><span class="line">                    <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">AUTO_START</span>]) &#123;</span><br><span class="line">                        <span class="comment">// 等待中</span></span><br><span class="line">                        flag = <span class="literal">true</span>;</span><br><span class="line">                        <span class="comment">// 创建提示</span></span><br><span class="line">                        <span class="keyword">const</span> tip = <span class="title function_">createTip</span>(<span class="string">&#x27;即将自动开始任务&#x27;</span>, <span class="number">5</span>, <span class="literal">true</span>);</span><br><span class="line">                        <span class="comment">// 等待倒计时结束</span></span><br><span class="line">                        <span class="keyword">await</span> tip.<span class="title function_">waitCountDown</span>();</span><br><span class="line">                        <span class="comment">// 再次查看是否开启</span></span><br><span class="line">                        <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">AUTO_START</span>] &amp;&amp;</span><br><span class="line">                            taskStatus.<span class="property">value</span> !== <span class="title class_">TaskStatusType</span>.<span class="property">START</span>) &#123;</span><br><span class="line">                            <span class="comment">// 创建提示</span></span><br><span class="line">                            <span class="title function_">createTip</span>(<span class="string">&#x27;自动开始任务&#x27;</span>);</span><br><span class="line">                            <span class="comment">// 开始任务</span></span><br><span class="line">                            <span class="title function_">startTask</span>();</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// 取消等待</span></span><br><span class="line">                        flag = <span class="literal">false</span>;</span><br><span class="line">                        <span class="comment">// 创建提示</span></span><br><span class="line">                        <span class="title function_">createTip</span>(<span class="string">&#x27;已取消自动开始任务!&#x27;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">// 切换开关任务未完成</span></span><br><span class="line">            taskConfig.<span class="title function_">forEach</span>(<span class="function">(<span class="params">task</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">watch</span>(<span class="function">() =&gt;</span> [task.<span class="property">active</span>], <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (taskStatus.<span class="property">value</span> === <span class="title class_">TaskStatusType</span>.<span class="property">FINISH</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (task.<span class="property">active</span> &amp;&amp; !task.<span class="property">status</span>) &#123;</span><br><span class="line">                            taskStatus.<span class="property">value</span> = <span class="title class_">TaskStatusType</span>.<span class="property">LOADED</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_study_item&#x27;</span> &#125;, <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`egg_study_btn<span class="subst">$&#123;taskStatus.value === TaskStatusType.START ? <span class="string">&#x27; loading&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                <span class="attr">disabled</span>: <span class="title function_">watchRef</span>(<span class="function">() =&gt;</span> [running.<span class="property">value</span>, taskStatus.<span class="property">value</span>], <span class="function">() =&gt;</span> running.<span class="property">value</span> ||</span><br><span class="line">                    taskStatus.<span class="property">value</span> === <span class="title class_">TaskStatusType</span>.<span class="property">LOADING</span> ||</span><br><span class="line">                    taskStatus.<span class="property">value</span> === <span class="title class_">TaskStatusType</span>.<span class="property">FINISH</span>),</span><br><span class="line">                <span class="attr">onclick</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> taskStatus.<span class="property">value</span> === <span class="title class_">TaskStatusType</span>.<span class="property">LOADED</span></span><br><span class="line">                    ? <span class="title function_">debounce</span>(startTask, <span class="number">300</span>)</span><br><span class="line">                    : taskStatus.<span class="property">value</span> === <span class="title class_">TaskStatusType</span>.<span class="property">START</span></span><br><span class="line">                        ? <span class="title function_">debounce</span>(pauseTask, <span class="number">300</span>)</span><br><span class="line">                        : taskStatus.<span class="property">value</span> === <span class="title class_">TaskStatusType</span>.<span class="property">PAUSE</span></span><br><span class="line">                            ? <span class="title function_">debounce</span>(continueTask, <span class="number">300</span>)</span><br><span class="line">                            : <span class="literal">undefined</span>),</span><br><span class="line">            &#125;, <span class="title function_">createTextNode</span>(<span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`<span class="subst">$&#123;taskStatus.value === TaskStatusType.LOADING</span></span></span><br><span class="line"><span class="subst"><span class="string">                ? <span class="string">&#x27;等待中&#x27;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">                : taskStatus.value === TaskStatusType.LOADED</span></span></span><br><span class="line"><span class="subst"><span class="string">                    ? <span class="string">&#x27;开始学习&#x27;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">                    : taskStatus.value === TaskStatusType.START</span></span></span><br><span class="line"><span class="subst"><span class="string">                        ? <span class="string">&#x27;正在学习, 点击暂停&#x27;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">                        : taskStatus.value === TaskStatusType.PAUSE</span></span></span><br><span class="line"><span class="subst"><span class="string">                            ? <span class="string">&#x27;继续学习&#x27;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">                            : taskStatus.value === TaskStatusType.FINISH</span></span></span><br><span class="line"><span class="subst"><span class="string">                                ? <span class="string">&#x27;已完成&#x27;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">                                : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>))));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 定时项目</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ScheduleList</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_list&#x27;</span> &#125;, <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> scheduleList.<span class="property">length</span></span><br><span class="line">            ? scheduleList.<span class="title function_">map</span>(<span class="function">(<span class="params">schedule</span>) =&gt;</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_item&#x27;</span> &#125;, [</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">class</span>: <span class="string">`egg_schedule_detail_time_wrap<span class="subst">$&#123;isLate(schedule) ? <span class="string">&#x27; inactive&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>,</span><br><span class="line">                &#125;, [</span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                        <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_detail_icon&#x27;</span>,</span><br><span class="line">                    &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                        <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                        <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">                    &#125;, [</span><br><span class="line">                        <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                            <span class="attr">d</span>: <span class="string">&#x27;M810.137703 213.860762c-164.388001-164.4187-431.887404-164.4187-596.277452 0-164.417677 164.388001-164.417677 431.889451 0 596.278475 164.390048 164.417677 431.890474 164.417677 596.277452 0C974.557426 645.750213 974.557426 378.248763 810.137703 213.860762zM767.347131 767.345596c-140.797723 140.829446-369.927237 140.797723-510.693238 0-140.828422-140.797723-140.828422-369.895515 0-510.708588 140.767024-140.783397 369.896538-140.813073 510.693238 0C908.14383 397.420405 908.14383 626.578572 767.347131 767.345596z&#x27;</span>,</span><br><span class="line">                        &#125;),</span><br><span class="line">                        <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                            <span class="attr">d</span>: <span class="string">&#x27;M721.450824 521.495258 515.404028 521.495258l0.028653-227.948619c0-15.124466-12.362562-27.458375-27.501354-27.458375s-27.443026 12.33391-27.443026 27.458375l0 235.115855c0 0.835018-1.013073 20.48659 12.094456 34.459836 8.331759 8.809643 20.038382 13.288654 35.148521 13.288654l213.720569 0.031722c15.140839 0 27.472702-12.304234 27.472702-27.474748C748.922503 533.887496 736.620315 521.584286 721.450824 521.495258z&#x27;</span>,</span><br><span class="line">                        &#125;),</span><br><span class="line">                    ])),</span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_detail_time&#x27;</span> &#125;, <span class="title function_">createTextNode</span>(schedule.<span class="property">time</span>)),</span><br><span class="line">                ]),</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_detail_del_wrap&#x27;</span> &#125;, [</span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                        <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_del_btn&#x27;</span>,</span><br><span class="line">                        <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                            <span class="comment">// 定时刷新</span></span><br><span class="line">                            <span class="keyword">if</span> (!settings[<span class="title class_">SettingType</span>.<span class="property">SCHEDULE_RUN</span>]) &#123;</span><br><span class="line">                                <span class="title function_">createTip</span>(<span class="string">&#x27;未开启定时刷新!&#x27;</span>);</span><br><span class="line">                                <span class="keyword">return</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="comment">// 索引</span></span><br><span class="line">                            <span class="keyword">const</span> index = scheduleList.<span class="title function_">findIndex</span>(<span class="function">(<span class="params">s</span>) =&gt;</span> s === schedule);</span><br><span class="line">                            <span class="comment">// 删除元素</span></span><br><span class="line">                            scheduleList.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span><br><span class="line">                            <span class="comment">// 存储</span></span><br><span class="line">                            <span class="title function_">GM_setValue</span>(<span class="string">&#x27;scheduleList&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(scheduleList));</span><br><span class="line">                            <span class="comment">// 刷新任务</span></span><br><span class="line">                            <span class="title function_">refreshScheduleTask</span>();</span><br><span class="line">                        &#125;, <span class="number">300</span>),</span><br><span class="line">                    &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                        <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                        <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">                    &#125;, [</span><br><span class="line">                        <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                            <span class="attr">d</span>: <span class="string">&#x27;M896.22 896.22c14.262-14.263 11.263-40.449-6.583-58.295L230.473 178.76c-17.847-17.847-44.105-20.846-58.295-6.583-14.263 14.19-11.264 40.448 6.583 58.295l659.164 659.164c17.846 17.846 44.032 20.845 58.294 6.582&#x27;</span>,</span><br><span class="line">                        &#125;),</span><br><span class="line">                        <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                            <span class="attr">d</span>: <span class="string">&#x27;M172.178 896.22c-14.263-14.263-11.264-40.449 6.583-58.295L837.925 178.76c17.846-17.847 44.032-20.846 58.294-6.583 14.263 14.19 11.264 40.448-6.582 58.295L230.4 889.637c-17.847 17.846-44.105 20.845-58.295 6.582&#x27;</span>,</span><br><span class="line">                        &#125;),</span><br><span class="line">                    ])),</span><br><span class="line">                ]),</span><br><span class="line">            ]))</span><br><span class="line">            : [</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_list_none&#x27;</span> &#125;, [</span><br><span class="line">                    <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                        <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                        <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">                    &#125;, [</span><br><span class="line">                        <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                            <span class="attr">d</span>: <span class="string">&#x27;M238.1 520.5c-17.6 0-31.9-14.3-31.9-31.9 0-17.6 14.3-31.9 31.9-31.9h293c17.6 0 31.9 14.3 31.9 31.9 0 17.6-14.3 31.9-31.9 31.9h-293zM238.1 733.6c-17.6 0-31.9-14.3-31.9-31.9s14.3-31.9 31.9-31.9h186.5c17.6 0 31.9 14.3 31.9 31.9s-14.3 31.9-31.9 31.9H238.1zM241.6 314.9c-17.6 0-31.9-14.3-31.9-31.9s14.3-31.9 31.9-31.9h426.1c17.6 0 31.9 14.3 31.9 31.9 0 17.5-14.3 31.7-31.8 31.9H241.6z&#x27;</span>,</span><br><span class="line">                        &#125;),</span><br><span class="line">                        <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                            <span class="attr">d</span>: <span class="string">&#x27;M160 926.6c-46.9 0-85.1-38.2-85.1-85.1V149.1c0-46.9 38.2-85.1 85.1-85.1h586c46.9 0 85.1 38.2 85.1 85.1v297.4c0 17.6-14.3 31.9-31.9 31.9-17.6 0-31.9-14.3-31.9-31.9V149.1c0-11.8-9.6-21.4-21.4-21.4H160c-11.8 0-21.4 9.6-21.4 21.4v692.4c0 11.8 9.6 21.4 21.4 21.4h304.5c17.5 0 31.8 14.2 31.9 31.8 0 17.6-14.3 31.8-31.9 31.8H160z&#x27;</span>,</span><br><span class="line">                        &#125;),</span><br><span class="line">                        <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                            <span class="attr">d</span>: <span class="string">&#x27;M917.2 959.9c-8.5 0-16.5-3.3-22.5-9.3l-78.5-78.5-5.3-0.5-0.6 0.4c-31.7 21.6-68.7 33-107 33-105.2 0-190.8-85.6-190.8-190.8s85.6-190.8 190.8-190.8c105.2 0 190.8 85.6 190.8 190.8 0 38.2-11.4 75.2-33 107l-0.4 0.6 0.5 5.3 78.5 78.5c6 6 9.3 14 9.3 22.5s-3.4 16.5-9.4 22.5c-5.9 6-13.9 9.3-22.4 9.3zM703.4 587c-70.1 0-127.2 57.1-127.2 127.2s57.1 127.2 127.2 127.2 127.2-57.1 127.2-127.2S773.6 587 703.4 587z&#x27;</span>,</span><br><span class="line">                        &#125;),</span><br><span class="line">                    ]),</span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                        <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_list_none_text&#x27;</span>,</span><br><span class="line">                    &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;暂无定时任务&#x27;</span>)),</span><br><span class="line">                ]),</span><br><span class="line">            ];</span><br><span class="line">    &#125;));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 时间输入</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">TimeInput</span>(<span class="params">&#123; hour, minute, onchange, &#125;</span>) &#123;</span><br><span class="line">    <span class="comment">// 小时</span></span><br><span class="line">    <span class="keyword">const</span> hours = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">24</span>).<span class="title function_">fill</span>(<span class="literal">undefined</span>).<span class="title function_">map</span>(<span class="function">(<span class="params">v, i</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">value</span>: i,</span><br><span class="line">        <span class="attr">label</span>: <span class="title function_">formatDateNum</span>(i),</span><br><span class="line">    &#125;));</span><br><span class="line">    <span class="comment">// 分钟</span></span><br><span class="line">    <span class="keyword">const</span> minutes = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">60</span>).<span class="title function_">fill</span>(<span class="literal">undefined</span>).<span class="title function_">map</span>(<span class="function">(<span class="params">v, i</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">value</span>: i,</span><br><span class="line">        <span class="attr">label</span>: <span class="title function_">formatDateNum</span>(i),</span><br><span class="line">    &#125;));</span><br><span class="line">    <span class="keyword">const</span> valueRef = <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> h = hours.<span class="title function_">find</span>(<span class="function">(<span class="params">h</span>) =&gt;</span> h.<span class="property">value</span> === hour.<span class="property">value</span>);</span><br><span class="line">        <span class="keyword">const</span> min = minutes.<span class="title function_">find</span>(<span class="function">(<span class="params">min</span>) =&gt;</span> min.<span class="property">value</span> === minute.<span class="property">value</span>);</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">hour</span>: h ? h.<span class="property">value</span> : -<span class="number">1</span>,</span><br><span class="line">            <span class="attr">minute</span>: min ? min.<span class="property">value</span> : -<span class="number">1</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_time_input&#x27;</span> &#125;, [</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_hour_wrap&#x27;</span> &#125;, [</span><br><span class="line">            <span class="title class_">Select</span>(&#123;</span><br><span class="line">                <span class="attr">data</span>: hours,</span><br><span class="line">                <span class="attr">placeholder</span>: <span class="string">&#x27;00&#x27;</span>,</span><br><span class="line">                <span class="attr">maxlength</span>: <span class="number">2</span>,</span><br><span class="line">                <span class="attr">value</span>: hour,</span><br><span class="line">                <span class="title function_">onchange</span>(<span class="params">&#123; value &#125;</span>) &#123;</span><br><span class="line">                    valueRef.<span class="property">value</span>.<span class="property">hour</span> = value;</span><br><span class="line">                    onchange &amp;&amp; <span class="title function_">onchange</span>(valueRef.<span class="property">value</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="title function_">onblur</span>(<span class="params">res</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!res) &#123;</span><br><span class="line">                        valueRef.<span class="property">value</span>.<span class="property">hour</span> = -<span class="number">1</span>;</span><br><span class="line">                        onchange &amp;&amp; <span class="title function_">onchange</span>(valueRef.<span class="property">value</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;),</span><br><span class="line">        ]),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;span&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_separator&#x27;</span> &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;:&#x27;</span>)),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_minute_wrap&#x27;</span> &#125;, [</span><br><span class="line">            <span class="title class_">Select</span>(&#123;</span><br><span class="line">                <span class="attr">data</span>: minutes,</span><br><span class="line">                <span class="attr">placeholder</span>: <span class="string">&#x27;00&#x27;</span>,</span><br><span class="line">                <span class="attr">maxlength</span>: <span class="number">2</span>,</span><br><span class="line">                <span class="attr">value</span>: minute,</span><br><span class="line">                <span class="title function_">onchange</span>(<span class="params">&#123; value &#125;</span>) &#123;</span><br><span class="line">                    valueRef.<span class="property">value</span>.<span class="property">minute</span> = value;</span><br><span class="line">                    onchange &amp;&amp; <span class="title function_">onchange</span>(valueRef.<span class="property">value</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="title function_">onblur</span>(<span class="params">res</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!res) &#123;</span><br><span class="line">                        valueRef.<span class="property">value</span>.<span class="property">minute</span> = -<span class="number">1</span>;</span><br><span class="line">                        onchange &amp;&amp; <span class="title function_">onchange</span>(valueRef.<span class="property">value</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;),</span><br><span class="line">        ]),</span><br><span class="line">    ]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 设置面板组件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SettingsPanel</span>(<span class="params">&#123; show &#125;</span>) &#123;</span><br><span class="line">    <span class="comment">// token</span></span><br><span class="line">    <span class="keyword">let</span> token = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="comment">// 小时</span></span><br><span class="line">    <span class="keyword">let</span> hour = <span class="title function_">ref</span>(-<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 分钟</span></span><br><span class="line">    <span class="keyword">let</span> minute = <span class="title function_">ref</span>(-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">        <span class="attr">class</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`egg_settings<span class="subst">$&#123;show.value ? <span class="string">&#x27; active&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">    &#125;, [</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_settings_version_wrap&#x27;</span> &#125;, [</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_settings_label&#x27;</span> &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;版本信息&#x27;</span>)),</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_settings_version&#x27;</span>,</span><br><span class="line">            &#125;, [</span><br><span class="line">                <span class="title function_">createTextNode</span>(<span class="string">`v<span class="subst">$&#123;version&#125;</span>`</span>),</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;a&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">class</span>: <span class="string">&#x27;egg_settings_version_detail&#x27;</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;GitHub Xu22Web/tech-study-js&#x27;</span>,</span><br><span class="line">                    <span class="attr">href</span>: <span class="string">&#x27;https://github.com/Xu22Web/tech-study-js&#x27;</span>,</span><br><span class="line">                &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 16 16&#x27;</span>,</span><br><span class="line">                    <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">                &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">d</span>: <span class="string">&#x27;M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z&#x27;</span>,</span><br><span class="line">                &#125;))),</span><br><span class="line">            ]),</span><br><span class="line">        ]),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_settings_theme_wrap&#x27;</span> &#125;, [</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_settings_label&#x27;</span> &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;主题预设&#x27;</span>)),</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_settings_theme_colors&#x27;</span> &#125;, [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>: <span class="string">&#x27;#fa3333&#x27;</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;强国红&#x27;</span>,</span><br><span class="line">                    <span class="attr">detail</span>: <span class="string">&#x27;XueXi Red&#x27;</span>,</span><br><span class="line">                    <span class="attr">code</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>: <span class="string">&#x27;#bb2649&#x27;</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;非凡洋红&#x27;</span>,</span><br><span class="line">                    <span class="attr">detail</span>: <span class="string">&#x27;Viva Magenta&#x27;</span>,</span><br><span class="line">                    <span class="attr">code</span>: <span class="string">&#x27;18-1750&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>: <span class="string">&#x27;#35548a&#x27;</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;经典蓝&#x27;</span>,</span><br><span class="line">                    <span class="attr">detail</span>: <span class="string">&#x27;Classic Blue&#x27;</span>,</span><br><span class="line">                    <span class="attr">code</span>: <span class="string">&#x27;19-4052&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>: <span class="string">&#x27;#f36f63&#x27;</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;活珊瑚橘&#x27;</span>,</span><br><span class="line">                    <span class="attr">detail</span>: <span class="string">&#x27;Living Coral&#x27;</span>,</span><br><span class="line">                    <span class="attr">code</span>: <span class="string">&#x27;16-1546&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>: <span class="string">&#x27;#6d5b97&#x27;</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;紫外光色&#x27;</span>,</span><br><span class="line">                    <span class="attr">detail</span>: <span class="string">&#x27;Ultra Violet&#x27;</span>,</span><br><span class="line">                    <span class="attr">code</span>: <span class="string">&#x27;18-3838&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>: <span class="string">&#x27;#86af49&#x27;</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;草木绿&#x27;</span>,</span><br><span class="line">                    <span class="attr">detail</span>: <span class="string">&#x27;Greenery&#x27;</span>,</span><br><span class="line">                    <span class="attr">code</span>: <span class="string">&#x27;15-0343&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>: <span class="string">&#x27;#fc8bab&#x27;</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;B站粉&#x27;</span>,</span><br><span class="line">                    <span class="attr">detail</span>: <span class="string">&#x27;Bilibili Pink&#x27;</span>,</span><br><span class="line">                    <span class="attr">code</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">value</span>: <span class="string">&#x27;#056de8&#x27;</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;知乎蓝&#x27;</span>,</span><br><span class="line">                    <span class="attr">detail</span>: <span class="string">&#x27;Zhihu Blue&#x27;</span>,</span><br><span class="line">                    <span class="attr">code</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">            ].<span class="title function_">map</span>(<span class="function">(<span class="params">color</span>) =&gt;</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_settings_theme_color_wrap&#x27;</span>,</span><br><span class="line">            &#125;, <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_settings_theme_color&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                <span class="attr">style</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`color: <span class="subst">$&#123;color.value&#125;</span>;<span class="subst">$&#123;themeColor.value === color.value</span></span></span><br><span class="line"><span class="subst"><span class="string">                    ? <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">                    : <span class="string">` box-shadow: 0rem 0.4rem 0.1rem 0.1rem <span class="subst">$&#123;color.value&#125;</span>30;`</span>&#125;</span>`</span>),</span><br><span class="line">                <span class="attr">title</span>: color.<span class="property">title</span>,</span><br><span class="line">                <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (themeColor.<span class="property">value</span> !== color.<span class="property">value</span>) &#123;</span><br><span class="line">                        themeColor.<span class="property">value</span> = color.<span class="property">value</span>;</span><br><span class="line">                        <span class="comment">// 存储</span></span><br><span class="line">                        <span class="title function_">GM_setValue</span>(<span class="string">&#x27;themeColor&#x27;</span>, themeColor.<span class="property">value</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, <span class="number">300</span>),</span><br><span class="line">            &#125;)))),</span><br><span class="line">        ]),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">            <span class="attr">class</span>: <span class="string">&#x27;egg_settings_read_time_wrap&#x27;</span>,</span><br><span class="line">        &#125;, [</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_settings_label&#x27;</span> &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;最大文章时长&#x27;</span>)),</span><br><span class="line">            <span class="title class_">Select</span>(&#123;</span><br><span class="line">                <span class="attr">data</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">label</span>: <span class="string">&#x27;40s&#x27;</span>,</span><br><span class="line">                        <span class="attr">value</span>: <span class="number">40</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">label</span>: <span class="string">&#x27;60s&#x27;</span>,</span><br><span class="line">                        <span class="attr">value</span>: <span class="number">60</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">label</span>: <span class="string">&#x27;80s&#x27;</span>,</span><br><span class="line">                        <span class="attr">value</span>: <span class="number">80</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">label</span>: <span class="string">&#x27;100s&#x27;</span>,</span><br><span class="line">                        <span class="attr">value</span>: <span class="number">100</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">value</span>: maxRead,</span><br><span class="line">                <span class="attr">placeholder</span>: <span class="string">&#x27;100s&#x27;</span>,</span><br><span class="line">                <span class="attr">maxlength</span>: <span class="number">4</span>,</span><br><span class="line">                <span class="attr">keep</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="title function_">onchange</span>(<span class="params">&#123; value &#125;</span>) &#123;</span><br><span class="line">                    <span class="comment">// 创建提示</span></span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">&#x27;最大文章时长 已保存!&#x27;</span>);</span><br><span class="line">                    maxRead.<span class="property">value</span> = value;</span><br><span class="line">                    <span class="comment">// 存储</span></span><br><span class="line">                    <span class="title function_">GM_setValue</span>(<span class="string">&#x27;maxRead&#x27;</span>, value);</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;),</span><br><span class="line">        ], &#123;</span><br><span class="line">            <span class="title function_">onMounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">const</span> maxReadTemp = <span class="title function_">GM_getValue</span>(<span class="string">&#x27;maxRead&#x27;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (maxReadTemp) &#123;</span><br><span class="line">                        maxRead.<span class="property">value</span> = maxReadTemp;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">            <span class="attr">class</span>: <span class="string">&#x27;egg_settings_watch_time_wrap&#x27;</span>,</span><br><span class="line">        &#125;, [</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_settings_label&#x27;</span> &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;最大视听时长&#x27;</span>)),</span><br><span class="line">            <span class="title class_">Select</span>(&#123;</span><br><span class="line">                <span class="attr">data</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">label</span>: <span class="string">&#x27;40s&#x27;</span>,</span><br><span class="line">                        <span class="attr">value</span>: <span class="number">40</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">label</span>: <span class="string">&#x27;60s&#x27;</span>,</span><br><span class="line">                        <span class="attr">value</span>: <span class="number">60</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">label</span>: <span class="string">&#x27;80s&#x27;</span>,</span><br><span class="line">                        <span class="attr">value</span>: <span class="number">80</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">label</span>: <span class="string">&#x27;100s&#x27;</span>,</span><br><span class="line">                        <span class="attr">value</span>: <span class="number">100</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">label</span>: <span class="string">&#x27;120s&#x27;</span>,</span><br><span class="line">                        <span class="attr">value</span>: <span class="number">120</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">value</span>: maxWatch,</span><br><span class="line">                <span class="attr">placeholder</span>: <span class="string">&#x27;120s&#x27;</span>,</span><br><span class="line">                <span class="attr">maxlength</span>: <span class="number">4</span>,</span><br><span class="line">                <span class="attr">keep</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="title function_">onchange</span>(<span class="params">&#123; value &#125;</span>) &#123;</span><br><span class="line">                    <span class="comment">// 创建提示</span></span><br><span class="line">                    <span class="title function_">createTip</span>(<span class="string">&#x27;最大视听时长 已保存!&#x27;</span>);</span><br><span class="line">                    maxWatch.<span class="property">value</span> = value;</span><br><span class="line">                    <span class="comment">// 存储</span></span><br><span class="line">                    <span class="title function_">GM_setValue</span>(<span class="string">&#x27;maxWatch&#x27;</span>, value);</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;),</span><br><span class="line">        ], &#123;</span><br><span class="line">            <span class="title function_">onMounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">const</span> maxWatchTemp = <span class="title function_">GM_getValue</span>(<span class="string">&#x27;maxWatch&#x27;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (maxWatchTemp) &#123;</span><br><span class="line">                        maxWatch.<span class="property">value</span> = maxWatchTemp;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> settings[<span class="title class_">SettingType</span>.<span class="property">REMOTE_PUSH</span>]</span><br><span class="line">            ? <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_settings_token_wrap&#x27;</span> &#125;, [</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_settings_token&#x27;</span> &#125;, [</span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_settings_label&#x27;</span> &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;我的 token&#x27;</span>)),</span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;input&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                        <span class="attr">class</span>: <span class="string">&#x27;egg_settings_token_input&#x27;</span>,</span><br><span class="line">                        <span class="attr">placeholder</span>: <span class="string">&#x27;用户 token&#x27;</span>,</span><br><span class="line">                        <span class="attr">maxlength</span>: <span class="number">32</span>,</span><br><span class="line">                        <span class="attr">value</span>: pushToken.<span class="property">value</span>,</span><br><span class="line">                        <span class="attr">onfocus</span>: <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                            <span class="keyword">const</span> input = e.<span class="property">target</span>;</span><br><span class="line">                            input.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                            <span class="keyword">const</span> btnWrap = $$(<span class="string">&#x27;.egg_settings_submit_btn_wrap&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">                            btnWrap.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">onblur</span>: <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                            <span class="keyword">const</span> input = e.<span class="property">target</span>;</span><br><span class="line">                            <span class="comment">// 去除空格</span></span><br><span class="line">                            <span class="keyword">const</span> value = input.<span class="property">value</span>.<span class="title function_">trim</span>();</span><br><span class="line">                            <span class="keyword">if</span> (<span class="regexp">/^[0-9a-z]&#123;32&#125;$/</span>.<span class="title function_">test</span>(value)) &#123;</span><br><span class="line">                                token = value;</span><br><span class="line">                                input.<span class="property">value</span> = value;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span> &#123;</span><br><span class="line">                                token = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            input.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                                <span class="keyword">const</span> btnWrap = $$(<span class="string">&#x27;.egg_settings_submit_btn_wrap&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">                                btnWrap.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line">                                input.<span class="property">value</span> = pushToken.<span class="property">value</span>;</span><br><span class="line">                            &#125;, <span class="number">200</span>);</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;),</span><br><span class="line">                ]),</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_settings_submit_btn_wrap&#x27;</span> &#125;, <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">class</span>: <span class="string">&#x27;egg_settings_submit_btn&#x27;</span>,</span><br><span class="line">                    <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        <span class="comment">// 创建提示</span></span><br><span class="line">                        <span class="title function_">createTip</span>(<span class="string">&#x27;用户 token 已保存!&#x27;</span>);</span><br><span class="line">                        <span class="keyword">if</span> (token !== pushToken.<span class="property">value</span>) &#123;</span><br><span class="line">                            pushToken.<span class="property">value</span> = token;</span><br><span class="line">                            <span class="comment">// 存储</span></span><br><span class="line">                            <span class="title function_">GM_setValue</span>(<span class="string">&#x27;pushToken&#x27;</span>, token);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, <span class="number">300</span>),</span><br><span class="line">                &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;保存&#x27;</span>))),</span><br><span class="line">            ])</span><br><span class="line">            : <span class="literal">undefined</span>),</span><br><span class="line">        <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> settings[<span class="title class_">SettingType</span>.<span class="property">SCHEDULE_RUN</span>]</span><br><span class="line">            ? <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_schedule&#x27;</span> &#125;, [</span><br><span class="line">                <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_time_wrap&#x27;</span> &#125;, [</span><br><span class="line">                    <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_time&#x27;</span> &#125;, [</span><br><span class="line">                        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_label&#x27;</span> &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;设置时间&#x27;</span>)),</span><br><span class="line">                        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_time_input_wrap&#x27;</span> &#125;, [</span><br><span class="line">                            <span class="title class_">TimeInput</span>(&#123;</span><br><span class="line">                                hour,</span><br><span class="line">                                minute,</span><br><span class="line">                                <span class="title function_">onchange</span>(<span class="params">&#123; hour: h, minute: min &#125;</span>) &#123;</span><br><span class="line">                                    hour.<span class="property">value</span> = h;</span><br><span class="line">                                    minute.<span class="property">value</span> = min;</span><br><span class="line">                                &#125;,</span><br><span class="line">                            &#125;),</span><br><span class="line">                            <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">class</span>: <span class="string">&#x27;egg_schedule_add_btn&#x27;</span>,</span><br><span class="line">                                <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                                    <span class="comment">// 定时刷新</span></span><br><span class="line">                                    <span class="keyword">if</span> (!settings[<span class="title class_">SettingType</span>.<span class="property">SCHEDULE_RUN</span>]) &#123;</span><br><span class="line">                                        <span class="title function_">createTip</span>(<span class="string">&#x27;未开启定时刷新!&#x27;</span>);</span><br><span class="line">                                        <span class="keyword">return</span>;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">if</span> (hour.<span class="property">value</span> === -<span class="number">1</span> || minute.<span class="property">value</span> === -<span class="number">1</span>) &#123;</span><br><span class="line">                                        <span class="title function_">createTip</span>(<span class="string">&#x27;时间格式不符合要求!&#x27;</span>);</span><br><span class="line">                                        <span class="keyword">return</span>;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="comment">// 重复定时存在</span></span><br><span class="line">                                    <span class="keyword">const</span> exists = scheduleList.<span class="title function_">find</span>(<span class="function">(<span class="params">schedule</span>) =&gt;</span> schedule.<span class="property">hour</span> === hour.<span class="property">value</span> &amp;&amp;</span><br><span class="line">                                        schedule.<span class="property">minute</span> === minute.<span class="property">value</span>);</span><br><span class="line">                                    <span class="keyword">if</span> (exists) &#123;</span><br><span class="line">                                        <span class="title function_">createTip</span>(<span class="string">&#x27;设置定时任务重复!&#x27;</span>);</span><br><span class="line">                                        <span class="keyword">return</span>;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="title function_">createTip</span>(<span class="string">&#x27;设置定时任务成功!&#x27;</span>);</span><br><span class="line">                                    <span class="comment">// 添加</span></span><br><span class="line">                                    scheduleList.<span class="title function_">push</span>(&#123;</span><br><span class="line">                                        <span class="attr">hour</span>: hour.<span class="property">value</span>,</span><br><span class="line">                                        <span class="attr">minute</span>: minute.<span class="property">value</span>,</span><br><span class="line">                                        <span class="attr">time</span>: <span class="string">`<span class="subst">$&#123;formatDateNum(hour.value)&#125;</span>:<span class="subst">$&#123;formatDateNum(minute.value)&#125;</span>`</span>,</span><br><span class="line">                                    &#125;);</span><br><span class="line">                                    <span class="comment">// 排序</span></span><br><span class="line">                                    scheduleList.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.<span class="property">hour</span> === b.<span class="property">hour</span></span><br><span class="line">                                        ? a.<span class="property">minute</span> - b.<span class="property">minute</span></span><br><span class="line">                                        : a.<span class="property">hour</span> - b.<span class="property">hour</span>);</span><br><span class="line">                                    <span class="comment">// 存储</span></span><br><span class="line">                                    <span class="title function_">GM_setValue</span>(<span class="string">&#x27;scheduleList&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(scheduleList));</span><br><span class="line">                                    <span class="comment">// 清空</span></span><br><span class="line">                                    hour.<span class="property">value</span> = -<span class="number">1</span>;</span><br><span class="line">                                    minute.<span class="property">value</span> = -<span class="number">1</span>;</span><br><span class="line">                                    <span class="keyword">const</span> inputs = $$(<span class="string">&#x27;.egg_time_input input&#x27;</span>);</span><br><span class="line">                                    inputs.<span class="title function_">forEach</span>(<span class="function">(<span class="params">i</span>) =&gt;</span> (i.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>));</span><br><span class="line">                                    <span class="comment">// 刷新任务</span></span><br><span class="line">                                    <span class="title function_">refreshScheduleTask</span>();</span><br><span class="line">                                &#125;, <span class="number">300</span>),</span><br><span class="line">                            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                                <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">                            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                                <span class="attr">d</span>: <span class="string">&#x27;M801.171 483.589H544V226.418c0-17.673-14.327-32-32-32s-32 14.327-32 32v257.171H222.83c-17.673 0-32 14.327-32 32s14.327 32 32 32H480v257.17c0 17.673 14.327 32 32 32s32-14.327 32-32v-257.17h257.171c17.673 0 32-14.327 32-32s-14.327-32-32-32z&#x27;</span>,</span><br><span class="line">                            &#125;))),</span><br><span class="line">                        ]),</span><br><span class="line">                    ]),</span><br><span class="line">                ]),</span><br><span class="line">                <span class="title class_">ScheduleList</span>(),</span><br><span class="line">            ])</span><br><span class="line">            : <span class="literal">undefined</span>),</span><br><span class="line">    ], &#123;</span><br><span class="line">        <span class="title function_">onMounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="comment">// 刷新token</span></span><br><span class="line">            <span class="title function_">watch</span>(<span class="function">() =&gt;</span> settings[<span class="title class_">SettingType</span>.<span class="property">REMOTE_PUSH</span>], <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// 远程推送</span></span><br><span class="line">                <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">REMOTE_PUSH</span>]) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">const</span> tokenTemp = <span class="title function_">GM_getValue</span>(<span class="string">&#x27;pushToken&#x27;</span>);</span><br><span class="line">                        <span class="keyword">if</span> (tokenTemp) &#123;</span><br><span class="line">                            pushToken.<span class="property">value</span> = tokenTemp;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">            <span class="comment">// 刷新定时任务</span></span><br><span class="line">            <span class="title function_">watch</span>(<span class="function">() =&gt;</span> settings[<span class="title class_">SettingType</span>.<span class="property">SCHEDULE_RUN</span>], <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// 定时任务打开</span></span><br><span class="line">                <span class="keyword">if</span> (settings[<span class="title class_">SettingType</span>.<span class="property">SCHEDULE_RUN</span>]) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">const</span> scheduleTemp = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title function_">GM_getValue</span>(<span class="string">&#x27;scheduleList&#x27;</span>));</span><br><span class="line">                        <span class="keyword">if</span> (scheduleTemp &amp;&amp; <span class="title class_">Array</span>.<span class="title function_">isArray</span>(scheduleTemp)) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">in</span> scheduleTemp) &#123;</span><br><span class="line">                                scheduleList[i] = scheduleTemp[i];</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">                    <span class="comment">// 刷新定时任务</span></span><br><span class="line">                    <span class="title function_">refreshScheduleTask</span>();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 清除任务</span></span><br><span class="line">                <span class="title function_">clearScheduleTask</span>();</span><br><span class="line">            &#125;, <span class="literal">true</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 面板</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Panel</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 运行设置标签</span></span><br><span class="line">    <span class="keyword">const</span> runLabels = [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;自动开始&#x27;</span>,</span><br><span class="line">            <span class="attr">tip</span>: <span class="string">&#x27;启动时, 自动开始任务, 在倒计时结束前自动开始可随时取消; 如果在自动开始前手动开始任务, 此次自动开始将取消&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="title class_">SettingType</span>.<span class="property">AUTO_START</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;同屏任务&#x27;</span>,</span><br><span class="line">            <span class="attr">tip</span>: <span class="string">&#x27;运行任务时，所有任务均在当前页面以弹窗方式运行&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="title class_">SettingType</span>.<span class="property">SAME_TAB</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;静默运行&#x27;</span>,</span><br><span class="line">            <span class="attr">tip</span>: <span class="string">&#x27;同屏任务时, 不显示任务弹窗静默运行&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="title class_">SettingType</span>.<span class="property">SILENT_RUN</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;定时刷新&#x27;</span>,</span><br><span class="line">            <span class="attr">tip</span>: <span class="string">&#x27;定时刷新页面，重新进行任务，此功能需要长时间占用浏览器&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="title class_">SettingType</span>.<span class="property">SCHEDULE_RUN</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    ];</span><br><span class="line">    <span class="comment">// 运行设置标签</span></span><br><span class="line">    <span class="keyword">const</span> examLabels = [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;随机作答&#x27;</span>,</span><br><span class="line">            <span class="attr">tip</span>: <span class="string">&#x27;无答案时, 随机选择或者填入答案, 不保证正确&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="title class_">SettingType</span>.<span class="property">RANDOM_EXAM</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    ];</span><br><span class="line">    <span class="comment">// 推送设置标签</span></span><br><span class="line">    <span class="keyword">const</span> pushLabels = [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;远程推送&#x27;</span>,</span><br><span class="line">            <span class="attr">tip</span>: <span class="string">&#x27;利用 pushplus 推送, 将登录二维码直接推送到微信公众号&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="title class_">SettingType</span>.<span class="property">REMOTE_PUSH</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    ];</span><br><span class="line">    <span class="comment">// 处理设置变化</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleSettingsChange</span> = (<span class="params">e, type, title</span>) =&gt; &#123;</span><br><span class="line">        <span class="comment">// 开关</span></span><br><span class="line">        <span class="keyword">const</span> &#123; checked &#125; = e.<span class="property">target</span>;</span><br><span class="line">        <span class="keyword">if</span> (settings[type] !== checked) &#123;</span><br><span class="line">            settings[type] = checked;</span><br><span class="line">            <span class="comment">// 设置</span></span><br><span class="line">            <span class="title function_">GM_setValue</span>(<span class="string">&#x27;studySettings&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(settings));</span><br><span class="line">            <span class="comment">// 创建提示</span></span><br><span class="line">            <span class="title function_">createTip</span>(<span class="string">`<span class="subst">$&#123;title&#125;</span> <span class="subst">$&#123;checked ? <span class="string">&#x27;打开&#x27;</span> : <span class="string">&#x27;关闭&#x27;</span>&#125;</span>!`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 任务显示</span></span><br><span class="line">    <span class="keyword">const</span> scheduleShow = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="comment">// 面板显示</span></span><br><span class="line">    <span class="keyword">const</span> panelShow = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">        <span class="attr">class</span>: <span class="string">`egg_panel_wrap<span class="subst">$&#123;hasMobile() ? <span class="string">&#x27; mobile&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>,</span><br><span class="line">    &#125;, <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">        <span class="attr">class</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`egg_panel<span class="subst">$&#123;panelShow.value ? <span class="string">&#x27; hide&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">    &#125;, [</span><br><span class="line">        <span class="comment">// 登录</span></span><br><span class="line">        <span class="title class_">LoginItem</span>(),</span><br><span class="line">        <span class="comment">// 信息</span></span><br><span class="line">        <span class="title class_">InfoItem</span>(),</span><br><span class="line">        <span class="comment">// 分数</span></span><br><span class="line">        <span class="title class_">ScoreItem</span>(),</span><br><span class="line">        <span class="comment">// 任务部分</span></span><br><span class="line">        <span class="title class_">Hr</span>(&#123; <span class="attr">text</span>: <span class="string">&#x27;任务&#x27;</span> &#125;),</span><br><span class="line">        <span class="title class_">TaskList</span>(),</span><br><span class="line">        <span class="comment">// 运行部分</span></span><br><span class="line">        <span class="title class_">Hr</span>(&#123; <span class="attr">text</span>: <span class="string">&#x27;运行&#x27;</span> &#125;),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_run_list&#x27;</span> &#125;, runLabels.<span class="title function_">map</span>(<span class="function">(<span class="params">label</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">NomalItem</span>(&#123;</span><br><span class="line">                <span class="attr">title</span>: label.<span class="property">title</span>,</span><br><span class="line">                <span class="attr">tip</span>: label.<span class="property">tip</span>,</span><br><span class="line">                <span class="attr">checked</span>: settings[label.<span class="property">type</span>],</span><br><span class="line">                <span class="attr">onchange</span>: <span class="title function_">debounce</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">handleSettingsChange</span>(e, label.<span class="property">type</span>, label.<span class="property">title</span>);</span><br><span class="line">                &#125;, <span class="number">300</span>),</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;)),</span><br><span class="line">        <span class="comment">// 答题部分</span></span><br><span class="line">        <span class="title class_">Hr</span>(&#123; <span class="attr">text</span>: <span class="string">&#x27;答题&#x27;</span> &#125;),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_exam_list&#x27;</span> &#125;, examLabels.<span class="title function_">map</span>(<span class="function">(<span class="params">label</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">NomalItem</span>(&#123;</span><br><span class="line">                <span class="attr">title</span>: label.<span class="property">title</span>,</span><br><span class="line">                <span class="attr">tip</span>: label.<span class="property">tip</span>,</span><br><span class="line">                <span class="attr">checked</span>: settings[label.<span class="property">type</span>],</span><br><span class="line">                <span class="attr">onchange</span>: <span class="title function_">debounce</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">handleSettingsChange</span>(e, label.<span class="property">type</span>, label.<span class="property">title</span>);</span><br><span class="line">                &#125;, <span class="number">300</span>),</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;)),</span><br><span class="line">        <span class="comment">// 推送部分</span></span><br><span class="line">        <span class="title class_">Hr</span>(&#123; <span class="attr">text</span>: <span class="string">&#x27;推送&#x27;</span> &#125;),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_push_list&#x27;</span> &#125;, pushLabels.<span class="title function_">map</span>(<span class="function">(<span class="params">label</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">NomalItem</span>(&#123;</span><br><span class="line">                <span class="attr">title</span>: label.<span class="property">title</span>,</span><br><span class="line">                <span class="attr">tip</span>: label.<span class="property">tip</span>,</span><br><span class="line">                <span class="attr">checked</span>: settings[label.<span class="property">type</span>],</span><br><span class="line">                <span class="attr">onchange</span>: <span class="title function_">debounce</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">handleSettingsChange</span>(e, label.<span class="property">type</span>, label.<span class="property">title</span>);</span><br><span class="line">                &#125;, <span class="number">300</span>),</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;)),</span><br><span class="line">        <span class="comment">// 提示部分</span></span><br><span class="line">        <span class="title class_">Hr</span>(&#123; <span class="attr">text</span>: <span class="string">&#x27;提示&#x27;</span> &#125;),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_tip_list&#x27;</span> &#125;, [</span><br><span class="line">            <span class="title function_">createTextNode</span>(<span class="string">&#x27;专项练习已被移除, 如需使用, 请点击&#x27;</span>),</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_tip_btn&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                <span class="attr">onclick</span>: <span class="title function_">debounce</span>(doExamPaper, <span class="number">300</span>),</span><br><span class="line">                <span class="attr">disabled</span>: <span class="title function_">watchRef</span>(<span class="function">() =&gt;</span> [running.<span class="property">value</span>, taskStatus.<span class="property">value</span>], <span class="function">() =&gt;</span> running.<span class="property">value</span> ||</span><br><span class="line">                    taskStatus.<span class="property">value</span> === <span class="title class_">TaskStatusType</span>.<span class="property">START</span> ||</span><br><span class="line">                    taskStatus.<span class="property">value</span> === <span class="title class_">TaskStatusType</span>.<span class="property">PAUSE</span>),</span><br><span class="line">            &#125;, <span class="title function_">createTextNode</span>(<span class="string">&#x27;去完成&#x27;</span>)),</span><br><span class="line">        ]),</span><br><span class="line">        <span class="comment">// 按钮集合</span></span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">            <span class="attr">class</span>: <span class="string">&#x27;egg_btns_wrap&#x27;</span>,</span><br><span class="line">        &#125;, [</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="title function_">watchRef</span>(<span class="function">() =&gt;</span> [frame.<span class="property">exist</span>, frame.<span class="property">show</span>], <span class="function">() =&gt;</span> <span class="string">`egg_frame_show_btn<span class="subst">$&#123;!frame.exist || frame.show ? <span class="string">&#x27; hide&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">                <span class="attr">title</span>: <span class="string">&#x27;窗口&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// 窗口显示</span></span><br><span class="line">                    frame.<span class="property">show</span> = <span class="literal">true</span>;</span><br><span class="line">                &#125;, <span class="number">300</span>),</span><br><span class="line">            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">d</span>: <span class="string">&#x27;M836.224 106.666667h-490.666667a85.589333 85.589333 0 0 0-85.333333 85.333333V256h-64a85.589333 85.589333 0 0 0-85.333333 85.333333v490.666667a85.589333 85.589333 0 0 0 85.333333 85.333333h490.666667a85.589333 85.589333 0 0 0 85.333333-85.333333V768h64a85.589333 85.589333 0 0 0 85.333333-85.333333V192a85.589333 85.589333 0 0 0-85.333333-85.333333z m-132.266667 725.333333a20.138667 20.138667 0 0 1-21.333333 21.333333h-490.666667a20.138667 20.138667 0 0 1-21.333333-21.333333V341.333333a20.138667 20.138667 0 0 1 21.333333-21.333333h494.933334a20.138667 20.138667 0 0 1 21.333333 21.333333v490.666667z m153.6-149.333333a20.138667 20.138667 0 0 1-21.333333 21.333333h-64V341.333333a85.589333 85.589333 0 0 0-85.333333-85.333333h-362.666667V192a20.138667 20.138667 0 0 1 21.333333-21.333333h490.666667a20.138667 20.138667 0 0 1 21.333333 21.333333z&#x27;</span>,</span><br><span class="line">            &#125;))),</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_panel_show_btn&#x27;</span>,</span><br><span class="line">                <span class="attr">title</span>: <span class="string">&#x27;面板&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    panelShow.<span class="property">value</span> = !panelShow.<span class="property">value</span>;</span><br><span class="line">                &#125;, <span class="number">300</span>),</span><br><span class="line">            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">d</span>: <span class="string">&#x27;M332.16 883.84a40.96 40.96 0 0 0 58.24 0l338.56-343.04a40.96 40.96 0 0 0 0-58.24L390.4 140.16a40.96 40.96 0 0 0-58.24 58.24L640 512l-307.84 314.24a40.96 40.96 0 0 0 0 57.6z&#x27;</span>,</span><br><span class="line">            &#125;))),</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="title function_">watchEffectRef</span>(<span class="function">() =&gt;</span> <span class="string">`egg_settings_show_btn<span class="subst">$&#123;scheduleShow.value ? <span class="string">&#x27; active&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>),</span><br><span class="line">                <span class="attr">title</span>: <span class="string">&#x27;设置&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    scheduleShow.<span class="property">value</span> = !scheduleShow.<span class="property">value</span>;</span><br><span class="line">                &#125;, <span class="number">300</span>),</span><br><span class="line">            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">            &#125;, [</span><br><span class="line">                <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">d</span>: <span class="string">&#x27;M7.25325 705.466473a503.508932 503.508932 0 0 0 75.26742 121.391295 95.499302 95.499302 0 0 0 93.211173 31.07039 168.59902 168.59902 0 0 1 114.526906 16.257763 148.487566 148.487566 0 0 1 71.052444 83.456515 91.163899 91.163899 0 0 0 75.989987 61.538643 578.053784 578.053784 0 0 0 148.969278 0A91.163899 91.163899 0 0 0 662.380873 957.642436a148.487566 148.487566 0 0 1 72.256723-83.456515 168.59902 168.59902 0 0 1 114.406478-16.257763 95.61973 95.61973 0 0 0 93.331601-31.07039 503.508932 503.508932 0 0 0 75.267419-121.391295 84.29951 84.29951 0 0 0-18.545892-94.897163 138.251197 138.251197 0 0 1 0-197.140426 84.29951 84.29951 0 0 0 18.545892-94.897163 503.508932 503.508932 0 0 0-75.869559-121.391295 95.499302 95.499302 0 0 0-93.211173-31.070391A168.59902 168.59902 0 0 1 734.637596 149.812272a148.848849 148.848849 0 0 1-72.256723-83.456515A91.163899 91.163899 0 0 0 586.631741 4.817115a581.907476 581.907476 0 0 0-148.969277 0A91.163899 91.163899 0 0 0 361.311193 66.355757a148.848849 148.848849 0 0 1-71.413728 83.456515 168.59902 168.59902 0 0 1-114.406478 16.257763 95.378874 95.378874 0 0 0-93.3316 31.070391A503.508932 503.508932 0 0 0 7.25325 318.531721a84.29951 84.29951 0 0 0 18.545893 94.897163 140.057615 140.057615 0 0 1 41.30676 98.509999 140.057615 140.057615 0 0 1-41.30676 98.630427A84.29951 84.29951 0 0 0 7.25325 705.466473z m929.462315-349.240828a219.901294 219.901294 0 0 0 0 312.028615c0.842995 0.842995 2.649413 3.010697 1.806418 5.057971a427.398517 427.398517 0 0 1-63.104205 101.520696 9.513802 9.513802 0 0 1-9.032091 2.167702 255.547944 255.547944 0 0 0-173.777418 24.928569 231.823653 231.823653 0 0 0-111.275354 130.302957 6.984817 6.984817 0 0 1-6.021394 4.937543 492.790851 492.790851 0 0 1-126.328837 0 6.984817 6.984817 0 0 1-6.021394-4.937543 231.823653 231.823653 0 0 0-111.275353-130.302957 255.668372 255.668372 0 0 0-120.427872-30.468252 258.919924 258.919924 0 0 0-52.747408 5.539683 9.513802 9.513802 0 0 1-9.03209-2.167702 427.398517 427.398517 0 0 1-63.104205-101.520696c-0.842995-2.047274 0.963423-4.214976 1.806418-5.057971a221.82814 221.82814 0 0 0 64.910623-156.556233 221.707712 221.707712 0 0 0-65.512762-155.713238c-0.842995-0.842995-2.649413-3.010697-1.806418-5.057971a427.398517 427.398517 0 0 1 63.104205-101.520696 9.393374 9.393374 0 0 1 8.911662-2.167701 255.7888 255.7888 0 0 0 173.897847-24.92857 231.823653 231.823653 0 0 0 111.275353-130.302957 6.984817 6.984817 0 0 1 6.021394-4.937543 492.790851 492.790851 0 0 1 126.328837 0 6.984817 6.984817 0 0 1 6.021394 4.937543 231.823653 231.823653 0 0 0 111.275354 130.302957 255.547944 255.547944 0 0 0 173.777418 24.92857 9.513802 9.513802 0 0 1 9.032091 2.167701 423.063113 423.063113 0 0 1 62.983777 101.520696c0.963423 2.047274-0.842995 4.214976-1.68599 5.057971z&#x27;</span>,</span><br><span class="line">                &#125;),</span><br><span class="line">                <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">d</span>: <span class="string">&#x27;M512.086889 305.766366a206.292944 206.292944 0 1 0 206.172516 206.172517 206.413372 206.413372 0 0 0-206.172516-206.172517z m123.197713 206.172517a123.197713 123.197713 0 1 1-123.197713-123.077285 123.318141 123.318141 0 0 1 123.197713 123.077285z&#x27;</span>,</span><br><span class="line">                &#125;),</span><br><span class="line">            ])),</span><br><span class="line">            <span class="title function_">createElementNode</span>(<span class="string">&#x27;button&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_settings_reset_btn&#x27;</span>,</span><br><span class="line">                <span class="attr">title</span>: <span class="string">&#x27;重置&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">                <span class="attr">onclick</span>: <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// 任务配置</span></span><br><span class="line">                    <span class="title function_">GM_setValue</span>(<span class="string">&#x27;taskConfig&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line">                    <span class="comment">// 设置</span></span><br><span class="line">                    <span class="title function_">GM_setValue</span>(<span class="string">&#x27;studySettings&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line">                    <span class="comment">// 最大阅读</span></span><br><span class="line">                    <span class="title function_">GM_setValue</span>(<span class="string">&#x27;maxRead&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line">                    <span class="comment">// 最大观看</span></span><br><span class="line">                    <span class="title function_">GM_setValue</span>(<span class="string">&#x27;maxWatch&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line">                    <span class="comment">// 主题色</span></span><br><span class="line">                    <span class="title function_">GM_setValue</span>(<span class="string">&#x27;themeColor&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line">                    <span class="comment">// 刷新页面</span></span><br><span class="line">                    location.<span class="title function_">reload</span>();</span><br><span class="line">                &#125;, <span class="number">300</span>),</span><br><span class="line">            &#125;, <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;svg&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                <span class="attr">viewBox</span>: <span class="string">&#x27;0 0 1024 1024&#x27;</span>,</span><br><span class="line">                <span class="attr">class</span>: <span class="string">&#x27;egg_icon&#x27;</span>,</span><br><span class="line">            &#125;, [</span><br><span class="line">                <span class="title function_">createNSElementNode</span>(<span class="string">&#x27;path&#x27;</span>, <span class="literal">undefined</span>, &#123;</span><br><span class="line">                    <span class="attr">d</span>: <span class="string">&#x27;M943.8 484.1c-17.5-13.7-42.8-10.7-56.6 6.8-5.7 7.3-8.5 15.8-8.6 24.4h-0.4c-0.6 78.3-26.1 157-78 223.3-124.9 159.2-356 187.1-515.2 62.3-31.7-24.9-58.2-54-79.3-85.9h77.1c22.4 0 40.7-18.3 40.7-40.7v-3c0-22.4-18.3-40.7-40.7-40.7H105.5c-22.4 0-40.7 18.3-40.7 40.7v177.3c0 22.4 18.3 40.7 40.7 40.7h3c22.4 0 40.7-18.3 40.7-40.7v-73.1c24.2 33.3 53 63.1 86 89 47.6 37.3 101 64.2 158.9 79.9 55.9 15.2 113.5 19.3 171.2 12.3 57.7-7 112.7-24.7 163.3-52.8 52.5-29 98-67.9 135.3-115.4 37.3-47.6 64.2-101 79.9-158.9 10.2-37.6 15.4-76 15.6-114.6h-0.1c-0.3-11.6-5.5-23.1-15.5-30.9zM918.7 135.2h-3c-22.4 0-40.7 18.3-40.7 40.7V249c-24.2-33.3-53-63.1-86-89-47.6-37.3-101-64.2-158.9-79.9-55.9-15.2-113.5-19.3-171.2-12.3-57.7 7-112.7 24.7-163.3 52.8-52.5 29-98 67.9-135.3 115.4-37.3 47.5-64.2 101-79.9 158.8-10.2 37.6-15.4 76-15.6 114.6h0.1c0.2 11.7 5.5 23.2 15.4 30.9 17.5 13.7 42.8 10.7 56.6-6.8 5.7-7.3 8.5-15.8 8.6-24.4h0.4c0.6-78.3 26.1-157 78-223.3 124.9-159.2 356-187.1 515.2-62.3 31.7 24.9 58.2 54 79.3 85.9h-77.1c-22.4 0-40.7 18.3-40.7 40.7v3c0 22.4 18.3 40.7 40.7 40.7h177.3c22.4 0 40.7-18.3 40.7-40.7V175.8c0.1-22.3-18.2-40.6-40.6-40.6z&#x27;</span>,</span><br><span class="line">                &#125;),</span><br><span class="line">            ])),</span><br><span class="line">        ]),</span><br><span class="line">        <span class="comment">// 任务按钮</span></span><br><span class="line">        <span class="title class_">TaskBtn</span>(),</span><br><span class="line">        <span class="title function_">createElementNode</span>(<span class="string">&#x27;div&#x27;</span>, <span class="literal">undefined</span>, &#123; <span class="attr">class</span>: <span class="string">&#x27;egg_settings_item&#x27;</span> &#125;, [</span><br><span class="line">            <span class="title class_">SettingsPanel</span>(&#123; <span class="attr">show</span>: scheduleShow &#125;),</span><br><span class="line">        ]),</span><br><span class="line">    ]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日常工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习工具 </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高效搜索</title>
      <link href="/posts/43428.html"/>
      <url>/posts/43428.html</url>
      
        <content type="html"><![CDATA[<h1>高效搜索</h1><h2 id="信息分类">信息分类</h2><ul><li>信息</li><li>学习</li><li>素材</li><li>工具</li></ul><h2 id="信息">信息</h2><h3 id="信息渠道效率">信息渠道效率</h3><p>谷歌 &gt; 微信知道 &gt; 短视频 &gt; 百度</p><h3 id="高效搜索命令">高效搜索命令</h3><p><code>&quot;关键词&quot;  </code>  双引号  限定关键词</p><p><code>intitle:标题</code> 限定标题</p><p><code>allintitle: 标题1 标题2 </code></p><p><code>intext: 文章内容</code> 文章内容必定包含文章内容</p><p><code>inurl 限定网址</code></p><p><code>site: 限定域名</code></p><p><code>imagesize: 2560 x  1440</code></p><p><code>filetype: ppt</code></p><p>可组合使用</p><h3 id="直奔信息源头">直奔信息源头</h3><p>了解行业   <code>filetype: pdf</code></p><p>了解医药   备案网站</p><p>了解产品    电商网站</p><p>了解动态    X(Tiwwer, Youtube)</p><p>…</p><h2 id="知识">知识</h2><p>存在形式</p><ul><li>网页</li><li>电子书</li><li>电子文档</li><li>学术论文</li><li>笔记</li><li>只是平台</li><li>视频网站</li><li>AI电脑</li></ul><p>免费完全公开</p><p>免费私域</p><p>收费私域</p><p>国内</p><p>都差不多知道,不写了</p><p>国外</p><ul><li>谷歌图书 谷歌学术 维基百科</li><li>Udemy</li><li>EDX</li><li>coursera</li><li>wolfram</li><li>可汗学院</li><li>YouTube</li><li>Doulingo</li></ul><h3 id="国内">国内</h3><p>国内开始有很多用爱发电的大神, 而随着内容电商和自媒体的兴起, 大家都浮躁了, 知识0成本的抄袭和短视频零碎的交付,导致网络上传播的都是<code>同质化</code>, <code>低质量</code>, <code>十八手的</code>, 零碎的知识垃圾</p><ul><li>b站</li><li>得到</li><li>知乎</li></ul><p>算是最后的希望</p><p>15年前的知识沉淀主要在  百度系列和一些论坛中</p><p>10年前                       知乎, 公众号</p><p>5年前                          短视频平台 , bilibili长视频, 得到音频APP</p><ul><li>pc到移动</li><li>文字到视频</li><li>音频交付知识</li></ul><p>国外</p><p>认准 Google  Youtube</p><p>选择角度</p><ul><li>想要的知识技能最可能附着在那类型载体上</li><li>看搜索知识技能的目的 (某某行业导航网址) (SimilarSites(同类网站搜索) Sci-hub Google Scholar,  网盘搜索引擎  学搜搜, 盘搜搜, 云盘狗)</li></ul><p><a href="https://www.youtube.com/watch?v=tiN6T1LewmQ">https://www.youtube.com/watch?v=tiN6T1LewmQ</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AQS源码解析</title>
      <link href="/posts/31851.html"/>
      <url>/posts/31851.html</url>
      
        <content type="html"><![CDATA[<h1><code>AQS</code>源码解析</h1><p>​<code>AQS</code>是Java里的一个<code>同步工具类</code>，全称为<code>AbstractQueuedSynchronizer</code>。它是<code>JUC</code>包中中实现锁和同步机制的基础。</p><p>​它可以被认为是一种框架或模板，用于实现多种同步器，比如<code>ReentrantLock</code>、<code>CountDownLatch</code>、<code>Semaphore</code> 、<code>ReentrantReadWriteLock</code>等。</p><p>作为本系列第一节， 我们先了解这些同步工具的共同的祖先(虽然实际上是聚合关系)   ----<code>AQS</code></p><p>在了解<code>AQS</code>之前, 我们要知道:</p><p><code>AQS</code>本质上是一个队列，它是将等待锁或资源的线程排队，并在锁或资源可用时将其唤醒。</p><p>建立在这个基础上, 方便理解后序讲解</p><p>我们以平常最常用的<code>ReentrantLock</code>为例</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ReentrantLock lock= <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一次获取锁</span></span><br><span class="line">lock.lock(); </span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 同步代码块块</span></span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    </span><br><span class="line">     <span class="comment">// 第一次释放锁</span></span><br><span class="line">    lock.unlock();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们点进<code>lock()</code>方法, 会发现调用的是<code>sync.lock();</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lock</span><span class="params">()</span> &#123;</span><br><span class="line">       sync.lock();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>sync</code>是什么呢? 这其实是<code>ReentrantLock</code>一个内部类<code>Sync</code>的实例</p><p><strong>Sync</strong>：是提供<code>AQS</code>实现的工具，类似于适配器，提供了抽象的lock()，便于快速创建非公平锁。</p><p>而<code>Sync</code>继承自<code>AQS(AbstractQueuedSynchronizer)</code>, 事实上, 上述几乎每个同步工具都又一个<code>Sync</code>的实现子类, 而且均继承自<code>AQS</code>, 这下就明白为什么说 <code>AQS</code>是一种框架或模板, 如果你想定义一个同步工具, 也完全可以通过继承<code>AQS</code>这个抽象类来实现, 文末我们会给出一个通过<code>AQS</code>简单自定义的互斥锁</p><p>而这个内部类也引出了我们本篇讲解的重点  <code>AQS</code></p><p>这是</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.AbstractQueuedSynchronizer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 互斥锁 Mutex 的实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Mutex</span> &#123;</span><br><span class="line">    <span class="comment">// 内部类 Sync 继承 AbstractQueuedSynchronizer</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Sync</span> <span class="keyword">extends</span> <span class="title class_">AbstractQueuedSynchronizer</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 尝试获取互斥锁</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> arg 获取锁的参数</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> 如果获取锁成功返回 true，否则返回 false</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">tryAcquire</span><span class="params">(<span class="type">int</span> arg)</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (compareAndSetState(<span class="number">0</span>, <span class="number">1</span>)) &#123; <span class="comment">// 尝试将状态从 0 设置为 1，表示成功获取锁</span></span><br><span class="line">                setExclusiveOwnerThread(Thread.currentThread()); <span class="comment">// 设置当前线程为独占线程</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// 获取锁成功</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 获取锁失败</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 尝试释放互斥锁</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> arg 释放锁的参数</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> 如果释放锁成功返回 true，否则返回 false</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">tryRelease</span><span class="params">(<span class="type">int</span> arg)</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (getState() == <span class="number">0</span>) &#123; <span class="comment">// 状态为 0 表示锁没有被持有</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalMonitorStateException</span>(); <span class="comment">// 抛出异常</span></span><br><span class="line">            &#125;</span><br><span class="line">            setExclusiveOwnerThread(<span class="literal">null</span>); <span class="comment">// 将独占线程设置为 null</span></span><br><span class="line">            setState(<span class="number">0</span>); <span class="comment">// 释放锁，将状态设置为 0</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// 释放锁成功</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 判断是否为独占线程持有互斥锁</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> 如果当前线程独占持有锁返回 true，否则返回 false</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">isHeldExclusively</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> getState() == <span class="number">1</span>; <span class="comment">// 状态为 1，表示当前线程独占持有锁</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Sync</span> <span class="variable">sync</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Sync</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取互斥锁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lock</span><span class="params">()</span> &#123;</span><br><span class="line">        sync.acquire(<span class="number">1</span>); <span class="comment">// 获取锁，如果锁已被持有，则当前线程进入阻塞状态</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放互斥锁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unlock</span><span class="params">()</span> &#123;</span><br><span class="line">        sync.release(<span class="number">1</span>); <span class="comment">// 释放锁</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断互斥锁是否被独占持有</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果锁被独占持有返回 true，否则返回 false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isLocked</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sync.isHeldExclusively();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个使用内部类和 <code>AQS </code>实现的互斥锁（<code>Mutex</code>）类。</p><ul><li><code>tryAcquire</code>：尝试获取资源。如果当前状态为0（未锁定），那么设置为1（锁定），并设 置当前线程为独占资源的线程。</li><li><code>tryRelease</code>：尝试释放资源。设置状态为0并清除持有资源的线程。</li><li><code>isHeldExclusively</code>：判断当前资源是否被独占。</li></ul>]]></content>
      
      
      <categories>
          
          <category> JUC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AQS </tag>
            
            <tag> JUC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CountDownLatch</title>
      <link href="/posts/39998.html"/>
      <url>/posts/39998.html</url>
      
        <content type="html"><![CDATA[<h1>CountDownLatch</h1><p><code>CountDownLatch</code>是一个<code>JUC</code>包下的同步工具   计数器</p><p>作用是:  使一个或者多个线程等待其他线程完成后再执行</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//构造一个用给定计数初始化的 CountDownLatch。</span></span><br><span class="line">CountDownLatch(<span class="type">int</span> count)</span><br><span class="line"><span class="comment">// 使当前线程在锁存器倒计数至零之前一直等待，除非线程被中断。</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">await</span><span class="params">()</span></span><br><span class="line"><span class="comment">// 使当前线程在锁存器倒计数至零之前一直等待，除非线程被中断或超出了指定的等待时间。</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">await</span><span class="params">(<span class="type">long</span> timeout, TimeUnit unit)</span></span><br><span class="line"><span class="comment">// 递减锁存器的计数，如果计数到达零，则释放所有等待的线程。</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">countDown</span><span class="params">()</span></span><br><span class="line"><span class="comment">// 返回当前计数。</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">getCount</span><span class="params">()</span></span><br><span class="line"><span class="comment">// 返回标识此锁存器及其状态的字符串。</span></span><br><span class="line">String <span class="title function_">toString</span><span class="params">()</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CountDownLathTest</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 每个线程去收集 1 颗龙珠</span></span><br><span class="line">    <span class="comment">// 定义需要收集龙珠的目标数量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DRAGON_BALL_TOTAL_NUM</span> <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 定义需要等待的线程数量</span></span><br><span class="line">        <span class="type">CountDownLatch</span> <span class="variable">countDownLatch</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CountDownLatch</span>(DRAGON_BALL_TOTAL_NUM);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> i;</span><br><span class="line">            <span class="comment">// 每个线程收集完一颗龙珠后, countDownlatch(减数板) - 1</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;收集到第 &quot;</span> + index + <span class="string">&quot;号龙珠!&quot;</span>);</span><br><span class="line">                countDownLatch.countDown();</span><br><span class="line">            &#125;).start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 只有当countDownlatch(减数板)数量减少为 0 时, 主线程才会被唤醒, 也就是 7 颗龙珠收集完毕</span></span><br><span class="line">            countDownLatch.await();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;龙珠收集完毕!!! \n&quot;</span> +   <span class="string">&quot;召唤神龙!!&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由上述代码可见, <code>CountDownLatch</code> 通过计数定义了线程之间的同步关系</p><p><code>JUC</code>包下所有同步工具离不开<code>ASQ</code>的框架(不得不感叹Doug Lea教授强大的抽象和设计)</p>]]></content>
      
      
      <categories>
          
          <category> JUC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JUC </tag>
            
            <tag> CountDownLatch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker</title>
      <link href="/posts/40992.html"/>
      <url>/posts/40992.html</url>
      
        <content type="html"><![CDATA[<h1>Docker</h1><h2 id="简介">简介</h2><p><img src="Docker.assets/image-20231217101955797.png" alt="image-20231217101955797"></p><p><code>docker</code>就好比传统货运集装箱, 统一了应用打包上云的方式</p><p>Docker 是管理容器的引擎</p><p>Docker 为应用、部署平台， 提供了虚拟化技术</p><h3 id="VM-VS-Container">VM   VS  Container</h3><p><img src="Docker.assets/image-20231217102250527.png" alt="image-20231217102250527"></p><p>VM 相对笨重， <code>guestOS</code> 独立操作系统对CPU, 内存等资源消耗较大</p><p>共享Linux内核，使用 <code>namespace</code> 和 <code>cgroup</code> 来实现容器化的隔离和资源限制。</p><p><img src="Docker.assets/image-20231217102643263.png" alt="image-20231217102643263"></p><p>每种技术都有自己的运行场景</p><h3 id="Docker优势">Docker优势</h3><p>对于开发者而言 ：Build once, Run anywhere。</p><p>对运维人员而言 :    Configure once、Run anything。</p><h4 id="容器是如何工作的">容器是如何工作的</h4><p><img src="Docker.assets/image-20231217103113202.png" alt="image-20231217103113202"></p><p>Docker run</p><p><img src="Docker.assets/image-20231217121828276.png" alt="image-20231217121828276"></p><h3 id="安装Docker">安装Docker</h3><p>Docker只能安装在Linux上欧, 因为docker的container model 是基于linux内核的(WSL(Windows Sub Linux)也可以)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 安装</span><br><span class="line">yum install docker</span><br><span class="line">// 检验安装是否成功</span><br><span class="line">docker --version</span><br><span class="line">// 启动</span><br><span class="line">systemctl start docker</span><br><span class="line">// 换镜像源</span><br><span class="line">sudo vim /etc/docker/daemon.json</span><br><span class="line">内容如下：</span><br><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;:[&quot;https://m9r2r2uj.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">// 保存退出</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">// 重启docker</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="Docker的常用命令">Docker的常用命令</h2><h3 id="帮助命令">帮助命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker version  // 显示docker的版本信息</span><br><span class="line">docker info// docker详细信息， 如 镜像，容器的数量</span><br><span class="line">docker 命令 --help // 帮助命令</span><br></pre></td></tr></table></figure><p>帮助文档h地址： <a href="https://docs.docker.com/engine/reference/commandline/">https://docs.docker.com/engine/reference/commandline/</a></p><h3 id="镜像命令">镜像命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images  // 查看所有本地镜像</span><br><span class="line"></span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE                       busybox      latest    f5fb98afcf9f   12 days ago   4.26MB  </span><br><span class="line"></span><br><span class="line">// 镜像仓库源</span><br><span class="line">REPOSITORY</span><br><span class="line">// 镜像的标签</span><br><span class="line">TAG</span><br><span class="line">// 镜像的id</span><br><span class="line">IMAGE ID   </span><br><span class="line">// 镜像的创建时间</span><br><span class="line">CREATED</span><br><span class="line">// 镜像的大小</span><br><span class="line">SIZE</span><br><span class="line"></span><br><span class="line">// 可选项</span><br><span class="line"></span><br><span class="line">// 列出所有id</span><br><span class="line">-a, --all</span><br><span class="line">//  只显示镜像的id</span><br><span class="line">-q, --quiet</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker search  // dockerhub 搜索镜像名</span><br><span class="line"></span><br><span class="line">// 样例</span><br><span class="line">docker search mysql</span><br><span class="line">// 输出</span><br><span class="line">NAME                            DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">mysql                           MySQL is a widely used, open-source relation…   14709     [OK]</span><br><span class="line">mariadb                         MariaDB Server is a high performing open sou…   5614      [OK]</span><br><span class="line"></span><br><span class="line">// 可选项</span><br><span class="line">// 过滤， 只输出star&gt;=3000的镜像</span><br><span class="line">--fliter=STARS=3000</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull 镜像名[:tag] // 下载镜像, 不写tag，默认是latest</span><br><span class="line"></span><br><span class="line">#下载镜像docker pu11镜像名[：tag]</span><br><span class="line">docker pull mysql</span><br><span class="line"></span><br><span class="line">Using default tag:1 atest // 如果不写tag,默认就是latest</span><br><span class="line">latest:Pulling from library/mysql</span><br><span class="line">5b54d594fba7:Pu11comp1ete // 分层下载，docker iamge的核心 联合文件系统(可重用分层)</span><br><span class="line">07e7d6a8a868:Pull complete</span><br><span class="line">abd946892310:Pu11 complete</span><br><span class="line">dd8f4d07efa5:Pull complete</span><br><span class="line">076d396a6205:PullTcomplete</span><br><span class="line">cf6b2b93048f:Pul1 complete</span><br><span class="line">530904b4a8b7:Pu11 complete</span><br><span class="line">fble55059a95:Pull complete</span><br><span class="line">4bd29a0dcde8:Pull complete</span><br><span class="line">b94a001c6ec7:Pul1 complete</span><br><span class="line">cb77cbeb422b:Pull complete</span><br><span class="line">2a35cdbd42cc:Pul1 complete</span><br><span class="line">Digest:sha256:dc255ca50a42b3589197000b1f9bab2b4e010158d1a9f56c3db6ee145506f625</span><br><span class="line">Status Down loaded newer image for mysql:latest</span><br><span class="line">docker.io/1 ibrary/mys q1:latest  // 真实地址</span><br><span class="line"></span><br><span class="line">// 两者等价</span><br><span class="line">docker pul1 mysql</span><br><span class="line">docker pull docker.io/library/mysq1:latest</span><br><span class="line"></span><br><span class="line">// 指定版本下载</span><br><span class="line">docker pull mysq1:5.7</span><br><span class="line">5.7:Pulling from library/mysql</span><br><span class="line">5b54d594fba7:Already exists  // 联合文件系统， 重用上次的分层</span><br><span class="line">07e7d6a8a868:Already exists</span><br><span class="line">abd946892310:Already exists</span><br><span class="line">dd8f4d07efa5:Already exists</span><br><span class="line">076d396a6205:Already exists</span><br><span class="line">cf6b2b93048f:Already exists</span><br><span class="line">530904b4a8b7:Already exists</span><br><span class="line">a37958cbebcf:Pull complete</span><br><span class="line">04960017f638:Pu11comp1ete</span><br><span class="line">e1285defOd2a:Pull complete</span><br><span class="line">670cb3a9678e:Pull complete</span><br><span class="line">Digest:sha256:e4d39b85118358ffef6adc5e8c7d00e49d20b25597e6ffdc994696f10e3dc8e2</span><br><span class="line">Status:Downloaded newer image for mysq1:5.7</span><br><span class="line">docker.io/library/mysq1:5.7</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker rmi -f 容器id // 删除指定的容器</span><br><span class="line">docker rmi -f 容器id 容器id 容器id 容器id // 删除多个容器</span><br><span class="line">docker rmi -f $(docker images -aq) // 删除全部的容器 </span><br></pre></td></tr></table></figure><h3 id="容器命令">容器命令</h3><p>通过镜像创建容器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull centos</span><br></pre></td></tr></table></figure><p>新容器并启动</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run [可选参数] image</span><br><span class="line"></span><br><span class="line">// 参数说明</span><br><span class="line">--name=&quot;Name&quot;   // 容器名字 tomcat01 tomcat02  用来区分容器</span><br><span class="line">-d// 后台方式运行</span><br><span class="line">-it // 使用交互方式运行, 进入容器查看内容</span><br><span class="line">-p// 指定容器的端口  -p  8080:8080</span><br><span class="line">-p IP:主机端口:容器端口</span><br><span class="line">-p 主机端口:容器端口</span><br><span class="line">-p 容器端口</span><br><span class="line"></span><br><span class="line">-P// 指定随机端口</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 测试，启动并进入容器</span><br><span class="line">[root@ZS /]docker run -it centos /bin/bash</span><br><span class="line">[root@e4eccc01b495 /]1s // 查看容器内的centos,基础版本，很多命令都是不完善的！</span><br><span class="line">bin dev etc home lib lib64 lost+found media mnt opt proc root run sbin srv sys tmp usr</span><br><span class="line">var</span><br><span class="line">// 从容器中退回主机</span><br><span class="line">[root@e4eccc01b495 /]exit</span><br><span class="line">exit</span><br><span class="line">[root@ZS /]1s</span><br><span class="line">bin dev home kuangshen lib64</span><br><span class="line">media opt proc run share sys usr www</span><br><span class="line">boot etc</span><br><span class="line">hpt lib</span><br><span class="line">lost+found mnt</span><br><span class="line">patch root sbin srv</span><br><span class="line">tmp var</span><br></pre></td></tr></table></figure><h4 id="列出所有运行容器">列出所有运行容器</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// docker ps 命令</span><br><span class="line"></span><br><span class="line">-a  // 列出当前运行和之前运行过的容器</span><br><span class="line">-n=?  // 列出最近创建的容器</span><br><span class="line">-p  // 只列出id</span><br></pre></td></tr></table></figure><h4 id="退出容器">退出容器</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exit  // 容器停止运行并退出</span><br><span class="line">Ctrl + P + Q  // 容器不停止退出</span><br></pre></td></tr></table></figure><h4 id="删除容器">删除容器</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker rm 容器id// 删除该镜像</span><br><span class="line"></span><br><span class="line">docker rm $(docker ps -ap)   // 删除所有容器</span><br><span class="line"></span><br><span class="line">docker ps -aq | xargs docker rm</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="启动和停止容器的操作">启动和停止容器的操作</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker start 容器id</span><br><span class="line"></span><br><span class="line">docker restart 容器id</span><br><span class="line"></span><br><span class="line">docker stop 容器id</span><br><span class="line"></span><br><span class="line">docker kill 容器id</span><br></pre></td></tr></table></figure><h4 id="常用其他命令">常用其他命令</h4><p>后台启动容器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d 镜像名</span><br><span class="line"></span><br><span class="line">// docker ps 发现 停止了</span><br><span class="line"></span><br><span class="line">// docker 容器使用后台运行, 就必须要有一个前台程序, docker发现没有应用, 就会自动</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shio Jottings</title>
      <link href="/posts/31848.html"/>
      <url>/posts/31848.html</url>
      
        <content type="html"><![CDATA[<h1>Jotting</h1><p>​每个人都会经过这个阶段, 喜欢标新立意的概念, 若是有人出来反对主流观念, 反对家庭,工作,责任的束缚, 并且技巧又很出色, 往往就能俘获很多拥护, 你会觉得反抗比什么都难得可贵</p><p>​可在尝试过后又发现主流能成为主流是有道理的, 这是属于大多数人的最简单的路径, 逆流而上太痛苦了</p><p>​于是你学会了欣赏主流生活,奇怪的是, 当你开始热爱主流的东西, 反而逐渐积累起逆流而上的勇气,因为你不是为了逃避而逆行, 你不怕回到芸芸众生当中, 而这会给予你真正的勇气</p>]]></content>
      
      
      <categories>
          
          <category> Jottings </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jottings </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试题思路</title>
      <link href="/posts/39628.html"/>
      <url>/posts/39628.html</url>
      
        <content type="html"><![CDATA[<h1>线程不安全的本质:</h1><p>线程内存存副本</p><ul><li>更改副本不可见,互相覆盖(可见性)</li><li>线程切换, 更改操作不具有原子性(原子性)</li><li>有序性</li></ul><p>类没有状态, 成员变量一定线程安全</p><p>成员变量只是可读也一定是线程安全的</p><p>修改成员变量时加互斥锁也一定是线程安全的</p><h2 id="String为什么线程安全">String为什么线程安全</h2><p>final 只读 光这一点不够, 还因为是private 无法更改数组某一元素</p><p>因为字符串是不可变的，所以在它创建的时候HashCode就被缓存了，不需要重新计算。这就使得字符串很适合作为Map中的键，字符串的处理速度要快过其它的键对象。这就是HashMap中的键往往都使用字符串。</p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
